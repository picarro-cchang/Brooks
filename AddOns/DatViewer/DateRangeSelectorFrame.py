#!/usr/bin/env python
# -*- coding: CP1252 -*-
#
# generated by wxGlade 0.7.0 on Thu Nov 12 08:07:20 2015
#

import wx

# begin wxGlade: dependencies
import gettext
# end wxGlade

# begin wxGlade: extracode
import wx.lib.masked as masked
# end wxGlade


class DateRangeSelectorFrame(wx.Dialog):
    def __init__(self, *args, **kwds):
        # begin wxGlade: DateRangeSelectorFrame.__init__
        kwds["style"] = wx.CAPTION | wx.CLOSE_BOX | wx.MINIMIZE_BOX | wx.SYSTEM_MENU
        wx.Dialog.__init__(self, *args, **kwds)
        self.label_1 = wx.StaticText(self, wx.ID_ANY, _("Start Date"))
        self.StartDatePicker = wx.DatePickerCtrl(self, wx.ID_ANY)
        self.label_2 = wx.StaticText(self, wx.ID_ANY, _("Start Time"))
        self.StartTimeCtrl = masked.TimeCtrl(self, -1)
        self.spin_start = wx.SpinButton(self, wx.ID_ANY , style=wx.SP_VERTICAL)
        self.sizer_15_staticbox = wx.StaticBox(self, wx.ID_ANY, _("Select Starting Point"))
        self.label_4 = wx.StaticText(self, wx.ID_ANY, _("End Date"))
        self.EndDatePicker = wx.DatePickerCtrl(self, wx.ID_ANY)
        self.label_5 = wx.StaticText(self, wx.ID_ANY, _("End Time"))
        self.EndTimeCtrl = masked.TimeCtrl(self, -1)
        self.spin_end = wx.SpinButton(self, wx.ID_ANY , style=wx.SP_VERTICAL)
        self.sizer_10_staticbox = wx.StaticBox(self, wx.ID_ANY, _("Select Ending Point"))
        self.label_3 = wx.StaticText(self, wx.ID_ANY, _("TimeZone"))
        self.choiceTimeZone = wx.Choice(self, wx.ID_ANY, choices=[])
        self.chkPrivateLog = wx.CheckBox(self, wx.ID_ANY, _("Data files are saved in directory trees named by date and time."))
        self.btnOK = wx.Button(self, wx.ID_ANY, _("OK"))
        self.btnCancel = wx.Button(self, wx.ID_ANY, _("Cancel"))

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_DATE_CHANGED, self.OnStartDateChanged, self.StartDatePicker)
        self.Bind(wx.EVT_DATE_CHANGED, self.OnEndDateChanged, self.EndDatePicker)
        self.Bind(wx.EVT_BUTTON, self.OnOKClicked, self.btnOK)
        self.Bind(wx.EVT_BUTTON, self.OnCancelClicked, self.btnCancel)
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: DateRangeSelectorFrame.__set_properties
        self.SetTitle(_("Select Date Range"))
        self.SetBackgroundColour(wx.SystemSettings_GetColour(wx.SYS_COLOUR_3DLIGHT))
        self.label_1.SetFont(wx.Font(10, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, ""))
        self.label_2.SetFont(wx.Font(10, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, ""))
        self.StartTimeCtrl.SetMinSize((100, 25))
        self.spin_start.SetMinSize((25, 25))
        self.label_4.SetFont(wx.Font(10, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, ""))
        self.label_5.SetFont(wx.Font(10, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, ""))
        self.EndTimeCtrl.SetMinSize((100, 25))
        self.spin_end.SetMinSize((25, 25))
        self.label_3.SetFont(wx.Font(10, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, ""))
        self.choiceTimeZone.SetMinSize((270, 24))
        self.chkPrivateLog.SetFont(wx.Font(10, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, ""))
        self.btnOK.SetFont(wx.Font(10, wx.DEFAULT, wx.NORMAL, wx.BOLD, 0, ""))
        self.btnCancel.SetFont(wx.Font(10, wx.DEFAULT, wx.NORMAL, wx.BOLD, 0, ""))
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: DateRangeSelectorFrame.__do_layout
        sizer_7 = wx.BoxSizer(wx.VERTICAL)
        sizer_8 = wx.BoxSizer(wx.VERTICAL)
        sizer_1 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_2 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_9 = wx.BoxSizer(wx.HORIZONTAL)
        self.sizer_10_staticbox.Lower()
        sizer_10 = wx.StaticBoxSizer(self.sizer_10_staticbox, wx.HORIZONTAL)
        grid_sizer_end = wx.GridSizer(2, 2, 0, 0)
        sizer_end = wx.BoxSizer(wx.HORIZONTAL)
        self.sizer_15_staticbox.Lower()
        sizer_15 = wx.StaticBoxSizer(self.sizer_15_staticbox, wx.HORIZONTAL)
        grid_sizer_start = wx.GridSizer(2, 2, 0, 0)
        sizer_start = wx.BoxSizer(wx.HORIZONTAL)
        grid_sizer_start.Add(self.label_1, 0, wx.ALIGN_CENTER | wx.ALL, 10)
        grid_sizer_start.Add(self.StartDatePicker, 0, wx.ALIGN_CENTER, 0)
        grid_sizer_start.Add(self.label_2, 0, wx.ALIGN_CENTER | wx.ALL, 10)
        sizer_start.Add(self.StartTimeCtrl, 1, wx.ALIGN_CENTER | wx.BOTTOM | wx.TOP, 10)
        sizer_start.Add(self.spin_start, 0, wx.ALIGN_CENTER | wx.BOTTOM | wx.TOP, 10)
        grid_sizer_start.Add(sizer_start, 1, 0, 0)
        sizer_15.Add(grid_sizer_start, 1, 0, 0)
        sizer_9.Add(sizer_15, 1, wx.ALL, 5)
        grid_sizer_end.Add(self.label_4, 0, wx.ALIGN_CENTER | wx.ALL, 10)
        grid_sizer_end.Add(self.EndDatePicker, 0, wx.ALIGN_CENTER, 0)
        grid_sizer_end.Add(self.label_5, 0, wx.ALIGN_CENTER | wx.ALL, 10)
        sizer_end.Add(self.EndTimeCtrl, 1, wx.ALIGN_CENTER | wx.BOTTOM | wx.TOP, 10)
        sizer_end.Add(self.spin_end, 0, wx.ALIGN_CENTER | wx.BOTTOM | wx.TOP, 10)
        grid_sizer_end.Add(sizer_end, 1, 0, 0)
        sizer_10.Add(grid_sizer_end, 1, 0, 0)
        sizer_9.Add(sizer_10, 1, wx.ALL, 5)
        sizer_8.Add(sizer_9, 1, 0, 0)
        sizer_2.Add(self.label_3, 0, wx.ALIGN_CENTER | wx.ALL, 10)
        sizer_2.Add(self.choiceTimeZone, 0, wx.ALIGN_CENTER | wx.ALL, 10)
        sizer_8.Add(sizer_2, 0, 0, 0)
        sizer_8.Add(self.chkPrivateLog, 0, wx.ALL, 10)
        sizer_1.Add((20, 20), 1, 0, 0)
        sizer_1.Add(self.btnOK, 1, wx.ALL | wx.EXPAND, 10)
        sizer_1.Add((20, 20), 1, 0, 0)
        sizer_1.Add(self.btnCancel, 1, wx.ALL, 10)
        sizer_1.Add((20, 20), 1, 0, 0)
        sizer_8.Add(sizer_1, 0, 0, 0)
        sizer_7.Add(sizer_8, 1, 0, 0)
        self.SetSizer(sizer_7)
        sizer_7.Fit(self)
        self.Layout()
        self.Centre()
        # end wxGlade

    def OnStartDateChanged(self, event):  # wxGlade: DateRangeSelectorFrame.<event_handler>
        print "Event handler 'OnStartDateChanged' not implemented!"
        event.Skip()

    def OnEndDateChanged(self, event):  # wxGlade: DateRangeSelectorFrame.<event_handler>
        print "Event handler 'OnEndDateChanged' not implemented!"
        event.Skip()

    def OnOKClicked(self, event):  # wxGlade: DateRangeSelectorFrame.<event_handler>
        print "Event handler 'OnOKClicked' not implemented!"
        event.Skip()

    def OnCancelClicked(self, event):  # wxGlade: DateRangeSelectorFrame.<event_handler>
        print "Event handler 'OnCancelClicked' not implemented!"
        event.Skip()

# end of class DateRangeSelectorFrame
if __name__ == "__main__":
    gettext.install("app") # replace with the appropriate catalog name

    app = wx.PySimpleApp(0)
    wx.InitAllImageHandlers()
    DateRangeSelector = DateRangeSelectorFrame(None, wx.ID_ANY, "")
    app.SetTopWindow(DateRangeSelector)
    DateRangeSelector.Show()
    app.MainLoop()