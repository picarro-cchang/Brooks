[Mode]
inject_mode=automatic

[ValveSequence]
steps="""
init:
    0xFF,0x00,4     #shut all valves for 1 sec
    0xFF,0x02,10   #pump out
    # 0xFF,0x02,180 #pump out; vacuum leak test
    0xFF,0x00,0     #40 let dry gas in inlet
    # 0xFF,0x04,5000 #connect DAS; vacuum leak test
    # 0x00,0x00,0   #break; vacuum leak teast
    0xFF,0x00,0     #160 [was flow through to DAS]
break1:
    0x0,0x00,00     #break for wet flush
wetFlush:
    0xFF,0x01,0    #40 let dry gas in inlet
    0xFF,0x04,0    #40 flow through to DAS
    0xFF,0x02,0   #160 pump out
wetFlushDone:
    0x0,0x00,00     #end break for wet flush
lastClean:
    0xFF,0x01,0    #40 let dry gas in inlet
    0xFF,0x04,0    #40 flow through to DAS
    0xFF,0x02,0   #240 pump out
    # 0xFF,0x00,0   #preload with N2 before injection
    0xFF,0x00,0     #partial pump out to leave low pressure N2 preload
    0xFF,0x00,0     #all closed
lastCleanDone:
    0x00,0x00,0     #break
samplePrep:
    0xFF,0x00,0   #280 stay under vacuum after liquid injected
    0xFF,0x01,4     #pulse inlet for 1/4 sec
    0xFF,0x00,0   #wait for 30 sec
    0xFF,0x01,14    #[was pulse inlet for 1 sec]
    0xFF,0x01,4     #[was close inlet for 2 sec]
    0xFF,0x01,18    #open inlet for remainder of 6 sec total
    0xFF,0x00,0   #360 wait for 90 sec (2 min total wait)
sample:
    0xFF,0x04,10  #1320 sample for 2.5 min
    0xFF,0x00,4     #all closed
done:
    0x00,0x00,0     #break
septumVent:
    0xFF,0x02,10   # pump out old sample
    0xFF,0x01,10    # vent with carrier gas
septumChange:
    0x00,0x00,0
"""

[Output]
co2_conc_peak_mean="CO2_PEAK_MEAN",%14.3f
ch4_conc_mean="CH4_MEAN",%14.3f
h2o_conc_mean="H2O_MEAN",%14.3f
co2_conc_peak_std="CO2_PEAK_SD",%14.3f
ch4_conc_std="CH4_SD",%14.3f
h2o_conc_std="H2O_SD",%14.3f
date_time="DATE_TIME",%21s
description="Description",%-40s

[BatchMode]
risingLossThreshold = 1800
risingLossRateThreshold = 0
triggeredSolenoidValveStates = 0
triggeredSolenoidValveMask = 63
triggeredOutletValve = 0
triggeredInletValve = 0
setMeasSysModeTimeout = 15
measDuration = 60
preAutoValveControl = 5
autoValveControlDuration = 40
preThresModeDuration = 40

[Setup]
initial=StateStart
final=StateDone
error=StateError
# script=CoordinatorScripts.py

[Trays]
tray1=MT1-Frnt
tray2=MT1-Rear

[StateStart]
action="""
# Configure pulse holder
batchModeConfig = config["BatchMode"]
configBatchModeToDasReg(batchModeConfig)
logFunc("Set single frequency mode in MeasSystem\n")
setMeasSysMode("CO2peak_mode", float(batchModeConfig["setMeasSysModeTimeout"]))
# Store initial valve DAC values
lastValveDacValues = getValveDacValues() 
# Set loss rising threshold mode
setThresholdMode(1)
logCnt = 0
NEXT = "StateDetectPulse" 
"""

[StateDetectPulse]
action="""
sleep(2)
if logCnt == 5:
    logCnt = 0
    logFunc("Measure loss...\n")
else:
    logCnt += 1
    
if getThresholdMode() == 2:
    logFunc("Rising loss triggered\n")  
    if getMeasSysMode() == "CO2peak_mode":
        logFunc("Start measurement - disable pressure check in Sample Manager\n") 
        skipPressureCheck()
        NEXT = "StateMeasurement"
    else:
        logFunc("System not ready for measurement yet\n")
        NEXT = "StateResetValvesAndMode"
else:
    lastValveDacValues = getValveDacValues()    
    NEXT = "StateDetectPulse"
"""

[StateMeasurement]
action="""
 # Disable threshold mode
setThresholdMode(0)
logFunc("Switch to measurement mode in MeasSystem\n")
setMeasSysMode("CFADS_mode", float(batchModeConfig["setMeasSysModeTimeout"]))

sleep(float(batchModeConfig["measDuration"]))

NEXT = "StateResetValvesAndMode"
"""

[StateResetValvesAndMode]
action="""
logFunc("Show pulse analysis output\n")
result = getPulseResultDict('analyze_CFADS')
result["date_time"] = strftime("%Y-%m-%d %H:%M:%S", localtime())
fileDataFunc(result)

logFunc("Reset single frequency mode in MeasSystem\n") 
setMeasSysMode("CO2peak_mode", float(batchModeConfig["setMeasSysModeTimeout"]))

logFunc("Reset valves\n")
setValveDacValue("both", lastValveDacValues["inletDacValue"]/2, lastValveDacValues["outletDacValue"]/2)
sleep(1)
setValveDacValue("both", lastValveDacValues["inletDacValue"], lastValveDacValues["outletDacValue"])
sleep(float(batchModeConfig["preAutoValveControl"]))
logFunc("Turn on automatic valve control\n")    
setValveControlMode(1)  

sleep(float(batchModeConfig["autoValveControlDuration"]))
logFunc("Resume pressure check in Sample Manager\n") 
resumePressureCheck()

sleep(float(batchModeConfig["preThresModeDuration"]))   
lastValveDacValues = getValveDacValues()
logFunc("Turn on loss rising threshold mode\n")      
setThresholdMode(1)

NEXT = "StateDetectPulse"
"""
    
[StateDone]
action="""
#AUTOSAMPLER.close()
logFunc("Done!")
"""

[StateError]
action="""
logFunc("Error %s in state %s\n" % (ERROR_MSG,ERROR_STATE))
NEXT = "StateDone"
"""
