[Mode]
inject_mode=auto

[ValveSequence]
steps="""
init:
    0xFF,0x00,4 #shut all valves for 1 sec
    0xFF,0x02,80 #pump out
    0xFF,0x01,40 #let dry gas in inlet
    0xFF,0x02,40 #[was flow through to DAS]
    0xFF,0x02,120 #pump out
    0xFF,0x01,40 #40 let dry gas in inlet
    0xFF,0x04,40 #40 flow through to DAS
    0xFF,0x02,160 #160 pump out
    0xFF,0x01,40 #let dry gas in inlet
    0xFF,0x04,40 #flow through to DAS
    0xFF,0x02,240 #pump out
    0xFF,0x00,0 #preload with N2 before injection
    0xFF,0x00,0 #partial pump out to leave low pressure N2 preload
    0xFF,0x00,0 #all closed
break:
    0x00,0x00,0 #break
samplePrep:    
    0xFF,0x00,280 #stay under vacuum after liquid injected
    0xFF,0x01,4 #pulse inlet for 1/4 sec
    0xFF,0x00,120 #wait for 30 sec
    0xFF,0x01,14 #[was pulse inlet for 1 sec]
    0xFF,0x01,4 #[was close inlet for 2 sec]
    0xFF,0x01,18 #open inlet for remainder of 6 sec total
    0xFF,0x00,360 #wait for 90 sec (2 min total wait)
sample:
    0xFF,0x04,600 #sample for 2.5 min (changed from 1320)
    0xFF,0x00,4 #all closed
done:
    0x00,0x00,0     #break
septumVent:
    0xFF,0x02,120   # pump out old sample
    0xFF,0x01,40    # vent with carrier gas
septumChange:
    0x00,0x00,0
"""

[Output]
line="Line",%6s
analysis="Analysis",%10s
timeCode="Time Code",%22s
port = "Port",%15s
injNum = "Inj Nr",%8d
D_1816_mean="d(18_16)Mean",%14.3f
D_DH_mean="d(D_H)Mean",%14.3f
H2O_mean="H2O_Mean",%14.0f
ignore="Ignore",%8d
Good="Good",%5d
Identifier 1="Identifier 1",%40s
Identifier 2="Identifier 2",%40s
gasConfig="Gas Configuration",%20s
DAYS_SINCE_JAN_mean="days_Mean",%14.5f
D_1816_std_dev="d(18_16)_SD",%14.3f
D_DH_std_dev="d(D_H)_SD",%14.3f
H2O_std_dev="H2O_SD",%14.0f
D_1816_slope="d(18_16)_Sl",%14.3f
D_DH_slope="d(D_H)_Sl",%14.3f
H2O_slope="H2O_Sl",%14.2f
trayName="Tray",%10s
sampleNum="Sample",%8s
jobNum="Job",%8d
methodName="Method",%10s

[Trays]
tray1=MT1-Frnt
tray2=MT1-Rear

[Setup]
initial=StateStart
final=StateDone
error=StateError
script=CoordinatorScripts.py

[StateStart]
action="""
i = 0
# sendValveSequence(config["ValveSequence"])
NEXT = "StateLoop"
AUTOSAMPLER = DummyAutosampler(tray="MT1-Rear")
lineNum = 0
currentSampleNum = -1
currentTrayName  = ""
injNum = -1
"""

[StateLoop]
action="""

logString = AUTOSAMPLER.getLog()
injNum += 1
logDate, logTime, injTime, trayName, sampleNum, jobNum, methodName = parseAutosamplerLog(logString)

if currentSampleNum != sampleNum or currentTrayName != trayName:
    incrAnalysisNumber()
    currentSampleNum = sampleNum
    currentTrayName  = trayName
    injNum = 1
    
seqNum = getAnalysisNumber()
analysis = "P-%d" % seqNum   
lineNum += 1

date, time = calcInjectDateTime(logDate,logTime,injTime)
timeCode = date + " " + time
gasConfig = "H2O"

logFunc("%d " % i)
fileDataFunc(dict(line=lineNum,analysis=analysis,timeCode=timeCode,gasConfig=gasConfig,injNum=injNum,
    date=date,time=time,trayName=trayName,sampleNum=sampleNum,jobNum=jobNum,methodName=methodName))

i += 1
NEXT = "StateWork"
"""

[StateWork]
action="""
sleep(2.0)
NEXT = "StateLoop"
"""

[StateDone]
action="""
AUTOSAMPLER.close()
logFunc("Done!")
"""

[StateError]
action="""
logFunc("Error %s in state %s\n" % (ERROR_MSG,ERROR_STATE))
NEXT = "StateDone"
"""
