# 2010-06-20 sze This coordinator script is for characterizing the proportional valves

[UserEditableParams]
num_disp_params = 0

[Mode]
inject_mode=automatic

[Files]
output = "C:\PressureCal\ValveCharacterization"
log = "C:\PressureCal\ValveCharacterization"

[Output]
time="EpochTime",%12.1f
inlet="InletValve",%10.0f
outlet="OutletValve",%10.0f
pressure="Pressure",%10.2f
stage="Stage",%5s

[Setup]
initial = StateStart
final = StateDone
error = StateError

[StateStart]
action = """
setValveMinDac("outlet",0)
setValveMaxDac("outlet",65500)
setValveMinDac("inlet",0)
setValveMaxDac("inlet",65500)
logFunc("Opening cavity to atmospheric pressure.\n")
startInletValveControl(900, 0)
NEXT = "StateWaitForPressure"
"""

[StateWaitForPressure]
action = """
p = getCavityPressure()
sleep(2.0)
if getValveDacValues()["inletDacValue"] < 65500 or abs(getCavityPressure()-p)>0.3:
    pnew = getCavityPressure()
    valveDacs = getValveDacValues()
    inlet =  valveDacs["inletDacValue"]
    outlet = valveDacs["outletDacValue"]
    fileDataFunc(dict(time=time.time(),inlet=inlet,outlet=outlet,pressure=pnew,stage=1))
    NEXT = "StateWaitForPressure"
else:
    NEXT = "StateAtAtmosphere"
"""
[StateAtAtmosphere]
action = """
pAtmos = getCavityPressure()
logFunc("At atmospheric pressure %.3f torr.\n" % pAtmos)
setValveControlMode(3)  # Manual control of valves
inlet = 0
outlet = 0
setValveDacValue("both",inlet,outlet)
tStart = clock()
tList = []
pList = []
logFunc("Starting outlet leak test.\n")
NEXT = "StateCheckOutletLeak"
"""

[StateCheckOutletLeak]
action = """
sleep(1.0)
p = getCavityPressure()
now = clock()
fileDataFunc(dict(time=time.time(),inlet=inlet,outlet=outlet,pressure=p,stage=2))
if now-tStart < 60:
    tList.append(now)
    pList.append(p)
    NEXT = "StateCheckOutletLeak"
else:
    pf = polyfit(array(tList),(pList),1)
    outletLeakTest = 60.0*pf[0]
    logFunc("Outlet leak test. Pressure change in 1 minute = %.3f.\n" % (outletLeakTest,))
    inlet = 65500
    logFunc("Stepping outlet valve to find when it opens.\n")
    NEXT = "StateOutletSweep1"
"""

[StateOutletSweep1]
action = """
outlet += 500
setValveDacValue("both",inlet,outlet)
p = getCavityPressure()
sleep(1.0)
NEXT = "StateWaitStable1"
"""

[StateWaitStable1]
action = """
pnew = getCavityPressure()
if abs(pnew-p)<0.3:
    # Record pressure and step valve
    fileDataFunc(dict(time=time.time(),inlet=inlet,outlet=outlet,pressure=pnew,stage=3))
    if pnew > pAtmos - 10: NEXT = "StateOutletSweep1"
    else:
        outletJustOpen = outlet
        logFunc("Outlet valve just opens at %d.\n" % outletJustOpen)
        logFunc("Starting to pump down\n")
        startOutletValveControl(0, 0)
        NEXT="StatePumpDown"
else:
    p = pnew
    sleep(1.0)
    NEXT = "StateWaitStable1"
"""

[StatePumpDown]
action = """
sleep(1.0)
valveDacs = getValveDacValues()
pnew = getCavityPressure()
inlet =  valveDacs["inletDacValue"]
outlet = valveDacs["outletDacValue"]
fileDataFunc(dict(time=time.time(),inlet=inlet,outlet=outlet,pressure=pnew,stage=4))
if outlet < 65000:
    NEXT = "StatePumpDown"
else:
    setValveControlMode(3)  # Manual control of valves
    inlet = 0
    outlet = 65499
    setValveDacValue("both",inlet,outlet)
    p = pnew
    NEXT = "StateWaitStable3"
"""

[StateWaitStable3]
action = """
sleep(1.0)
pnew = getCavityPressure()
fileDataFunc(dict(time=time.time(),inlet=inlet,outlet=outlet,pressure=pnew,stage=4))
if abs(pnew-p)<0.3:
    pBase = pnew
    inlet = 0
    outlet = 0
    setValveDacValue("both",inlet,outlet)
    tStart = clock()
    tList = []
    pList = []
    logFunc("Starting inlet leak test.\n")
    NEXT="StateCheckInletLeak"
else:
    p = pnew
    NEXT = "StateWaitStable3"
"""

[StateCheckInletLeak]
action = """
sleep(1.0)
now = clock()
p = getCavityPressure()
fileDataFunc(dict(time=time.time(),inlet=inlet,outlet=outlet,pressure=p,stage=5))
if now-tStart < 60:
    tList.append(now)
    pList.append(p)
    NEXT = "StateCheckInletLeak"
else:
    pf = polyfit(array(tList),array(pList),1)
    inletLeakTest = pf[0]*60.0
    logFunc("Inlet leak test. Pressure change in 1 minute = %.3f.\n" % (inletLeakTest,))
    pStart = p
    outlet = outletJustOpen
    logFunc("Stepping inlet valve to find when it opens.\n")
    NEXT = "StateInletSweep2"
"""

[StateInletSweep2]
action = """
inlet += 500
setValveDacValue("both",inlet,outlet)
p = getCavityPressure()
sleep(1.0)
NEXT = "StateWaitStable4"
"""

[StateWaitStable4]
action = """
pnew = getCavityPressure()
if abs(pnew-p)<0.3:
    # Record pressure and step valve
    fileDataFunc(dict(time=time.time(),inlet=inlet,outlet=outlet,pressure=pnew,stage=6))
    if pnew < pStart + 10: NEXT = "StateInletSweep2"
    else:
        inletJustOpen = inlet
        logFunc("Inlet valve just opens at %d.\n" % inletJustOpen)
        startOutletValveControl(140, inletJustOpen)
        NEXT="StateDone"
else:
    p = pnew
    sleep(1.0)
    NEXT = "StateWaitStable4"
"""

[StateDone]
action="""
logFunc("Done!")
"""

[StateError]
action="""
logFunc("Error %s in state %s\n" % (ERROR_MSG,ERROR_STATE))
NEXT = "StateDone"
"""
