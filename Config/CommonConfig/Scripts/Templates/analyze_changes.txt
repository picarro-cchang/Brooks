# Laser Aging Compensation - Template for Analysis Script Changes
# ===============================================================
#
#
# The file you'll need to modify is named something like analyze_CFKADS.py,
# analyze_CFADS.py, etc.
#
# where xxx is the suffix (e.g., CFKADS)
#
# Use the Picarro Configuration Manager to navigate to the Data Manager .ini
# file child. Under it is a _xxxBaseModeDef.mode child, which has a child
# named analyze_xxx.py. This is the file you'll need to modify.
#
# Important: See Additional Notes (below) about situations where incorporating
#            the laser aging adjustment can result in issues with the
#            Data Logger and output data.


# Look for the following line, typically 20 - 30 lines from the top.
#    if _PERSISTENT_["init"]
#
# Without changing the indented text inside the "if", copy and paste the following
# lines (between the #******) after the last indented line in the "if".
# Be sure to include all indents:

#********************
    script = "adjustTempOffset.py"
    scriptRelPath = os.path.join(here, '..', '..', '..', 'CommonConfig',
                                 'Scripts', 'DataManager', script)
    cp = file(os.path.join(here, scriptRelPath), "rU")
    codeAsString = cp.read() + "\n"
    cp.close()
    _PERSISTENT_["adjustOffsetScript"] = compile(codeAsString, script, 'exec')
 
exec _PERSISTENT_["adjustOffsetScript"] in globals()
#********************



#
# Your modified script should now look something like the following in that section:
#
    
if _PERSISTENT_["init"]:
    _PERSISTENT_["wlm1_offset"] = 0.0
    _PERSISTENT_["wlm2_offset"] = 0.0
    _PERSISTENT_["wlm4_offset"] = 0.0
    _PERSISTENT_["ignore_count"] = 7
    _PERSISTENT_["init"] = False
    
    script = "adjustTempOffset.py"
    scriptRelPath = os.path.join(here, '..', '..', '..', 'CommonConfig',
                                 'Scripts', 'DataManager', script)
    cp = file(os.path.join(here, scriptRelPath), "rU")
    codeAsString = cp.read() + "\n"
    cp.close()
    _PERSISTENT_["adjustOffsetScript"] = compile(codeAsString, script, 'exec')

exec _PERSISTENT_["adjustOffsetScript"] in globals()

###############
# Calibration of WLM offsets    
###############
    
max_adjust = 1.0e-5

# Check instrument status and do not do any updates if any parameters are unlocked

<...snip...>



# Additional Notes
# ================
#
# Executing the "exec _PERSISTENT_" unconditionally for some scripts such as analyze_CFADS.py (CFADS) 
# can result in Data Logger issues. Symptoms include:
#
# 1. Data Logger unresponsiveness. This causes the Data Logger to be shutdown and restarted
#    fairly often, as evidenced in the CRDS Data Viewer log.
#
# 2. Archived data consists of numerous small h5 files that alternate in file size.
#
# This happens because during each round of data acquisition, the output data contains different columns.
# When the Data Logger detects that the columns in the output differ, it starts writing to a new
# file. This makes the Data Logger busy and very likely to be less responsive to pings from the Supervisor.
# As a result, the Supervisor thinks the Data Logger is unresponsive/dead so it kills it off and restarts it.
#
# An example where this happened is on the CFADS instrument, in the analyze_CFADS.py script.
# Moving the "exec _PERSISTENT_" line so it is underneath the "if _DATA_["SpectrumID"] != 10:" resolved
# the problem.
#
# The takeaway is that if you see this behavior, it will require closer examination of the analysis
# script to determine the appropriate place to execute laser aging correction instead of doing
# it unconditionally at the top of the script.
