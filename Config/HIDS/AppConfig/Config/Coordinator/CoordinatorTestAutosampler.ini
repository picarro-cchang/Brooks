[Mode]
inject_mode=automatic

[Output]

[Setup]
initial=StateStart
final=StateDone
error=StateError
# script=CoordinatorScripts.py

[Trays]
tray1=MT1-Frnt
tray2=MT1-Rear

[StateStart]
action="""
AUTOSAMPLER = Autosampler()
AUTOSAMPLER.open()
raw_input("Waiting...")
HOST = "localhost"
PORT = 51020
FITTER = Comms(HOST,PORT)
GUI.setStatusText("")
NEXT="StateAssertStartInit"
"""

[StateAssertStartInit]
action="""
logFunc("Asserting start, cleaning evaporator\n")
AUTOSAMPLER.assertStart()
NEXT="StateAssertInject"
"""

[StateAssertInject]
action="""
logFunc("\nAsserting inject, waiting for injected\n")
AUTOSAMPLER.assertInject()
AUTOSAMPLER.flush()
NEXT="StateWaitForInjected"
"""

[StateWaitForInjected]
action="""
if not AUTOSAMPLER.getInjected():
    logFunc(".")
    sleep(0.2)
    NEXT="StateWaitForInjected"
else:
    logFunc("\nReceived injected\n")
    AUTOSAMPLER.deassertInject()
    AUTOSAMPLER.deassertStart()
    NEXT="StateGetAutosamplerLog"
"""

[StateGetAutosamplerLog]
action="""
logString = AUTOSAMPLER.getLog()
logDate, logTime, injTime, trayName, sampleNum, jobNum, methodName = parseAutosamplerLog(logString)
date, time = calcInjectDateTime(logDate,logTime,injTime)
autosampDict = dict(date=date,time=time,trayName=trayName,sampleNum=sampleNum,jobNum=jobNum,methodName=methodName)
logFunc("%s" % autosampDict)
sleep(120)
NEXT="StateAssertStart"
"""

[StateAssertStart]
action="""
logFunc("Asserting start, cleaning evaporator, waiting for results\n")
AUTOSAMPLER.assertStart()
sleep(120)
NEXT="StateAssertInject"
"""

[StateDone]
action="""
AUTOSAMPLER.close()
logFunc("Done!")
"""

[StateError]
action="""
logFunc("Error %s in state %s\n" % (ERROR_MSG,ERROR_STATE))
NEXT = "StateDone"
"""
