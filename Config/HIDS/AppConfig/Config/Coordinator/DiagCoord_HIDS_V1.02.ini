#    1.26.2014 leak test for swagelok tubing and plumbing added
#    currently the plumbing leak test is skipped
[Archiver]
archiveGroupName = Coordinator

[Mode]
inject_mode=manual

[Files]
output = "c:/IsotopeData/IsoWater"
prefix = "P"

[Output]
lineNum = "Line", %8d
time = "Time", %15.5s
valveSignal = "Valve Mask", %15s
diagNum = "Test", %15s
H2O_ppm = "H2O (ppm)", %14.1f
cavityPressure = Cavity Pressure (Torr), %14.2f
outletValve = "Outlet Valve", %14.2f

[Setup]
initial=StateStart
final=StateDone
error=StateError

[StateStart]
action="""
GUI.setManualMode(True)
GUI.disableManualButton()


concNameList = ["H2O", "CavityPressure", "OutletValve"]
setMeasBuffer("analyze_iH2O7200", concNameList, 30)
clearMeasBuffer()

Results = {}
def collectData(cnt,mask,test_str,delay):
    for i in range(delay):
        inBuffer = False
        while inBuffer == False:
            dataBuffer = measGetBufferFirst()
            if not dataBuffer:
                inBuffer = False
                sleep(0.1)
            else:
                inBuffer = True
        Results["lineNum"] = cnt
        Results["time"] = time.time() - startTime
        Results["valveSignal"] = mask
        Results["diagNum"] = test_str
        Results["H2O_ppm"] = dataBuffer["H2O"]
        Results["cavityPressure"] = dataBuffer["CavityPressure"]
        Results["outletValve"] = dataBuffer["OutletValve"]
        fileDataFunc(Results)
        sleep(0.5)
        cnt += 1
    return cnt

lineNum = 0
setValveMask(0)
septumOff_Flag = 0

GUI.setStatusText("")
GUI.popPause("Thank you for running the Diagnostic Coordinator.\nThis test will last approximately 45 mins.\nClick \'OK\' to continue.")
logFunc("Starting tests...\n")

NEXT="StateV3"
"""

[StateV3]
action = """
logFunc("Starting V3 test...\n")

#attempting to obtain initial condition
setValveMask(2)
sleep(40)
setValveMask(0)

GUI.popPause("Press \'OK\' after the septum has been unscrewed and removed.")
septumOff_Flag = 1
startTime = time.time()
delay_V3 = 60
repeat_V3 = 2

for i in range(repeat_V3):
    lineNum = collectData(lineNum,"0","V3",delay_V3)
    setValveMask(4)
    lineNum = collectData(lineNum,"4","V3",delay_V3)
    setValveMask(0)
    
lineNum = collectData(lineNum,"0","V3",delay_V3)

    #!!! Risetime will show the relative flowrate, both analyzer pump and valve3 opening!!!#

NEXT = "StateV1"
"""
[StateV2]
action ="""
if septumOff_Flag == 1:
    GUI.popPause("Press \'OK\' after reinstalling the septum.")
    septumOff_Flag =0
    
startTime = time.time()
delay_V2 = 30
delay_V2_PD = 90
repeat_V2 = 2
for i in range(repeat_V2):
    #attempting to obtain initial condition
    setValveMask(1)
    sleep(20)
    setValveMask(0)
    
    lineNum = collectData(lineNum,"0","V2",delay_V2)
    setValveMask(2)
    lineNum = collectData(lineNum,"2","V2",delay_V2_PD)
    setValveMask(1)
    lineNum = collectData(lineNum,"1","V2",delay_V2)
    setValveMask(0)

lineNum = collectData(lineNum,"0","V2",delay_V2_PD)
NEXT = "StateChamberPressureTest"
"""
[StateV1]
action="""

if septumOff_Flag == 1:
    GUI.popPause("Press \'OK\' after reinstalling the septum.")
    septumOff_Flag =0
startTime = time.time()
logFunc("Starting V1 test...\n")

delay_V1 = 60
delay_V1_PD = 90
repeat_V1 = 2

for i in range(repeat_V1):
    #attempting to obtain initial condition
    setValveMask(1)
    sleep(20)
    setValveMask(0)
    
    lineNum = collectData(lineNum,"0","V1",delay_V1)
    setValveMask(4)
    lineNum = collectData(lineNum,"4","V1",delay_V1_PD)
    setValveMask(5)
    lineNum = collectData(lineNum,"5","V1",delay_V1)
    setValveMask(0)

lineNum = collectData(lineNum,"0","V1",delay_V1)

NEXT = "StateV2"
"""
[StateChamberPressureTest]
action="""

if septumOff_Flag == 1:
    GUI.popPause("Press \'OK\' after reinstalling the septum.")
    septumOff_Flag =0
    
#also measures for plumbing leaks... look for H2O concentration increases
startTime = time.time()
logFunc("\nStarting Chamber pressure test...\n")

delay_BL = 60
delay_PD = 180
repeat_CP = 3
vacuumHold = 30
vacuumProbe = 30
reFill = 20

setValveMask(2)
sleep(20.0)
setValveMask(1)
sleep(20.0)
setValveMask(0)

for i in range(repeat_CP):
    lineNum = collectData(lineNum,"0","CP",delay_BL)
    setValveMask(4)
    lineNum = collectData(lineNum,"4","CP",delay_PD)
    setValveMask(0)
    lineNum = collectData(lineNum,"0","CP",vacuumHold*(i+1))
    setValveMask(1)
    lineNum = collectData(lineNum,"1","CP",reFill)
    setValveMask(4)
    lineNum = collectData(lineNum, "4","CP",vacuumProbe)
    setValveMask(0)
    
lineNum = collectData(lineNum,"0","CP",delay_BL)
NEXT = "StateDone"
"""
[StatePlumbingPressureTest]
action="""

if septumOff_Flag == 1:
    GUI.popPause("Press \'OK\' after reinstalling the septum.")
    septumOff_Flag =0
    
startTime = time.time()
logFunc("\nPlumbing pressure test...\n")
repeat_PPT = 2
preTestDelay = 10
testDuration_PPT = 5*60
setValveMask(0)
for i in range(repeat_PPT):
    lineNum = collectData(lineNum,"0","PPT_0",preTestDelay)
    GUI.popPause("Please turn off gas flow from regulator, preferably at the on/off valve if installed. Press \'OK\' when done.")
#measures for plumbing leaks in swagelok tubing between chamber and the cylinder... look for H2O concentration increases
    lineNum = collectData(lineNum,"0","PPT",testDuration_PPT)
    GUI.popPause("Press \'OK\' after re-starting gas flow")

NEXT = "StateDone"
"""
[StateDone]
action="""
setValveMask(0)
logFunc("Done!")
"""

[StateError]
action="""
logFunc("Error %s in state %s\n" % (ERROR_MSG,ERROR_STATE))
NEXT = "StateDone"
"""
