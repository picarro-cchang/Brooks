#!/usr/bin/env python
# -*- coding: iso-8859-15 -*-
# generated by wxGlade 0.6.3 on Fri Jul 17 15:31:14 2009

import wx

# begin wxGlade: extracode
from Host.Common.GraphPanel import GraphPanel
from Host.Common.GraphPanel import GraphPanel
from Host.Common.GraphPanel import GraphPanel
# end wxGlade



class LaserPanelGui(wx.Panel):
    def __init__(self, *args, **kwds):
        # begin wxGlade: LaserPanelGui.__init__
        kwds["style"] = wx.TAB_TRAVERSAL
        wx.Panel.__init__(self, *args, **kwds)
        self.panel_1 = wx.Panel(self, -1)
        self.temperatureGraph = GraphPanel(self, -1)
        self.tecGraph = GraphPanel(self, -1)
        self.currentGraph = GraphPanel(self, -1)
        self.clearButton = wx.Button(self.panel_1, wx.ID_CLEAR, "")

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_BUTTON, self.onClear, self.clearButton)
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: LaserPanelGui.__set_properties
        pass
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: LaserPanelGui.__do_layout
        sizer_2 = wx.BoxSizer(wx.VERTICAL)
        sizer_3 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_2.Add(self.temperatureGraph, 1, wx.EXPAND, 0)
        sizer_2.Add(self.tecGraph, 1, wx.EXPAND, 0)
        sizer_2.Add(self.currentGraph, 1, wx.EXPAND, 0)
        sizer_3.Add(self.clearButton, 0, wx.ALL|wx.ALIGN_CENTER_VERTICAL, 10)
        sizer_3.Add((20, 20), 1, 0, 0)
        self.panel_1.SetSizer(sizer_3)
        sizer_2.Add(self.panel_1, 0, wx.EXPAND, 0)
        self.SetSizer(sizer_2)
        sizer_2.Fit(self)
        # end wxGlade

    def onClear(self, event): # wxGlade: LaserPanelGui.<event_handler>
        print "Event handler `onClear' not implemented!"
        event.Skip()

# end of class LaserPanelGui


class CommandLogPanelGui(wx.Panel):
    def __init__(self, *args, **kwds):
        # begin wxGlade: CommandLogPanelGui.__init__
        kwds["style"] = wx.TAB_TRAVERSAL
        wx.Panel.__init__(self, *args, **kwds)
        self.panel_7 = wx.Panel(self, -1)
        self.panel_8 = wx.Panel(self.panel_7, -1)
        self.streamFileCheckbox = wx.CheckBox(self.panel_7, -1, "Stream File")
        self.streamFileTextCtrl = wx.TextCtrl(self.panel_7, -1, "")
        self.panel_2 = wx.Panel(self, -1)
        self.panel_3 = wx.Panel(self, -1)
        self.panel_4 = wx.Panel(self, -1)
        self.panel_5 = wx.Panel(self, -1)
        self.panel_6 = wx.Panel(self, -1)
        self.logListCtrl = wx.ListCtrl(self, -1, style=wx.LC_REPORT|wx.SUNKEN_BORDER)

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_CHECKBOX, self.onSteamFileCheck, self.streamFileCheckbox)
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: CommandLogPanelGui.__set_properties
        pass
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: CommandLogPanelGui.__do_layout
        sizer_1 = wx.BoxSizer(wx.VERTICAL)
        grid_sizer_1 = wx.GridSizer(2, 3, 0, 0)
        sizer_4 = wx.BoxSizer(wx.VERTICAL)
        sizer_5 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_4.Add(self.panel_8, 1, wx.EXPAND, 0)
        sizer_5.Add(self.streamFileCheckbox, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_5.Add(self.streamFileTextCtrl, 1, wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_4.Add(sizer_5, 0, wx.ALL|wx.EXPAND, 6)
        self.panel_7.SetSizer(sizer_4)
        grid_sizer_1.Add(self.panel_7, 1, wx.EXPAND, 0)
        grid_sizer_1.Add(self.panel_2, 1, wx.EXPAND, 0)
        grid_sizer_1.Add(self.panel_3, 1, wx.EXPAND, 0)
        grid_sizer_1.Add(self.panel_4, 1, wx.EXPAND, 0)
        grid_sizer_1.Add(self.panel_5, 1, wx.EXPAND, 0)
        grid_sizer_1.Add(self.panel_6, 1, wx.EXPAND, 0)
        sizer_1.Add(grid_sizer_1, 1, wx.EXPAND, 0)
        sizer_1.Add(self.logListCtrl, 1, wx.EXPAND, 0)
        self.SetSizer(sizer_1)
        sizer_1.Fit(self)
        # end wxGlade

    def onSteamFileCheck(self, event): # wxGlade: CommandLogPanelGui.<event_handler>
        print "Event handler `onSteamFileCheck' not implemented!"
        event.Skip()

# end of class CommandLogPanelGui


class HotBoxPanelGui(wx.Panel):
    def __init__(self, *args, **kwds):
        # begin wxGlade: HotBoxPanelGui.__init__
        kwds["style"] = wx.TAB_TRAVERSAL
        wx.Panel.__init__(self, *args, **kwds)
        self.panel_1 = wx.Panel(self, -1)
        self.temperatureGraph = GraphPanel(self, -1)
        self.tecGraph = GraphPanel(self, -1)
        self.heaterGraph = GraphPanel(self, -1)
        self.clearButton = wx.Button(self.panel_1, wx.ID_CLEAR, "")
        self.cavityTemperatureCheckbox = wx.CheckBox(self.panel_1, -1, "Cavity Temperature")
        self.heatsinkTemperatureCheckbox = wx.CheckBox(self.panel_1, -1, "Heatsink Temperature")

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_BUTTON, self.onClear, self.clearButton)
        self.Bind(wx.EVT_CHECKBOX, self.onWaveformSelectChanged, self.cavityTemperatureCheckbox)
        self.Bind(wx.EVT_CHECKBOX, self.onWaveformSelectChanged, self.heatsinkTemperatureCheckbox)
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: HotBoxPanelGui.__set_properties
        self.cavityTemperatureCheckbox.SetValue(1)
        self.heatsinkTemperatureCheckbox.SetValue(1)
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: HotBoxPanelGui.__do_layout
        sizer_2 = wx.BoxSizer(wx.VERTICAL)
        sizer_3 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_6 = wx.BoxSizer(wx.VERTICAL)
        sizer_2.Add(self.temperatureGraph, 1, wx.EXPAND, 0)
        sizer_2.Add(self.tecGraph, 1, wx.EXPAND, 0)
        sizer_2.Add(self.heaterGraph, 1, wx.EXPAND, 0)
        sizer_3.Add(self.clearButton, 0, wx.ALL|wx.ALIGN_CENTER_VERTICAL, 15)
        sizer_6.Add(self.cavityTemperatureCheckbox, 0, wx.LEFT|wx.TOP|wx.BOTTOM|wx.ALIGN_CENTER_VERTICAL, 5)
        sizer_6.Add(self.heatsinkTemperatureCheckbox, 0, wx.LEFT|wx.TOP|wx.BOTTOM|wx.ALIGN_CENTER_VERTICAL, 5)
        sizer_3.Add(sizer_6, 1, wx.EXPAND, 0)
        sizer_3.Add((20, 20), 1, wx.EXPAND, 0)
        self.panel_1.SetSizer(sizer_3)
        sizer_2.Add(self.panel_1, 0, 0, 0)
        self.SetSizer(sizer_2)
        sizer_2.Fit(self)
        # end wxGlade

    def onClear(self, event): # wxGlade: HotBoxPanelGui.<event_handler>
        print "Event handler `onClear' not implemented!"
        event.Skip()

    def onWaveformSelectChanged(self, event): # wxGlade: HotBoxPanelGui.<event_handler>
        print "Event handler `onWaveformSelectChanged' not implemented!"
        event.Skip()

# end of class HotBoxPanelGui


class RingdownPanelGui(wx.Panel):
    def __init__(self, *args, **kwds):
        # begin wxGlade: RingdownPanelGui.__init__
        kwds["style"] = wx.TAB_TRAVERSAL
        wx.Panel.__init__(self, *args, **kwds)
        self.panel_9 = wx.Panel(self, -1)
        self.sizer_10_staticbox = wx.StaticBox(self.panel_9, -1, "Loss Type")
        self.ringdownGraph = GraphPanel(self, -1)
        self.clearButton = wx.Button(self.panel_9, wx.ID_CLEAR, "")
        self.uncorrectedCheckBox = wx.CheckBox(self.panel_9, -1, "Uncorrected")
        self.correctedCheckBox = wx.CheckBox(self.panel_9, -1, "Corrected")
        self.graphTypeRadioBox = wx.RadioBox(self.panel_9, -1, "Select Graph Type", choices=["Loss vs Wavenumber", "Loss vs Time", "Loss vs Ratio 1", "Loss vs Ratio 2", "Ratio vs Wavenumber", "Tuner vs Wavenumber", "Tuner vs Time", "Tuner vs Ratio 1", "Tuner vs Ratio 2", "Wavenumber vs Time", "IL(fine) vs Wavenumber", "IL(fine) vs Time"], majorDimension=4, style=wx.RA_SPECIFY_ROWS)
        self.panel_10 = wx.Panel(self.panel_9, -1)

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_BUTTON, self.onClear, self.clearButton)
        self.Bind(wx.EVT_CHECKBOX, self.onSelectLossType, self.uncorrectedCheckBox)
        self.Bind(wx.EVT_CHECKBOX, self.onSelectLossType, self.correctedCheckBox)
        self.Bind(wx.EVT_RADIOBOX, self.onSelectGraphType, self.graphTypeRadioBox)
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: RingdownPanelGui.__set_properties
        self.uncorrectedCheckBox.SetValue(1)
        self.graphTypeRadioBox.SetSelection(0)
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: RingdownPanelGui.__do_layout
        sizer_7 = wx.BoxSizer(wx.VERTICAL)
        sizer_8 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_9 = wx.BoxSizer(wx.VERTICAL)
        sizer_10 = wx.StaticBoxSizer(self.sizer_10_staticbox, wx.VERTICAL)
        sizer_7.Add(self.ringdownGraph, 1, wx.EXPAND, 0)
        sizer_9.Add(self.clearButton, 0, wx.ALL, 10)
        sizer_10.Add(self.uncorrectedCheckBox, 0, wx.TOP|wx.BOTTOM, 3)
        sizer_10.Add(self.correctedCheckBox, 0, wx.TOP|wx.BOTTOM, 3)
        sizer_9.Add(sizer_10, 1, wx.EXPAND, 0)
        sizer_8.Add(sizer_9, 0, wx.ALL|wx.EXPAND, 10)
        sizer_8.Add(self.graphTypeRadioBox, 0, wx.ALL, 10)
        sizer_8.Add(self.panel_10, 1, wx.EXPAND, 10)
        self.panel_9.SetSizer(sizer_8)
        sizer_7.Add(self.panel_9, 0, wx.EXPAND, 0)
        self.SetSizer(sizer_7)
        sizer_7.Fit(self)
        # end wxGlade

    def onClear(self, event): # wxGlade: RingdownPanelGui.<event_handler>
        print "Event handler `onClear' not implemented!"
        event.Skip()

    def onSelectLossType(self, event): # wxGlade: RingdownPanelGui.<event_handler>
        print "Event handler `onSelectLossType' not implemented!"
        event.Skip()

    def onSelectGraphType(self, event): # wxGlade: RingdownPanelGui.<event_handler>
        print "Event handler `onSelectGraphType' not implemented!"
        event.Skip()

# end of class RingdownPanelGui


