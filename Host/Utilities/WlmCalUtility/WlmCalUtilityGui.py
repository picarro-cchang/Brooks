#!/usr/bin/env python
# -*- coding: iso-8859-15 -*-
# generated by wxGlade HG on Sun May 12 17:25:19 2013

import wx

# begin wxGlade: extracode
from Host.Common.GraphPanel import GraphPanel
# end wxGlade



class WlmCalUtilityGui(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: WlmCalUtilityGui.__init__
        kwds["style"] = wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.panel_side = wx.Panel(self, -1)
        self.label_etalon_1 = wx.StaticText(self.panel_side, -1, "Etalon 1")
        self.text_ctrl_etalon_1 = wx.TextCtrl(self.panel_side, -1, "")
        self.label_etalon_1_dark = wx.StaticText(self.panel_side, -1, "Etalon 1 Dark Current")
        self.text_ctrl_etalon_1_dark = wx.TextCtrl(self.panel_side, -1, "")
        self.label_reference_1 = wx.StaticText(self.panel_side, -1, "Reference 1")
        self.text_ctrl_reference_1 = wx.TextCtrl(self.panel_side, -1, "")
        self.label_reference_1_dark = wx.StaticText(self.panel_side, -1, "Reference 1 Dark Current")
        self.text_ctrl_reference_1_dark = wx.TextCtrl(self.panel_side, -1, "")
        self.label_etalon_2 = wx.StaticText(self.panel_side, -1, "Etalon 2")
        self.text_ctrl_etalon_2 = wx.TextCtrl(self.panel_side, -1, "")
        self.label_etalon_2_dark = wx.StaticText(self.panel_side, -1, "Etalon 2 Dark Current")
        self.text_ctrl_etalon_2_dark = wx.TextCtrl(self.panel_side, -1, "")
        self.label_reference_2 = wx.StaticText(self.panel_side, -1, "Reference 2")
        self.text_ctrl_reference_2 = wx.TextCtrl(self.panel_side, -1, "")
        self.label_reference_2_dark = wx.StaticText(self.panel_side, -1, "Reference 2 Dark Current")
        self.text_ctrl_reference_2_dark = wx.TextCtrl(self.panel_side, -1, "")
        self.label_ratio_1 = wx.StaticText(self.panel_side, -1, "Ratio 1")
        self.text_ctrl_ratio_1 = wx.TextCtrl(self.panel_side, -1, "")
        self.label_ratio_2 = wx.StaticText(self.panel_side, -1, "Ratio 2")
        self.text_ctrl_ratio_2 = wx.TextCtrl(self.panel_side, -1, "")
        self.label_center_1 = wx.StaticText(self.panel_side, -1, "Center 1")
        self.text_ctrl_center_1 = wx.TextCtrl(self.panel_side, -1, "")
        self.label_center_2 = wx.StaticText(self.panel_side, -1, "Center 2")
        self.text_ctrl_center_2 = wx.TextCtrl(self.panel_side, -1, "")
        self.label_scale_1 = wx.StaticText(self.panel_side, -1, "Scale 1")
        self.text_ctrl_scale_1 = wx.TextCtrl(self.panel_side, -1, "")
        self.label_scale_2 = wx.StaticText(self.panel_side, -1, "Scale 2")
        self.text_ctrl_scale_2 = wx.TextCtrl(self.panel_side, -1, "")
        self.label_phase = wx.StaticText(self.panel_side, -1, "Phase Angle")
        self.text_ctrl_phase = wx.TextCtrl(self.panel_side, -1, "")
        self.panel_8b = wx.Panel(self.panel_side, -1)
        self.panel_spacer_1 = wx.Panel(self.panel_side, -1)
        self.panel_side_buttons = wx.Panel(self.panel_side, -1)
        self.button_measure_dark = wx.Button(self.panel_side_buttons, -1, "Measure Dark Currents")
        self.button_clear_data = wx.Button(self.panel_side_buttons, -1, "Clear Data")
        self.notebook_graphs = wx.Notebook(self, -1, style=0)
        self.notebook_graphs_ratios = wx.Panel(self.notebook_graphs, -1)
        self.graph_ratios = GraphPanel(self.notebook_graphs_ratios, -1)
        self.panel_graph_ratios = wx.Panel(self.notebook_graphs_ratios, -1)

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_BUTTON, self.onMeasureDark, self.button_measure_dark)
        self.Bind(wx.EVT_BUTTON, self.onClearData, self.button_clear_data)
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: WlmCalUtilityGui.__set_properties
        self.SetTitle("WLM Calibration Utility")
        self.notebook_graphs.SetMinSize((800, 600))
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: WlmCalUtilityGui.__do_layout
        sizer_main_panel = wx.BoxSizer(wx.HORIZONTAL)
        sizer_graphs_ratios = wx.BoxSizer(wx.VERTICAL)
        sizer_4 = wx.BoxSizer(wx.VERTICAL)
        sizer_side_buttons = wx.BoxSizer(wx.VERTICAL)
        sizer_side_8 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_side_8a = wx.BoxSizer(wx.VERTICAL)
        sizer_side_7 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_side_7b = wx.BoxSizer(wx.VERTICAL)
        sizer_side_7a = wx.BoxSizer(wx.VERTICAL)
        sizer_side_6 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_side_6b = wx.BoxSizer(wx.VERTICAL)
        sizer_side_6a = wx.BoxSizer(wx.VERTICAL)
        sizer_side_5 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_side_5b = wx.BoxSizer(wx.VERTICAL)
        sizer_side_5a = wx.BoxSizer(wx.VERTICAL)
        sizer_side_4 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_side_4b = wx.BoxSizer(wx.VERTICAL)
        sizer_side_4a = wx.BoxSizer(wx.VERTICAL)
        sizer_side_3 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_side_3b = wx.BoxSizer(wx.VERTICAL)
        sizer_side_3a = wx.BoxSizer(wx.VERTICAL)
        sizer_side_2 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_side_2b = wx.BoxSizer(wx.VERTICAL)
        sizer_side_2a = wx.BoxSizer(wx.VERTICAL)
        sizer_side_1 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_side_1b = wx.BoxSizer(wx.VERTICAL)
        sizer_side_1a = wx.BoxSizer(wx.VERTICAL)
        sizer_side_1a.Add(self.label_etalon_1, 0, wx.LEFT, 5)
        sizer_side_1a.Add(self.text_ctrl_etalon_1, 0, wx.ALL|wx.EXPAND, 5)
        sizer_side_1.Add(sizer_side_1a, 1, wx.EXPAND, 0)
        sizer_side_1b.Add(self.label_etalon_1_dark, 0, wx.LEFT, 5)
        sizer_side_1b.Add(self.text_ctrl_etalon_1_dark, 0, wx.ALL|wx.EXPAND, 5)
        sizer_side_1.Add(sizer_side_1b, 1, wx.EXPAND, 0)
        sizer_4.Add(sizer_side_1, 0, wx.EXPAND, 0)
        sizer_side_2a.Add(self.label_reference_1, 0, wx.LEFT, 5)
        sizer_side_2a.Add(self.text_ctrl_reference_1, 0, wx.ALL|wx.EXPAND, 5)
        sizer_side_2.Add(sizer_side_2a, 1, wx.EXPAND, 0)
        sizer_side_2b.Add(self.label_reference_1_dark, 0, wx.LEFT, 5)
        sizer_side_2b.Add(self.text_ctrl_reference_1_dark, 0, wx.ALL|wx.EXPAND, 5)
        sizer_side_2.Add(sizer_side_2b, 1, wx.EXPAND, 0)
        sizer_4.Add(sizer_side_2, 0, wx.EXPAND, 0)
        sizer_side_3a.Add(self.label_etalon_2, 0, wx.LEFT, 5)
        sizer_side_3a.Add(self.text_ctrl_etalon_2, 0, wx.ALL|wx.EXPAND, 5)
        sizer_side_3.Add(sizer_side_3a, 1, wx.EXPAND, 0)
        sizer_side_3b.Add(self.label_etalon_2_dark, 0, wx.LEFT, 5)
        sizer_side_3b.Add(self.text_ctrl_etalon_2_dark, 0, wx.ALL|wx.EXPAND, 5)
        sizer_side_3.Add(sizer_side_3b, 1, wx.EXPAND, 0)
        sizer_4.Add(sizer_side_3, 0, wx.EXPAND, 0)
        sizer_side_4a.Add(self.label_reference_2, 0, wx.LEFT, 5)
        sizer_side_4a.Add(self.text_ctrl_reference_2, 0, wx.ALL|wx.EXPAND, 5)
        sizer_side_4.Add(sizer_side_4a, 1, wx.EXPAND, 0)
        sizer_side_4b.Add(self.label_reference_2_dark, 0, wx.LEFT, 5)
        sizer_side_4b.Add(self.text_ctrl_reference_2_dark, 0, wx.ALL|wx.EXPAND, 5)
        sizer_side_4.Add(sizer_side_4b, 1, wx.EXPAND, 0)
        sizer_4.Add(sizer_side_4, 0, wx.EXPAND, 0)
        sizer_side_5a.Add(self.label_ratio_1, 0, wx.LEFT, 5)
        sizer_side_5a.Add(self.text_ctrl_ratio_1, 0, wx.ALL|wx.EXPAND, 5)
        sizer_side_5.Add(sizer_side_5a, 1, wx.EXPAND, 0)
        sizer_side_5b.Add(self.label_ratio_2, 0, wx.LEFT, 5)
        sizer_side_5b.Add(self.text_ctrl_ratio_2, 0, wx.ALL|wx.EXPAND, 5)
        sizer_side_5.Add(sizer_side_5b, 1, wx.EXPAND, 0)
        sizer_4.Add(sizer_side_5, 0, wx.EXPAND, 0)
        sizer_side_6a.Add(self.label_center_1, 0, wx.LEFT, 5)
        sizer_side_6a.Add(self.text_ctrl_center_1, 0, wx.ALL|wx.EXPAND, 5)
        sizer_side_6.Add(sizer_side_6a, 1, wx.EXPAND, 0)
        sizer_side_6b.Add(self.label_center_2, 0, wx.LEFT, 5)
        sizer_side_6b.Add(self.text_ctrl_center_2, 0, wx.ALL|wx.EXPAND, 5)
        sizer_side_6.Add(sizer_side_6b, 1, wx.EXPAND, 0)
        sizer_4.Add(sizer_side_6, 0, wx.EXPAND, 0)
        sizer_side_7a.Add(self.label_scale_1, 0, wx.LEFT, 5)
        sizer_side_7a.Add(self.text_ctrl_scale_1, 0, wx.ALL|wx.EXPAND, 5)
        sizer_side_7.Add(sizer_side_7a, 1, wx.EXPAND, 0)
        sizer_side_7b.Add(self.label_scale_2, 0, wx.LEFT, 5)
        sizer_side_7b.Add(self.text_ctrl_scale_2, 0, wx.ALL|wx.EXPAND, 5)
        sizer_side_7.Add(sizer_side_7b, 1, wx.EXPAND, 0)
        sizer_4.Add(sizer_side_7, 0, wx.EXPAND, 0)
        sizer_side_8a.Add(self.label_phase, 0, wx.LEFT, 5)
        sizer_side_8a.Add(self.text_ctrl_phase, 0, wx.ALL|wx.EXPAND, 5)
        sizer_side_8.Add(sizer_side_8a, 1, wx.EXPAND, 0)
        sizer_side_8.Add(self.panel_8b, 1, wx.EXPAND, 0)
        sizer_4.Add(sizer_side_8, 0, wx.EXPAND, 0)
        sizer_4.Add(self.panel_spacer_1, 1, wx.EXPAND, 0)
        sizer_side_buttons.Add(self.button_measure_dark, 0, wx.ALL|wx.EXPAND|wx.ALIGN_CENTER_HORIZONTAL, 10)
        sizer_side_buttons.Add(self.button_clear_data, 1, wx.ALL|wx.EXPAND|wx.ALIGN_CENTER_HORIZONTAL, 10)
        self.panel_side_buttons.SetSizer(sizer_side_buttons)
        sizer_4.Add(self.panel_side_buttons, 0, wx.EXPAND, 0)
        self.panel_side.SetSizer(sizer_4)
        sizer_main_panel.Add(self.panel_side, 0, wx.EXPAND, 0)
        sizer_graphs_ratios.Add(self.graph_ratios, 1, wx.EXPAND, 0)
        sizer_graphs_ratios.Add(self.panel_graph_ratios, 0, 0, 10)
        self.notebook_graphs_ratios.SetSizer(sizer_graphs_ratios)
        self.notebook_graphs.AddPage(self.notebook_graphs_ratios, "Ratios")
        sizer_main_panel.Add(self.notebook_graphs, 1, wx.EXPAND, 0)
        self.SetSizer(sizer_main_panel)
        sizer_main_panel.Fit(self)
        self.Layout()
        # end wxGlade

    def onMeasureDark(self, event): # wxGlade: WlmCalUtilityGui.<event_handler>
        print "Event handler `onMeasureDark' not implemented!"
        event.Skip()

    def onClearData(self, event): # wxGlade: WlmCalUtilityGui.<event_handler>
        print "Event handler `onClearData' not implemented!"
        event.Skip()

# end of class WlmCalUtilityGui


if __name__ == "__main__":
    app = wx.PySimpleApp(0)
    wx.InitAllImageHandlers()
    frame_main = WlmCalUtilityGui(None, -1, "")
    app.SetTopWindow(frame_main)
    frame_main.Show()
    app.MainLoop()
