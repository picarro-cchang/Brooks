#!/usr/bin/env python
# -*- coding: CP1252 -*-
#
# generated by wxGlade 0.6.8 (standalone edition) on Mon Dec 23 00:15:46 2013
#

import wx

# begin wxGlade: dependencies
import gettext
# end wxGlade

# begin wxGlade: extracode
from Host.Common.GraphPanel import GraphPanel
from Host.Common.GraphPanel import GraphPanel
from Host.Common.GraphPanel import GraphPanel
# end wxGlade


class P3ViewFrameGui(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: P3ViewFrameGui.__init__
        kwds["style"] = wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.window_1 = wx.SplitterWindow(self, wx.ID_ANY, style=wx.SP_3DBORDER | wx.SP_BORDER)
        self.window_1_pane_1 = wx.Panel(self.window_1, wx.ID_ANY)
        self.labelAnalyzerName = wx.StaticText(self.window_1_pane_1, wx.ID_ANY, _("Analyzer name"))
        self.cbAnalyzerName = wx.ComboBox(self.window_1_pane_1, wx.ID_ANY, choices=[], style=wx.CB_DROPDOWN)
        self.labelLogName = wx.StaticText(self.window_1_pane_1, wx.ID_ANY, _("Log name"))
        self.cbLogName = wx.ComboBox(self.window_1_pane_1, wx.ID_ANY, choices=[], style=wx.CB_DROPDOWN)
        self.labelXVariable = wx.StaticText(self.window_1_pane_1, wx.ID_ANY, _("X Variable"))
        self.cbXVariable = wx.ComboBox(self.window_1_pane_1, wx.ID_ANY, choices=[], style=wx.CB_DROPDOWN)
        self.labelYVariable = wx.StaticText(self.window_1_pane_1, wx.ID_ANY, _("Y Variable"))
        self.cbYVariable = wx.ComboBox(self.window_1_pane_1, wx.ID_ANY, choices=[], style=wx.CB_DROPDOWN)
        self.panelSep1 = wx.Panel(self.window_1_pane_1, wx.ID_ANY)
        self.labelLastPointTime = wx.StaticText(self.window_1_pane_1, wx.ID_ANY, _("Time of last point"))
        self.textCtrlLastPointTime = wx.TextCtrl(self.window_1_pane_1, wx.ID_ANY, "", style=wx.TE_READONLY)
        self.labelInterval = wx.StaticText(self.window_1_pane_1, wx.ID_ANY, _("Data Interval"))
        self.textCtrlInterval = wx.TextCtrl(self.window_1_pane_1, wx.ID_ANY, "", style=wx.TE_READONLY)
        self.labelSystemStatus = wx.StaticText(self.window_1_pane_1, wx.ID_ANY, _("System Status"))
        self.textCtrlSystemStatus = wx.TextCtrl(self.window_1_pane_1, wx.ID_ANY, "", style=wx.TE_READONLY)
        self.labelInstrumentStatus = wx.StaticText(self.window_1_pane_1, wx.ID_ANY, _("Instrument Status"))
        self.textCtrlInstrumentStatus = wx.TextCtrl(self.window_1_pane_1, wx.ID_ANY, "", style=wx.TE_READONLY)
        self.labelCarSpeed = wx.StaticText(self.window_1_pane_1, wx.ID_ANY, _("Car speed"))
        self.textCtrlCarSpeed = wx.TextCtrl(self.window_1_pane_1, wx.ID_ANY, "", style=wx.TE_READONLY)
        self.labelWindSpeed = wx.StaticText(self.window_1_pane_1, wx.ID_ANY, _("Wind speed"))
        self.textCtrlWindSpeed = wx.TextCtrl(self.window_1_pane_1, wx.ID_ANY, "", style=wx.TE_READONLY)
        self.window_1_pane_2 = wx.Panel(self.window_1, wx.ID_ANY, style=wx.RAISED_BORDER | wx.TAB_TRAVERSAL)
        self.window_3 = wx.SplitterWindow(self.window_1_pane_2, wx.ID_ANY, style=wx.SP_3D | wx.SP_BORDER)
        self.window_3_pane_1 = wx.Panel(self.window_3, wx.ID_ANY)
        self.window_4 = wx.SplitterWindow(self.window_3_pane_1, wx.ID_ANY, style=wx.SP_3D | wx.SP_BORDER)
        self.window_4_pane_1 = wx.Panel(self.window_4, wx.ID_ANY)
        self.graphPanelXVar = GraphPanel(self.window_4_pane_1, wx.ID_ANY)
        self.window_4_pane_2 = wx.Panel(self.window_4, wx.ID_ANY)
        self.graphPanelYVar = GraphPanel(self.window_4_pane_2, wx.ID_ANY)
        self.window_3_pane_2 = wx.Panel(self.window_3, wx.ID_ANY)
        self.graphPanelXY = GraphPanel(self.window_3_pane_2, wx.ID_ANY)

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_COMBOBOX, self.onSelectAnalyzer, self.cbAnalyzerName)
        self.Bind(wx.EVT_COMBOBOX, self.onSelectLog, self.cbLogName)
        self.Bind(wx.EVT_COMBOBOX, self.onSelectXVariable, self.cbXVariable)
        self.Bind(wx.EVT_COMBOBOX, self.onSelectYVariable, self.cbYVariable)
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: P3ViewFrameGui.__set_properties
        self.SetTitle(_("Picarro Surveyor Monitor"))
        self.SetSize((1495, 600))
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: P3ViewFrameGui.__do_layout
        sizer_1 = wx.BoxSizer(wx.VERTICAL)
        sizer_3 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_7 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_6 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_9 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_8 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_2 = wx.BoxSizer(wx.VERTICAL)
        sizerWindSpeed = wx.BoxSizer(wx.HORIZONTAL)
        sizerCarSpeed = wx.BoxSizer(wx.HORIZONTAL)
        sizerInstrumentStatus = wx.BoxSizer(wx.HORIZONTAL)
        sizerSystemStatus = wx.BoxSizer(wx.HORIZONTAL)
        sizerInterval = wx.BoxSizer(wx.HORIZONTAL)
        sizerLastPointTime = wx.BoxSizer(wx.HORIZONTAL)
        sizerYVariable = wx.BoxSizer(wx.HORIZONTAL)
        sizerXVariable = wx.BoxSizer(wx.HORIZONTAL)
        sizerLogName = wx.BoxSizer(wx.HORIZONTAL)
        sizerAnalyzerName = wx.BoxSizer(wx.HORIZONTAL)
        sizerAnalyzerName.Add(self.labelAnalyzerName, 0, wx.LEFT | wx.RIGHT | wx.ALIGN_CENTER_VERTICAL, 5)
        sizerAnalyzerName.Add(self.cbAnalyzerName, 1, wx.LEFT | wx.RIGHT | wx.ALIGN_CENTER_VERTICAL, 5)
        sizer_2.Add(sizerAnalyzerName, 0, wx.ALL | wx.EXPAND, 5)
        sizerLogName.Add(self.labelLogName, 0, wx.LEFT | wx.RIGHT | wx.ALIGN_CENTER_VERTICAL, 5)
        sizerLogName.Add(self.cbLogName, 1, wx.LEFT | wx.RIGHT | wx.ALIGN_CENTER_VERTICAL, 5)
        sizer_2.Add(sizerLogName, 0, wx.ALL | wx.EXPAND, 5)
        sizerXVariable.Add(self.labelXVariable, 0, wx.LEFT | wx.RIGHT | wx.ALIGN_CENTER_VERTICAL, 5)
        sizerXVariable.Add(self.cbXVariable, 1, wx.LEFT | wx.RIGHT | wx.ALIGN_CENTER_VERTICAL, 5)
        sizer_2.Add(sizerXVariable, 0, wx.ALL | wx.EXPAND, 5)
        sizerYVariable.Add(self.labelYVariable, 0, wx.LEFT | wx.RIGHT | wx.ALIGN_CENTER_VERTICAL, 5)
        sizerYVariable.Add(self.cbYVariable, 1, wx.LEFT | wx.RIGHT | wx.ALIGN_CENTER_VERTICAL, 5)
        sizer_2.Add(sizerYVariable, 0, wx.ALL | wx.EXPAND, 5)
        sizer_2.Add(self.panelSep1, 1, wx.EXPAND, 0)
        sizerLastPointTime.Add(self.labelLastPointTime, 0, wx.LEFT | wx.RIGHT | wx.ALIGN_CENTER_VERTICAL, 5)
        sizerLastPointTime.Add(self.textCtrlLastPointTime, 1, wx.ALL | wx.EXPAND | wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 5)
        sizer_2.Add(sizerLastPointTime, 0, wx.ALL | wx.EXPAND, 5)
        sizerInterval.Add(self.labelInterval, 0, wx.LEFT | wx.RIGHT | wx.ALIGN_CENTER_VERTICAL, 5)
        sizerInterval.Add(self.textCtrlInterval, 1, wx.ALL | wx.EXPAND | wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 5)
        sizer_2.Add(sizerInterval, 0, wx.ALL | wx.EXPAND, 5)
        sizerSystemStatus.Add(self.labelSystemStatus, 0, wx.LEFT | wx.RIGHT | wx.ALIGN_CENTER_VERTICAL, 5)
        sizerSystemStatus.Add(self.textCtrlSystemStatus, 1, wx.ALL | wx.EXPAND | wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 5)
        sizer_2.Add(sizerSystemStatus, 0, wx.ALL | wx.EXPAND, 5)
        sizerInstrumentStatus.Add(self.labelInstrumentStatus, 0, wx.LEFT | wx.RIGHT | wx.ALIGN_CENTER_VERTICAL, 5)
        sizerInstrumentStatus.Add(self.textCtrlInstrumentStatus, 1, wx.ALL | wx.EXPAND | wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 5)
        sizer_2.Add(sizerInstrumentStatus, 0, wx.ALL | wx.EXPAND, 5)
        sizerCarSpeed.Add(self.labelCarSpeed, 0, wx.LEFT | wx.RIGHT | wx.ALIGN_CENTER_VERTICAL, 5)
        sizerCarSpeed.Add(self.textCtrlCarSpeed, 1, wx.ALL | wx.EXPAND | wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 5)
        sizer_2.Add(sizerCarSpeed, 0, wx.ALL | wx.EXPAND, 5)
        sizerWindSpeed.Add(self.labelWindSpeed, 0, wx.LEFT | wx.RIGHT | wx.ALIGN_CENTER_VERTICAL, 5)
        sizerWindSpeed.Add(self.textCtrlWindSpeed, 1, wx.ALL | wx.EXPAND | wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL, 5)
        sizer_2.Add(sizerWindSpeed, 0, wx.ALL | wx.EXPAND, 5)
        self.window_1_pane_1.SetSizer(sizer_2)
        sizer_8.Add(self.graphPanelXVar, 1, wx.EXPAND, 0)
        self.window_4_pane_1.SetSizer(sizer_8)
        sizer_9.Add(self.graphPanelYVar, 1, wx.EXPAND, 0)
        self.window_4_pane_2.SetSizer(sizer_9)
        self.window_4.SplitHorizontally(self.window_4_pane_1, self.window_4_pane_2)
        sizer_6.Add(self.window_4, 1, wx.EXPAND, 0)
        self.window_3_pane_1.SetSizer(sizer_6)
        sizer_7.Add(self.graphPanelXY, 1, wx.EXPAND, 0)
        self.window_3_pane_2.SetSizer(sizer_7)
        self.window_3.SplitVertically(self.window_3_pane_1, self.window_3_pane_2)
        sizer_3.Add(self.window_3, 1, wx.EXPAND, 0)
        self.window_1_pane_2.SetSizer(sizer_3)
        self.window_1.SplitVertically(self.window_1_pane_1, self.window_1_pane_2, 283)
        sizer_1.Add(self.window_1, 1, wx.EXPAND | wx.FIXED_MINSIZE, 0)
        self.SetSizer(sizer_1)
        self.Layout()
        # end wxGlade

    def onSelectAnalyzer(self, event):  # wxGlade: P3ViewFrameGui.<event_handler>
        print "Event handler 'onSelectAnalyzer' not implemented!"
        event.Skip()

    def onSelectLog(self, event):  # wxGlade: P3ViewFrameGui.<event_handler>
        print "Event handler 'onSelectLog' not implemented!"
        event.Skip()

    def onSelectXVariable(self, event):  # wxGlade: P3ViewFrameGui.<event_handler>
        print "Event handler 'onSelectXVariable' not implemented!"
        event.Skip()

    def onSelectYVariable(self, event):  # wxGlade: P3ViewFrameGui.<event_handler>
        print "Event handler 'onSelectYVariable' not implemented!"
        event.Skip()

# end of class P3ViewFrameGui
if __name__ == "__main__":
    gettext.install("app") # replace with the appropriate catalog name

    app = wx.PySimpleApp(0)
    wx.InitAllImageHandlers()
    frame_1 = P3ViewFrameGui(None, wx.ID_ANY, "")
    app.SetTopWindow(frame_1)
    frame_1.Show()
    app.MainLoop()