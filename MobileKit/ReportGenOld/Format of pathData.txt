Format of pathData.json for a particular region

This is a list of two elements:
    1) paramsByLogname
    2) savedData

"paramsByLogname" is a dictionary
    Keys:
        Names of the "surveys" that have been carried out. A survey is named by the minimal log file that is generated by the analyzer, such as "DEMO2000-20120610-131326Z-DataLog_User_Minimal.dat".
    Values:
        Dictionary containing parameters of the "run" which the survey is associated with. A run is specified in the instructions file and is associated with a start and end epoch time, an analyzer and a collection of options for the various visual elements

"savedData" is a list consisting of triples, one for each "run" in the instructions file
    Each triple consists of:
        1) logNames
        2) savedPath
        3) savedSwath

    "logNames" is a dictionary of surveys contained in the run within the region
        Keys:
            Name of survey
        Values:
            Number to identify the survey

    "savedPath" consists of a list of path segments. Each path segment is a pair consisting of
        1) A dictionary with keys:
            PATH: List of geohashed positions specifying the path
            SURVEY: Index in logNames dictionary identifying which survey this path is contained within
        2) A path color tuple for this path segment

    "savedSwath" consists of a list of swath segments. Each swath segment is a pair consisting of
        1) A dictionary with keys:
            EPOCH_TIME:
            EDGE: Geohashed coordinates of edge of the swath
            PATH: Geohashed coordinates of the section of the swath coinciding with the path
        2) A swath color tuple for this swath segment


Format of markers.json for a particular region

This is a list of four elements:
    a) A list of peak colors
    b) A dictionary of peaks
    c) A list of marker colors
    d) A dictionary of markers

The dictionary of peaks has the following keys:
    1) WIND_DIR_MEAN
    2) TEXT
    3) EPOCH_TIME
    4) WIND_DIR_SDEV
    5) ANALYZER
    6) PEAK_COLOR
    7) CH4
    8) LOCATION
    9) AMPLITUDE
    10) WEDGE_COLOR

The dictionary of markers has the following keys:
    1) color
    2) location
    3) label

Given an instructions file we want to create the pathData.json and the markers.json files. There should be one file for each rectangular region

We want to construct layers which can be selected on a "per survey" basis

makePathData(swCorner,neCorner,runsData)
makeMarkerData(swCorner,neCorner,runsData)

We need to know which survey and which run each piece of data comes from so that it can be put onto the correct layer. Surveys are not known beforehand, so need to be accumulated as we gather information.

makePathData should return a path and swath.

Each path should consist of a list of path segments. Each segment is a dictionary consisting of:
(a) PATH: a list of geohashed lat-long pairs
(b) TYPE: a code indicating the type of this segment (inactive, surveying, analyzing)
(b) RUN:  an index into a collection of runs
(c) SURVEY: an index into a collection of surveys
The mapping from indices into runs and surveys should also be returned

Each swath should consist of a list of swath segments. Each swath segment is a dictionary consisting of
(a) PATH, EDGE: two lists of geohashed lat-long pairs for the path and the edge
(b) RUN: an index into a collection of runs
(c) SURVEY: an index into a collection of surveys
The mapping from indices into runs and surveys should also be returned

makeMarkerData should return a dictionary of peaks. The keys of the dictionary are
(a) LOCATION: a list of geohashed locations
(b) TEXT: a list of text strings for each marker
(c) RUN: a list of indices into the collection of runs
(d) SURVEY: a list of indices into the collection of surveys
The mapping from indices into runs and surveys should also be returned

baseMapData
(a) NECORNER: latitude and longitude of north-east corner
(b) SWCORNER: latitude and longitude of south-west corner
(c) NAME: name of map
(d) REGION: region number
(e) MAPTYPE: type of map

