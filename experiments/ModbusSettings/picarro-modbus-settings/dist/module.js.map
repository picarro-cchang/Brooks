{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"@grafana/ui\"","webpack:///external \"react\"","webpack:///./api/PicarroAPI.ts","webpack:///./module.tsx","webpack:///./components/ModbusPanel.tsx","webpack:///./components/ModbusSettings/ModbusLayout.tsx","webpack:///./components/ModbusPanelEditor.tsx","webpack:///./types.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","default","object","property","prototype","hasOwnProperty","p","s","e","__WEBPACK_EXTERNAL_MODULE__0__","__WEBPACK_EXTERNAL_MODULE__1__","PicarroAPI","postData","url","data","console","log","fetch","method","headers","Accept","Content-Type","body","JSON","stringify","then","response","ok","Error","getRequest","json","_ui","_ModbusPanel","_ModbusPanelEditor","_types","assign","arguments","length","apply","this","reactPanel","ReactPanelPlugin","ModbusPanel","defaults","_PicarroAPI2","localValues","__assign","slaveId","parseInt","slave","tcpPort","port","setEditor","ModbusPanelEditor","setDefaults","_react","a","_ModbusLayout","setPrototypeOf","__proto__","Array","constructor","_super","__extends","render","_a","props","options","width","height","_react2","createElement","ThemeContext","Consumer","theme","ModbusLayout","PureComponent","u","_this","state","ipAddress","componentDidMount","getIpAddress","newstate","ip","setState","onSaveClick","text","style","display","flexDirection","className","ng-style","type","placeholder","readOnly","onClick","Component","labelWidth","onMinValueChange","target","onChange","onMaxValueChange","PanelOptionsGroup","title","FormField","label"],"mappings":"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","file":"module.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","module.exports = __WEBPACK_EXTERNAL_MODULE__1__;","let PicarroAPI = {\n  postData(url: string, data: object) {\n    console.log(data);\n    return fetch(url, {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'text/html',\n      },\n      body: JSON.stringify(data),\n    }).then(response => {\n      if (!response.ok) {\n        throw Error('Network POST request failed');\n      }\n      return response;\n    });\n  },\n\n  getRequest(url: string) {\n    return fetch(url, {\n      method: 'GET',\n    }).then(response => {\n      if (!response.ok) {\n        throw Error('Network GET request failed');\n      }\n      return response.json();\n    });\n  },\n};\n\nexport default PicarroAPI;\n","import { ReactPanelPlugin } from '@grafana/ui';\n\nimport { ModbusPanel } from './components/ModbusPanel';\nimport { ModbusPanelEditor } from './components/ModbusPanelEditor';\n\nimport { defaults, ModbusOptions } from './types';\nimport PicarroAPI from './api/PicarroAPI';\n\nexport const reactPanel = new ReactPanelPlugin<ModbusOptions>(ModbusPanel);\nconsole.log(defaults);\n\nPicarroAPI.getRequest('http://localhost:4000/modbus_settings').then(\n  response => {\n    console.log(defaults);\n    let localValues = { ...defaults };\n    localValues['slaveId'] = parseInt(response['slave']);\n    localValues['tcpPort'] = parseInt(response['port']);\n    reactPanel.setEditor(ModbusPanelEditor);\n    reactPanel.setDefaults(localValues);\n  }\n);\n","import React, { PureComponent } from 'react';\nimport { PanelProps, ThemeContext } from '@grafana/ui';\n\nimport { ModbusOptions } from '../types';\nimport { ModbusLayout } from './ModbusSettings/ModbusLayout';\n\ninterface Props extends PanelProps<ModbusOptions> {}\n\nexport class ModbusPanel extends PureComponent<Props> {\n  render() {\n    const { options, width, height } = this.props;\n\n    return (\n      <ThemeContext.Consumer>\n        {theme => {\n          return (\n            <ModbusLayout\n              width={width}\n              height={height}\n              options={options}\n              theme={theme}\n            />\n          );\n        }}\n      </ThemeContext.Consumer>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { ModbusProps } from '../../types';\nimport PicarroAPI from '../../api/PicarroAPI';\n\ninterface Props extends ModbusProps {}\n\nexport class ModbusLayout extends Component<Props, any> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ipAddress: '127.0.0.1',\n    };\n  }\n\n  componentDidMount() {\n    this.getIpAddress();\n  }\n\n  getIpAddress() {\n    let newstate = {};\n    PicarroAPI.getRequest('http://localhost:4000/network').then(response => {\n      newstate['ipAddress'] = response['ip'];\n      console.log(newstate);\n      this.setState(newstate);\n    });\n  }\n\n  onSaveClick(options) {\n    const { slaveId, tcpPort } = options;\n    console.log(slaveId);\n    console.log(tcpPort);\n    PicarroAPI.postData('http://localhost:4000/modbus_settings', {\n      slave: slaveId,\n      port: tcpPort,\n    }).then(response => {\n      response.text().then(text => {\n        console.log(text);\n      });\n    });\n  }\n\n  render() {\n    const { options } = this.props;\n    const { slaveId, tcpPort } = options;\n    return (\n      <div>\n        <div\n          style={{\n            display: 'flex',\n            width: '100%',\n            height: '100%',\n            flexDirection: 'column',\n          }}\n        />\n        <div className=\"gf-form-inline\">\n          <div className=\"gf-form\" ng-style=\"{height: ctrl.height}\">\n            <span className=\"gf-form-label width-10\">Ip Address</span>\n            <input\n              type=\"text\"\n              className=\"gf-form-input\"\n              placeholder=\"\"\n              value={this.state.ipAddress}\n              readOnly\n            />\n          </div>\n\n          <div className=\"gf-form\" ng-style=\"{height: ctrl.height}\">\n            <span className=\"gf-form-label width-10\">Salve Id</span>\n            <input\n              type=\"text\"\n              className=\"gf-form-input\"\n              placeholder=\"\"\n              value={slaveId}\n              readOnly\n            />\n          </div>\n\n          <div className=\"gf-form\" ng-style=\"{height: ctrl.height}\">\n            <span className=\"gf-form-label width-10\">TCP Port</span>\n            <input\n              type=\"text\"\n              className=\"gf-form-input\"\n              placeholder=\"\"\n              value={tcpPort}\n              readOnly\n            />\n          </div>\n          <div className=\"gf-form-button-row\">\n            <button\n              onClick={() => this.onSaveClick(options)}\n              className=\"btn btn-primary\"\n            >\n              Save and Restart Server\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","// Libraries\nimport React, { PureComponent } from 'react';\n\n// Components\nimport { PanelOptionsGroup, PanelEditorProps } from '@grafana/ui';\n\n// Types\nimport { FormField } from '@grafana/ui';\nimport { ModbusOptions } from '../types';\n\nexport class ModbusPanelEditor extends PureComponent<\n  PanelEditorProps<ModbusOptions>\n> {\n  labelWidth = 8;\n\n  onMinValueChange = ({ target }) =>\n    this.props.onChange({ ...this.props.options, slaveId: target.value });\n\n  onMaxValueChange = ({ target }) =>\n    this.props.onChange({ ...this.props.options, tcpPort: target.value });\n\n  render() {\n    const { options } = this.props;\n    const { slaveId, tcpPort } = options;\n\n    return (\n      <PanelOptionsGroup title=\"Simple options\">\n        <FormField\n          label=\"Min value\"\n          labelWidth={this.labelWidth}\n          onChange={this.onMinValueChange}\n          value={slaveId}\n        />\n        <FormField\n          label=\"Max value\"\n          labelWidth={this.labelWidth}\n          onChange={this.onMaxValueChange}\n          value={tcpPort}\n        />\n      </PanelOptionsGroup>\n    );\n  }\n}\n","import { GrafanaTheme } from '@grafana/ui';\n\nexport interface ModbusOptions {\n  slaveId: number;\n  tcpPort: number;\n}\n\nexport const defaults: ModbusOptions = {\n  slaveId: 10,\n  tcpPort: 50500,\n};\n\nexport interface ModbusProps {\n  width: number;\n  height: number;\n  options: ModbusOptions;\n  theme: GrafanaTheme;\n}\n"],"sourceRoot":""}