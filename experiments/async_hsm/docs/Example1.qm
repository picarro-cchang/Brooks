<?xml version="1.0" encoding="UTF-8"?>
<model version="4.5.1" links="0">
 <framework name="qpc"/>
 <package name="AOs" stereotype="0x02">
  <class name="Example 1" superclass="qpc::QActive">
   <statechart properties="0x01">
    <initial target="../1">
     <initial_glyph conn="28,6,5,0,9,4">
      <action box="0,-2,10,2"/>
     </initial_glyph>
    </initial>
    <state name="state1">
     <entry brief="print &quot;ENTRY action 1&quot;"/>
     <exit brief="print &quot;EXIT action 1&quot;"/>
     <initial target="../3">
      <action brief="print &quot;INIT action 1&quot;"/>
      <initial_glyph conn="12,25,5,0,11,2">
       <action box="1,-2,16,3"/>
      </initial_glyph>
     </initial>
     <tran trig="E1">
      <action brief="print &quot;Event 1 action 1&quot;"/>
      <tran_glyph conn="7,18,3,-1,35">
       <action box="0,-2,20,3"/>
      </tran_glyph>
     </tran>
     <tran trig="E2" target="..">
      <action brief="print &quot;Event 2 action 1&quot;"/>
      <tran_glyph conn="7,21,3,1,60">
       <action box="0,-2,21,2"/>
      </tran_glyph>
     </tran>
     <state name="state2">
      <entry brief="print &quot;ENTRY action 2&quot;"/>
      <exit brief="print &quot;EXIT action 2&quot;"/>
      <tran trig="E1" target="../..">
       <action brief="print &quot;Event 1, action 2&quot;"/>
       <tran_glyph conn="9,35,3,1,58">
        <action box="0,-2,21,2"/>
       </tran_glyph>
      </tran>
      <tran trig="E2" target="../../4">
       <action brief="print &quot;Event 2, action 2&quot;"/>
       <tran_glyph conn="9,41,3,3,33">
        <action box="0,-2,23,3"/>
       </tran_glyph>
      </tran>
      <state_glyph node="9,27,25,17">
       <entry box="1,2,19,2"/>
       <exit box="1,4,19,2"/>
      </state_glyph>
     </state>
     <state name="state3">
      <entry brief="print &quot;ENTRY action 3&quot;"/>
      <exit brief="print &quot;EXIT action 3&quot;"/>
      <state_glyph node="42,37,23,7">
       <entry box="1,2,19,2"/>
       <exit box="1,4,19,2"/>
      </state_glyph>
     </state>
     <state_glyph node="7,10,60,37">
      <entry box="1,2,19,2"/>
      <exit box="1,4,19,2"/>
     </state_glyph>
    </state>
    <state name="top (_init)">
     <tran trig="TERMINATE" target="../2">
      <tran_glyph conn="7,66,3,3,30">
       <action box="0,-2,10,2"/>
      </tran_glyph>
     </tran>
     <tran trig="ERROR">
      <action brief="print exception message and traceback"/>
      <tran_glyph conn="7,72,3,-1,21">
       <action box="0,-2,19,4"/>
      </tran_glyph>
     </tran>
     <state name="_exit">
      <entry brief="Set terminated attribute"/>
      <state_glyph node="37,64,25,10">
       <entry box="1,2,21,2"/>
      </state_glyph>
     </state>
     <state_glyph node="7,57,60,27"/>
    </state>
    <state_diagram size="108,105"/>
   </statechart>
  </class>
  <operation name="Blinky_ctor" type="void" visibility="0x00" properties="0x01">
   <documentation>The Blinky &quot;constructor&quot; is provided outside of the Blinky class, so that it can be used independently from the class. This is part of the &quot;opaque pointer&quot; design idiom.</documentation>
   <code>Blinky *me = (Blinky *)AO_Blinky;
QActive_ctor(&amp;me-&gt;super, Q_STATE_CAST(&amp;Blinky_initial));
QTimeEvt_ctorX(&amp;me-&gt;timeEvt, &amp;me-&gt;super, TIMEOUT_SIG, 0U);</code>
  </operation>
 </package>
</model>
