{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"@grafana/ui\"","webpack:///external \"react\"","webpack:///./module.tsx","webpack:///./components/ModbusPanel.tsx","webpack:///./components/ModbusSettings/ModbusLayout.tsx","webpack:///./api/PicarroAPI.ts","webpack:///./types.ts"],"names":["installedModules","__webpack_require__","m","module","exports","__WEBPACK_EXTERNAL_MODULE__0__","__WEBPACK_EXTERNAL_MODULE__1__","_ui","_ModbusPanel","_types","plugin","PanelPlugin","ModbusPanel","setDefaults","defaults","_super","_react","_ModbusLayout","PureComponent","prototype","render","_a","this","props","options","width","height","_react2","default","createElement","ThemeContext","Consumer","theme","ModbusLayout","config","__extends","Component","componentDidMount","_this","newstate","__assign","state","url","picarro_server_url","picarro_modbus_setting_route","_PicarroAPI2","getRequest","then","response","slaveId","slave","tcpPort","port","picarro_network_route","ipAddress","ip","setState","componentWillReceiveProps","nextProps","user","UserOrgInfo","userOrgInfo","className","type","placeholder","value","readOnly","call","PicarroAPI","postData","data","console","log","fetch","method","headers","Content-Type","body","JSON","stringify","ok","Error","json","getRequestWithHeader","header","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","t","mode","__esModule","ns","create","key","bind","n","object","property","hasOwnProperty","p","s","moduleId","i","l","modules"],"mappings":"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","file":"module.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","module.exports = __WEBPACK_EXTERNAL_MODULE__1__;","import { PanelPlugin } from '@grafana/ui';\n\nimport { ModbusPanel } from './components/ModbusPanel';\n//import { ModbusPanelEditor } from './components/ModbusPanelEditor';\n\nimport { defaults, ModbusOptions } from './types';\n\nexport const plugin = new PanelPlugin<ModbusOptions>(ModbusPanel);\n//reactPanel.setEditor(ModbusPanelEditor);\nplugin.setDefaults(defaults);\n","import React, { PureComponent } from 'react';\nimport { PanelProps, ThemeContext } from '@grafana/ui';\n\nimport { ModbusOptions } from '../types';\nimport { ModbusLayout } from './ModbusSettings/ModbusLayout';\n\ninterface Props extends PanelProps<ModbusOptions> {}\n\nexport class ModbusPanel extends PureComponent<Props> {\n    render() {\n        const { options, width, height } = this.props;\n        return (\n            <ThemeContext.Consumer>\n                {theme => {\n                    return (\n                        <ModbusLayout\n                            width={width}\n                            height={height}\n                            options={options}\n                            theme={theme}\n                        />\n                    );\n                }}\n            </ThemeContext.Consumer>\n        );\n    }\n}\n","import React, { Component } from 'react';\n\nimport { ModbusProps } from '../../types';\nimport PicarroAPI from '../../api/PicarroAPI';\n\ninterface Props extends ModbusProps {}\n\nvar config = require('../../conf.json');\n\nexport class ModbusLayout extends Component<Props, any> {\n    constructor(props) {\n        super(props);\n        this.state = {\n            ipAddress: '127.0.0.1',\n            user: this.props.options.user,\n            UserOrgInfo: this.props.options.userOrgInfo,\n            slaveId: this.props.options.slaveId,\n            tcpPort: this.props.options.tcpPort,\n        };\n    }\n\n    componentDidMount() {\n        let newstate = { ...this.state };\n        let url = config.picarro_server_url + config.picarro_modbus_setting_route;\n        PicarroAPI.getRequest(url)\n            .then(response => {\n                newstate['slaveId'] = response['slave'];\n                newstate['tcpPort'] = response['port'];\n            })\n            .then(() => {\n                url = config.picarro_server_url + config.picarro_network_route;\n                PicarroAPI.getRequest(url).then(response => {\n                    newstate['ipAddress'] = response['ip'];\n                    this.setState(newstate);\n                });\n            });\n    }\n\n    componentWillReceiveProps(nextProps) {\n        let newstate = { ...this.state };\n        newstate['slaveId'] = nextProps.options.slaveId;\n        newstate['tcpPort'] = nextProps.options.tcpPort;\n        newstate['user'] = nextProps.options.user;\n        newstate['UserOrgInfo'] = nextProps.options.userOrgInfo;\n        this.setState(newstate);\n    }\n\n    render() {\n        return (\n            <div className=\"gf-form-group ng-pristine ng-invalid\">\n                <div>&nbsp;</div>\n                <div className=\"gf-form\">\n                    <span className=\"gf-form-label min-width-10\">IP Address</span>\n                    <input\n                        type=\"text\"\n                        className=\"gf-form-input\"\n                        placeholder=\"\"\n                        value={this.state.ipAddress}\n                        readOnly\n                    />\n                </div>\n                <div className=\"gf-form\">\n                    <span className=\"gf-form-label min-width-10\">Slave Id</span>\n                    <input\n                        type=\"text\"\n                        className=\"gf-form-input\"\n                        placeholder=\"\"\n                        value={this.state.slaveId}\n                        readOnly\n                    />\n                </div>\n                <div className=\"gf-form\">\n                    <span className=\"gf-form-label min-width-10\">TCP Port</span>\n                    <input\n                        type=\"text\"\n                        className=\"gf-form-input\"\n                        placeholder=\"\"\n                        value={this.state.tcpPort}\n                        readOnly\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n","let PicarroAPI = {\n    postData(url: string, data: object) {\n        console.log(data);\n        return fetch(url, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(data),\n        }).then(response => {\n            if (!response.ok) {\n                throw Error('Network POST request failed');\n            }\n            return response;\n        });\n    },\n\n    getRequest(url: string) {\n        return fetch(url, {\n            method: 'GET',\n        }).then(response => {\n            if (!response.ok) {\n                throw Error('Network GET request failed');\n            }\n            return response.json();\n        });\n    },\n\n    getRequestWithHeader(url: string, header: Headers) {\n        return fetch(url, {\n            headers: header,\n            method: 'GET',\n        }).then(response => {\n            if (!response.ok) {\n                throw Error('Network GET request failed');\n            }\n            return response.json();\n        });\n    },\n};\n\nexport default PicarroAPI;\n","import { GrafanaTheme } from '@grafana/ui';\n\nexport interface ModbusOptions {\n    slaveId: number;\n    tcpPort: number;\n    user: object;\n    userOrgInfo: object;\n}\n\nexport const defaults: ModbusOptions = {\n    slaveId: 1,\n    tcpPort: 50500,\n    user: {},\n    userOrgInfo: {},\n};\n\nexport interface ModbusProps {\n    width: number;\n    height: number;\n    options: ModbusOptions;\n    theme: GrafanaTheme;\n}\n"],"sourceRoot":""}