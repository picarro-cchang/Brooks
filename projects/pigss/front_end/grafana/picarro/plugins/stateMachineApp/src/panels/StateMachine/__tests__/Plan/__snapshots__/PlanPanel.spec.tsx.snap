// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<PlanPanel /> All Chan Masks == 0 ReactList renders 1`] = `
<PlanPanel
  bankAddition={Object {}}
  fileName=""
  isChanged={false}
  layoutSwitch={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
  plan={
    Object {
      "bank_names": Object {
        "1": Object {
          "channels": Object {
            "1": "Channel 1",
            "2": "Channel 2",
            "3": "Channel 3",
            "4": "Channel 4",
            "5": "Channel 5",
            "6": "Channel 6",
            "7": "Channel 7",
            "8": "Channel 8",
          },
          "name": "Bank 1",
        },
        "2": Object {
          "channels": Object {
            "1": "Channel 1",
            "2": "Channel 2",
            "3": "Channel 3",
            "4": "Channel 4",
            "5": "Channel 5",
            "6": "Channel 6",
            "7": "Channel 7",
            "8": "Channel 8",
          },
          "name": "Bank 2",
        },
        "3": Object {
          "channels": Object {
            "1": "Channel",
            "2": "Channel",
            "3": "Channel",
            "4": "Channel",
            "5": "Channel",
            "6": "Channel",
            "7": "Channel",
            "8": "Channel",
          },
          "name": "Bank 3",
        },
        "4": Object {
          "channels": Object {
            "1": "Channel",
            "2": "Channel",
            "3": "Channel",
            "4": "Channel",
            "5": "Channel",
            "6": "Channel",
            "7": "Channel",
            "8": "Channel",
          },
          "name": "Bank 4",
        },
      },
      "current_step": 1,
      "focus": Object {
        "column": 2,
        "row": 1,
      },
      "last_step": 1,
      "max_steps": 32,
      "num_plan_files": 1,
      "panel_to_show": 1,
      "plan_filename": "test.pln",
      "plan_files": Object {
        "1": "test.pln",
      },
      "steps": Object {
        "1": Object {
          "banks": Object {
            "1": Object {
              "chan_mask": 0,
              "clean": 0,
            },
            "2": Object {
              "chan_mask": 0,
              "clean": 0,
            },
          },
          "duration": 20,
          "reference": 0,
        },
      },
    }
  }
  setFocus={[MockFunction]}
  uistatus={Object {}}
  updateFileName={
    [MockFunction] {
      "calls": Array [
        Array [
          true,
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
  updatePanel={
    [MockFunction] {
      "calls": Array [
        Array [
          1,
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
  ws_sender={[MockFunction]}
>
  <div>
    <div
      className="panel-plan"
    >
      <h2
        className="panel-plan-text"
      >
        Schedule
      </h2>
      <span
        className="cancel panel-plan-text"
        id="cancel-x"
        onClick={[Function]}
      />
      <h6
        className="panel-plan-text"
      >
        Please click on available channels to set up a schedule, then click on the radio button to select starting position.
      </h6>
      <h6
        style={
          Object {
            "color": "white",
          }
        }
      >
        Currently not viewing a saved file
      </h6>
      <div
        className="panel-plan-inner"
      >
        <form>
          <ReactList
            axis="y"
            itemRenderer={[Function]}
            itemsRenderer={[Function]}
            length={32}
            minSize={1}
            pageSize={10}
            scrollParentGetter={[Function]}
            scrollParentViewportSizeGetter={[Function]}
            threshold={100}
            type="uniform"
            useStaticSize={false}
            useTranslate3d={false}
          >
            <div
              style={
                Object {
                  "position": "relative",
                }
              }
            >
              <div
                style={
                  Object {
                    "WebkitTransform": "translate(0px, 0px)",
                    "msTransform": "translate(0px, 0px)",
                    "transform": "translate(0px, 0px)",
                  }
                }
              >
                <div>
                  <div
                    key="0"
                  >
                    <div
                      className="gf-form-inline"
                      key="1"
                    >
                      <label
                        className="col-sm-1 panel-plan-text"
                        style={
                          Object {
                            "fontSize": "17px",
                            "marginTop": "5px",
                          }
                        }
                      >
                        1. 
                      </label>
                      <div
                        className="col-sm-6 col-bank-name"
                      >
                        <input
                          className="form-control plan-input panel-plan-text"
                          id="plan-port-1"
                          onChange={[Function]}
                          onFocus={[Function]}
                          placeholder="Select port"
                          style={
                            Object {
                              "float": "left",
                              "marginLeft": "2px",
                              "maxWidth": "90%",
                            }
                          }
                          type="text"
                          value=""
                        />
                      </div>
                      <div
                        className="col-sm-3"
                        style={
                          Object {
                            "paddingLeft": "0px",
                          }
                        }
                      >
                        <input
                          className="form-control input-small plan-input panel-plan-text"
                          id="plan-duration-1"
                          maxLength={8}
                          minLength={1}
                          onChange={[Function]}
                          onFocus={[Function]}
                          placeholder="Duration"
                          style={
                            Object {
                              "maxWidth": "100%",
                            }
                          }
                          type="text"
                          value=""
                        />
                      </div>
                      <label
                        className="panel-plan-text"
                        style={
                          Object {
                            "marginLeft": "-15px",
                            "paddingRight": "5px",
                          }
                        }
                      >
                        s
                      </label>
                      <label
                        className="col-sm-1 radio-btn"
                      >
                        <input
                          checked={true}
                          id="plan-row-1"
                          onChange={[Function]}
                          style={
                            Object {
                              "maxWidth": "100%",
                            }
                          }
                          type="radio"
                        />
                        <span
                          className="checkmark"
                        />
                      </label>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </ReactList>
        </form>
      </div>
      <div
        className="container"
      >
        <div
          className="row text-center btn-row-1"
        >
          <div
            className="col-sm-3"
          >
            <button
              className="btn btn-block btn-group"
              disabled={true}
              id="insert-btn"
              onClick={[Function]}
              type="button"
            >
              Insert Row
            </button>
          </div>
          <div
            className="col-sm-3"
          >
            <button
              className="btn btn-block btn-light btn-group"
              disabled={true}
              id="save-btn"
              onClick={[Function]}
              type="button"
            >
              Save
            </button>
          </div>
          <div
            className="col-sm-3"
          >
            <button
              className="btn btn-block btn-light btn-group"
              id="load-btn"
              onClick={[Function]}
              type="button"
            >
              Load
            </button>
          </div>
        </div>
        <div
          className="row btn-row-2"
        >
          <div
            className="col-sm-3"
          >
            <button
              className="btn btn-block btn-cancel btn-group"
              disabled={true}
              id="delete-btn"
              onClick={[Function]}
              type="button"
            >
              Delete Row
            </button>
          </div>
          <div
            className="col-sm-3"
          >
            <button
              className="btn btn-block btn-cancel btn-group"
              disabled={true}
              id="clear-btn"
              onClick={[Function]}
              type="button"
            >
              Clear
            </button>
          </div>
          <div
            className="col-sm-3"
          >
            <button
              className="btn btn-block btn-green btn-group"
              disabled={true}
              id="ok-btn"
              onClick={[Function]}
              type="button"
            >
              Save As
            </button>
          </div>
        </div>
      </div>
    </div>
  </div>
</PlanPanel>
`;

exports[`<PlanPanel /> For Clean not equal to 0 ReactList renders 1`] = `
<PlanPanel
  bankAddition={Object {}}
  fileName=""
  isChanged={false}
  layoutSwitch={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
  plan={
    Object {
      "bank_names": Object {
        "1": Object {
          "channels": Object {
            "1": "Channel 1",
            "2": "Channel 2",
            "3": "Channel 3",
            "4": "Channel 4",
            "5": "Channel 5",
            "6": "Channel 6",
            "7": "Channel 7",
            "8": "Channel 8",
          },
          "name": "Bank 1",
        },
        "2": Object {
          "channels": Object {
            "1": "Channel 1",
            "2": "Channel 2",
            "3": "Channel 3",
            "4": "Channel 4",
            "5": "Channel 5",
            "6": "Channel 6",
            "7": "Channel 7",
            "8": "Channel 8",
          },
          "name": "Bank 2",
        },
        "3": Object {
          "channels": Object {
            "1": "Channel",
            "2": "Channel",
            "3": "Channel",
            "4": "Channel",
            "5": "Channel",
            "6": "Channel",
            "7": "Channel",
            "8": "Channel",
          },
          "name": "Bank 3",
        },
        "4": Object {
          "channels": Object {
            "1": "Channel",
            "2": "Channel",
            "3": "Channel",
            "4": "Channel",
            "5": "Channel",
            "6": "Channel",
            "7": "Channel",
            "8": "Channel",
          },
          "name": "Bank 4",
        },
      },
      "current_step": 1,
      "focus": Object {
        "column": 2,
        "row": 1,
      },
      "last_step": 1,
      "max_steps": 32,
      "num_plan_files": 1,
      "panel_to_show": 1,
      "plan_filename": "test.pln",
      "plan_files": Object {
        "1": "test.pln",
      },
      "steps": Object {
        "1": Object {
          "banks": Object {
            "1": Object {
              "chan_mask": 0,
              "clean": 10,
            },
          },
          "duration": 1,
          "reference": 0,
        },
      },
    }
  }
  setFocus={[MockFunction]}
  uistatus={Object {}}
  updateFileName={
    [MockFunction] {
      "calls": Array [
        Array [
          true,
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
  updatePanel={
    [MockFunction] {
      "calls": Array [
        Array [
          1,
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
  ws_sender={[MockFunction]}
>
  <div>
    <div
      className="panel-plan"
    >
      <h2
        className="panel-plan-text"
      >
        Schedule
      </h2>
      <span
        className="cancel panel-plan-text"
        id="cancel-x"
        onClick={[Function]}
      />
      <h6
        className="panel-plan-text"
      >
        Please click on available channels to set up a schedule, then click on the radio button to select starting position.
      </h6>
      <h6
        style={
          Object {
            "color": "white",
          }
        }
      >
        Currently not viewing a saved file
      </h6>
      <div
        className="panel-plan-inner"
      >
        <form>
          <ReactList
            axis="y"
            itemRenderer={[Function]}
            itemsRenderer={[Function]}
            length={32}
            minSize={1}
            pageSize={10}
            scrollParentGetter={[Function]}
            scrollParentViewportSizeGetter={[Function]}
            threshold={100}
            type="uniform"
            useStaticSize={false}
            useTranslate3d={false}
          >
            <div
              style={
                Object {
                  "position": "relative",
                }
              }
            >
              <div
                style={
                  Object {
                    "WebkitTransform": "translate(0px, 0px)",
                    "msTransform": "translate(0px, 0px)",
                    "transform": "translate(0px, 0px)",
                  }
                }
              >
                <div>
                  <div
                    key="0"
                  >
                    <div
                      className="gf-form-inline"
                      key="1"
                    >
                      <label
                        className="col-sm-1 panel-plan-text"
                        style={
                          Object {
                            "fontSize": "17px",
                            "marginTop": "5px",
                          }
                        }
                      >
                        1. 
                      </label>
                      <div
                        className="col-sm-6 col-bank-name"
                      >
                        <input
                          className="form-control plan-input panel-plan-text"
                          id="plan-port-1"
                          onChange={[Function]}
                          onFocus={[Function]}
                          placeholder="Select port"
                          style={
                            Object {
                              "float": "left",
                              "marginLeft": "2px",
                              "maxWidth": "90%",
                            }
                          }
                          type="text"
                          value=""
                        />
                      </div>
                      <div
                        className="col-sm-3"
                        style={
                          Object {
                            "paddingLeft": "0px",
                          }
                        }
                      >
                        <input
                          className="form-control input-small plan-input panel-plan-text"
                          id="plan-duration-1"
                          maxLength={8}
                          minLength={1}
                          onChange={[Function]}
                          onFocus={[Function]}
                          placeholder="Duration"
                          style={
                            Object {
                              "maxWidth": "100%",
                            }
                          }
                          type="text"
                          value=""
                        />
                      </div>
                      <label
                        className="panel-plan-text"
                        style={
                          Object {
                            "marginLeft": "-15px",
                            "paddingRight": "5px",
                          }
                        }
                      >
                        s
                      </label>
                      <label
                        className="col-sm-1 radio-btn"
                      >
                        <input
                          checked={true}
                          id="plan-row-1"
                          onChange={[Function]}
                          style={
                            Object {
                              "maxWidth": "100%",
                            }
                          }
                          type="radio"
                        />
                        <span
                          className="checkmark"
                        />
                      </label>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </ReactList>
        </form>
      </div>
      <div
        className="container"
      >
        <div
          className="row text-center btn-row-1"
        >
          <div
            className="col-sm-3"
          >
            <button
              className="btn btn-block btn-group"
              disabled={true}
              id="insert-btn"
              onClick={[Function]}
              type="button"
            >
              Insert Row
            </button>
          </div>
          <div
            className="col-sm-3"
          >
            <button
              className="btn btn-block btn-light btn-group"
              disabled={true}
              id="save-btn"
              onClick={[Function]}
              type="button"
            >
              Save
            </button>
          </div>
          <div
            className="col-sm-3"
          >
            <button
              className="btn btn-block btn-light btn-group"
              id="load-btn"
              onClick={[Function]}
              type="button"
            >
              Load
            </button>
          </div>
        </div>
        <div
          className="row btn-row-2"
        >
          <div
            className="col-sm-3"
          >
            <button
              className="btn btn-block btn-cancel btn-group"
              disabled={true}
              id="delete-btn"
              onClick={[Function]}
              type="button"
            >
              Delete Row
            </button>
          </div>
          <div
            className="col-sm-3"
          >
            <button
              className="btn btn-block btn-cancel btn-group"
              disabled={true}
              id="clear-btn"
              onClick={[Function]}
              type="button"
            >
              Clear
            </button>
          </div>
          <div
            className="col-sm-3"
          >
            <button
              className="btn btn-block btn-green btn-group"
              disabled={true}
              id="ok-btn"
              onClick={[Function]}
              type="button"
            >
              Save As
            </button>
          </div>
        </div>
      </div>
    </div>
  </div>
</PlanPanel>
`;

exports[`<PlanPanel /> ReactList renders 1`] = `
<PlanPanel
  bankAddition={Object {}}
  fileName=""
  isChanged={false}
  layoutSwitch={[MockFunction]}
  plan={
    Object {
      "bank_names": Object {
        "1": Object {
          "channels": Object {
            "1": "Channel 1",
            "2": "Channel 2",
            "3": "Channel 3",
            "4": "Channel 4",
            "5": "Channel 5",
            "6": "Channel 6",
            "7": "Channel 7",
            "8": "Channel 8",
          },
          "name": "Bank 1",
        },
        "2": Object {
          "channels": Object {
            "1": "Channel 1",
            "2": "Channel 2",
            "3": "Channel 3",
            "4": "Channel 4",
            "5": "Channel 5",
            "6": "Channel 6",
            "7": "Channel 7",
            "8": "Channel 8",
          },
          "name": "Bank 2",
        },
        "3": Object {
          "channels": Object {
            "1": "Channel",
            "2": "Channel",
            "3": "Channel",
            "4": "Channel",
            "5": "Channel",
            "6": "Channel",
            "7": "Channel",
            "8": "Channel",
          },
          "name": "Bank 3",
        },
        "4": Object {
          "channels": Object {
            "1": "Channel",
            "2": "Channel",
            "3": "Channel",
            "4": "Channel",
            "5": "Channel",
            "6": "Channel",
            "7": "Channel",
            "8": "Channel",
          },
          "name": "Bank 4",
        },
      },
      "current_step": 1,
      "focus": Object {
        "column": 2,
        "row": 1,
      },
      "last_step": 4,
      "max_steps": 32,
      "num_plan_files": 1,
      "panel_to_show": 1,
      "plan_filename": "test.pln",
      "plan_files": Object {
        "1": "test.pln",
      },
      "steps": Object {
        "1": Object {
          "banks": Object {
            "1": Object {
              "chan_mask": 0,
              "clean": 0,
            },
            "3": Object {
              "chan_mask": 0,
              "clean": 0,
            },
            "4": Object {
              "chan_mask": 0,
              "clean": 0,
            },
          },
          "duration": 20,
          "reference": 1,
        },
        "2": Object {
          "banks": Object {
            "1": Object {
              "chan_mask": 0,
              "clean": 10,
            },
            "3": Object {
              "chan_mask": 0,
              "clean": 10,
            },
            "4": Object {
              "chan_mask": 0,
              "clean": 10,
            },
          },
          "duration": 20,
          "reference": 0,
        },
        "3": Object {
          "banks": Object {
            "1": Object {
              "chan_mask": 8,
              "clean": 0,
            },
            "3": Object {
              "chan_mask": 0,
              "clean": 0,
            },
            "4": Object {
              "chan_mask": 0,
              "clean": 0,
            },
          },
          "duration": 60,
          "reference": 0,
        },
        "4": Object {
          "banks": Object {
            "1": Object {
              "chan_mask": 128,
              "clean": 0,
            },
            "3": Object {
              "chan_mask": 0,
              "clean": 0,
            },
            "4": Object {
              "chan_mask": 0,
              "clean": 0,
            },
          },
          "duration": 60,
          "reference": 0,
        },
      },
    }
  }
  setFocus={[MockFunction]}
  uistatus={Object {}}
  updateFileName={
    [MockFunction] {
      "calls": Array [
        Array [
          true,
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
  updatePanel={[MockFunction]}
  ws_sender={[MockFunction]}
>
  <div>
    <div
      className="panel-plan"
    >
      <h2
        className="panel-plan-text"
      >
        Schedule
      </h2>
      <span
        className="cancel panel-plan-text"
        id="cancel-x"
        onClick={[Function]}
      />
      <h6
        className="panel-plan-text"
      >
        Please click on available channels to set up a schedule, then click on the radio button to select starting position.
      </h6>
      <h6
        style={
          Object {
            "color": "white",
          }
        }
      >
        Currently not viewing a saved file
      </h6>
      <div
        className="panel-plan-inner"
      >
        <form>
          <ReactList
            axis="y"
            itemRenderer={[Function]}
            itemsRenderer={[Function]}
            length={32}
            minSize={1}
            pageSize={10}
            scrollParentGetter={[Function]}
            scrollParentViewportSizeGetter={[Function]}
            threshold={100}
            type="uniform"
            useStaticSize={false}
            useTranslate3d={false}
          >
            <div
              style={
                Object {
                  "position": "relative",
                }
              }
            >
              <div
                style={
                  Object {
                    "WebkitTransform": "translate(0px, 0px)",
                    "msTransform": "translate(0px, 0px)",
                    "transform": "translate(0px, 0px)",
                  }
                }
              >
                <div>
                  <div
                    key="0"
                  >
                    <div
                      className="gf-form-inline"
                      key="1"
                    >
                      <label
                        className="col-sm-1 panel-plan-text"
                        style={
                          Object {
                            "fontSize": "17px",
                            "marginTop": "5px",
                          }
                        }
                      >
                        1. 
                      </label>
                      <div
                        className="col-sm-6 col-bank-name"
                      >
                        <input
                          className="form-control plan-input panel-plan-text"
                          id="plan-port-1"
                          onChange={[Function]}
                          onFocus={[Function]}
                          placeholder="Select port"
                          style={
                            Object {
                              "float": "left",
                              "marginLeft": "2px",
                              "maxWidth": "90%",
                            }
                          }
                          type="text"
                          value=""
                        />
                      </div>
                      <div
                        className="col-sm-3"
                        style={
                          Object {
                            "paddingLeft": "0px",
                          }
                        }
                      >
                        <input
                          className="form-control input-small plan-input panel-plan-text"
                          id="plan-duration-1"
                          maxLength={8}
                          minLength={1}
                          onChange={[Function]}
                          onFocus={[Function]}
                          placeholder="Duration"
                          style={
                            Object {
                              "maxWidth": "100%",
                            }
                          }
                          type="text"
                          value=""
                        />
                      </div>
                      <label
                        className="panel-plan-text"
                        style={
                          Object {
                            "marginLeft": "-15px",
                            "paddingRight": "5px",
                          }
                        }
                      >
                        s
                      </label>
                      <label
                        className="col-sm-1 radio-btn"
                      >
                        <input
                          checked={true}
                          id="plan-row-1"
                          onChange={[Function]}
                          style={
                            Object {
                              "maxWidth": "100%",
                            }
                          }
                          type="radio"
                        />
                        <span
                          className="checkmark"
                        />
                      </label>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </ReactList>
        </form>
      </div>
      <div
        className="container"
      >
        <div
          className="row text-center btn-row-1"
        >
          <div
            className="col-sm-3"
          >
            <button
              className="btn btn-block btn-group"
              disabled={true}
              id="insert-btn"
              onClick={[Function]}
              type="button"
            >
              Insert Row
            </button>
          </div>
          <div
            className="col-sm-3"
          >
            <button
              className="btn btn-block btn-light btn-group"
              disabled={true}
              id="save-btn"
              onClick={[Function]}
              type="button"
            >
              Save
            </button>
          </div>
          <div
            className="col-sm-3"
          >
            <button
              className="btn btn-block btn-light btn-group"
              id="load-btn"
              onClick={[Function]}
              type="button"
            >
              Load
            </button>
          </div>
        </div>
        <div
          className="row btn-row-2"
        >
          <div
            className="col-sm-3"
          >
            <button
              className="btn btn-block btn-cancel btn-group"
              disabled={true}
              id="delete-btn"
              onClick={[Function]}
              type="button"
            >
              Delete Row
            </button>
          </div>
          <div
            className="col-sm-3"
          >
            <button
              className="btn btn-block btn-cancel btn-group"
              disabled={true}
              id="clear-btn"
              onClick={[Function]}
              type="button"
            >
              Clear
            </button>
          </div>
          <div
            className="col-sm-3"
          >
            <button
              className="btn btn-block btn-green btn-group"
              disabled={true}
              id="ok-btn"
              onClick={[Function]}
              type="button"
            >
              Save As
            </button>
          </div>
        </div>
      </div>
    </div>
  </div>
</PlanPanel>
`;

exports[`<PlanPanel /> ReactList renders 2`] = `
<PlanPanel
  bankAddition={Object {}}
  fileName=""
  isChanged={true}
  layoutSwitch={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
  plan={
    Object {
      "bank_names": Object {
        "1": Object {
          "channels": Object {
            "1": "Channel 1",
            "2": "Channel 2",
            "3": "Channel 3",
            "4": "Channel 4",
            "5": "Channel 5",
            "6": "Channel 6",
            "7": "Channel 7",
            "8": "Channel 8",
          },
          "name": "Bank 1",
        },
        "2": Object {
          "channels": Object {
            "1": "Channel 1",
            "2": "Channel 2",
            "3": "Channel 3",
            "4": "Channel 4",
            "5": "Channel 5",
            "6": "Channel 6",
            "7": "Channel 7",
            "8": "Channel 8",
          },
          "name": "Bank 2",
        },
        "3": Object {
          "channels": Object {
            "1": "Channel",
            "2": "Channel",
            "3": "Channel",
            "4": "Channel",
            "5": "Channel",
            "6": "Channel",
            "7": "Channel",
            "8": "Channel",
          },
          "name": "Bank 3",
        },
        "4": Object {
          "channels": Object {
            "1": "Channel",
            "2": "Channel",
            "3": "Channel",
            "4": "Channel",
            "5": "Channel",
            "6": "Channel",
            "7": "Channel",
            "8": "Channel",
          },
          "name": "Bank 4",
        },
      },
      "current_step": 1,
      "focus": Object {
        "column": 2,
        "row": 1,
      },
      "last_step": 4,
      "max_steps": 32,
      "num_plan_files": 1,
      "panel_to_show": 1,
      "plan_filename": "test.pln",
      "plan_files": Object {
        "1": "test.pln",
      },
      "steps": Object {
        "1": Object {
          "banks": Object {
            "1": Object {
              "chan_mask": 0,
              "clean": 0,
            },
            "3": Object {
              "chan_mask": 0,
              "clean": 0,
            },
            "4": Object {
              "chan_mask": 0,
              "clean": 0,
            },
          },
          "duration": 20,
          "reference": 1,
        },
        "2": Object {
          "banks": Object {
            "1": Object {
              "chan_mask": 0,
              "clean": 10,
            },
            "3": Object {
              "chan_mask": 0,
              "clean": 10,
            },
            "4": Object {
              "chan_mask": 0,
              "clean": 10,
            },
          },
          "duration": 20,
          "reference": 0,
        },
        "3": Object {
          "banks": Object {
            "1": Object {
              "chan_mask": 8,
              "clean": 0,
            },
            "3": Object {
              "chan_mask": 0,
              "clean": 0,
            },
            "4": Object {
              "chan_mask": 0,
              "clean": 0,
            },
          },
          "duration": 60,
          "reference": 0,
        },
        "4": Object {
          "banks": Object {
            "1": Object {
              "chan_mask": 128,
              "clean": 0,
            },
            "3": Object {
              "chan_mask": 0,
              "clean": 0,
            },
            "4": Object {
              "chan_mask": 0,
              "clean": 0,
            },
          },
          "duration": 60,
          "reference": 0,
        },
      },
    }
  }
  setFocus={[MockFunction]}
  uistatus={Object {}}
  updateFileName={
    [MockFunction] {
      "calls": Array [
        Array [
          true,
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
  updatePanel={
    [MockFunction] {
      "calls": Array [
        Array [
          1,
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
  ws_sender={[MockFunction]}
>
  <div>
    <div
      className="panel-plan"
    >
      <h2
        className="panel-plan-text"
      >
        Schedule
      </h2>
      <span
        className="cancel panel-plan-text"
        id="cancel-x"
        onClick={[Function]}
      />
      <h6
        className="panel-plan-text"
      >
        Please click on available channels to set up a schedule, then click on the radio button to select starting position.
      </h6>
      <h6
        style={
          Object {
            "color": "white",
          }
        }
      >
        Currently not viewing a saved file
      </h6>
      <div
        className="panel-plan-inner"
      >
        <form>
          <ReactList
            axis="y"
            itemRenderer={[Function]}
            itemsRenderer={[Function]}
            length={32}
            minSize={1}
            pageSize={10}
            scrollParentGetter={[Function]}
            scrollParentViewportSizeGetter={[Function]}
            threshold={100}
            type="uniform"
            useStaticSize={false}
            useTranslate3d={false}
          >
            <div
              style={
                Object {
                  "position": "relative",
                }
              }
            >
              <div
                style={
                  Object {
                    "WebkitTransform": "translate(0px, 0px)",
                    "msTransform": "translate(0px, 0px)",
                    "transform": "translate(0px, 0px)",
                  }
                }
              >
                <div>
                  <div
                    key="0"
                  >
                    <div
                      className="gf-form-inline"
                      key="1"
                    >
                      <label
                        className="col-sm-1 panel-plan-text"
                        style={
                          Object {
                            "fontSize": "17px",
                            "marginTop": "5px",
                          }
                        }
                      >
                        1. 
                      </label>
                      <div
                        className="col-sm-6 col-bank-name"
                      >
                        <input
                          className="form-control plan-input panel-plan-text"
                          id="plan-port-1"
                          onChange={[Function]}
                          onFocus={[Function]}
                          placeholder="Select port"
                          style={
                            Object {
                              "float": "left",
                              "marginLeft": "2px",
                              "maxWidth": "90%",
                            }
                          }
                          type="text"
                          value=""
                        />
                      </div>
                      <div
                        className="col-sm-3"
                        style={
                          Object {
                            "paddingLeft": "0px",
                          }
                        }
                      >
                        <input
                          className="form-control input-small plan-input panel-plan-text"
                          id="plan-duration-1"
                          maxLength={8}
                          minLength={1}
                          onChange={[Function]}
                          onFocus={[Function]}
                          placeholder="Duration"
                          style={
                            Object {
                              "maxWidth": "100%",
                            }
                          }
                          type="text"
                          value=""
                        />
                      </div>
                      <label
                        className="panel-plan-text"
                        style={
                          Object {
                            "marginLeft": "-15px",
                            "paddingRight": "5px",
                          }
                        }
                      >
                        s
                      </label>
                      <label
                        className="col-sm-1 radio-btn"
                      >
                        <input
                          checked={true}
                          id="plan-row-1"
                          onChange={[Function]}
                          style={
                            Object {
                              "maxWidth": "100%",
                            }
                          }
                          type="radio"
                        />
                        <span
                          className="checkmark"
                        />
                      </label>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </ReactList>
        </form>
      </div>
      <div
        className="container"
      >
        <div
          className="row text-center btn-row-1"
        >
          <div
            className="col-sm-3"
          >
            <button
              className="btn btn-block btn-group"
              disabled={true}
              id="insert-btn"
              onClick={[Function]}
              type="button"
            >
              Insert Row
            </button>
          </div>
          <div
            className="col-sm-3"
          >
            <button
              className="btn btn-block btn-light btn-group"
              disabled={true}
              id="save-btn"
              onClick={[Function]}
              type="button"
            >
              Save
            </button>
          </div>
          <div
            className="col-sm-3"
          >
            <button
              className="btn btn-block btn-light btn-group"
              id="load-btn"
              onClick={[Function]}
              type="button"
            >
              Load
            </button>
          </div>
        </div>
        <div
          className="row btn-row-2"
        >
          <div
            className="col-sm-3"
          >
            <button
              className="btn btn-block btn-cancel btn-group"
              disabled={true}
              id="delete-btn"
              onClick={[Function]}
              type="button"
            >
              Delete Row
            </button>
          </div>
          <div
            className="col-sm-3"
          >
            <button
              className="btn btn-block btn-cancel btn-group"
              disabled={true}
              id="clear-btn"
              onClick={[Function]}
              type="button"
            >
              Clear
            </button>
          </div>
          <div
            className="col-sm-3"
          >
            <button
              className="btn btn-block btn-green btn-group"
              disabled={true}
              id="ok-btn"
              onClick={[Function]}
              type="button"
            >
              Save As
            </button>
          </div>
        </div>
      </div>
    </div>
  </div>
</PlanPanel>
`;

exports[`<PlanPanel /> Rows greater than 10  1`] = `
<div
  className="gf-form-inline"
>
  <label
    className="col-sm-1 panel-plan-text"
    style={
      Object {
        "fontSize": "17px",
        "marginLeft": "-7px",
        "marginRight": "7px",
        "marginTop": "5px",
      }
    }
  >
    10. 
  </label>
  <div
    className="col-sm-6 col-bank-name"
  >
    <input
      className="form-control plan-input panel-plan-text"
      id="plan-port-10"
      onChange={[Function]}
      onFocus={[Function]}
      placeholder="Select port"
      style={
        Object {
          "float": "left",
          "marginLeft": "2px",
          "maxWidth": "90%",
        }
      }
      type="text"
      value=""
    />
  </div>
  <div
    className="col-sm-3"
    style={
      Object {
        "paddingLeft": "0px",
      }
    }
  >
    <input
      className="form-control input-small plan-input panel-plan-text"
      id="plan-duration-10"
      maxLength={8}
      minLength={1}
      onChange={[Function]}
      onFocus={[Function]}
      placeholder="Duration"
      style={
        Object {
          "maxWidth": "100%",
        }
      }
      type="text"
      value=""
    />
  </div>
  <label
    className="panel-plan-text"
    style={
      Object {
        "marginLeft": "-15px",
        "paddingRight": "5px",
      }
    }
  >
    s
  </label>
  <label
    className="col-sm-1 radio-btn"
  >
    <input
      checked={false}
      id="plan-row-10"
      onChange={[Function]}
      style={
        Object {
          "maxWidth": "100%",
        }
      }
      type="radio"
    />
    <span
      className="checkmark"
    />
  </label>
</div>
`;

exports[`<PlanPanel /> Rows greater than 10 ReactList renders 1`] = `
<PlanPanel
  bankAddition={Object {}}
  fileName=""
  isChanged={false}
  layoutSwitch={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
  plan={
    Object {
      "bank_names": Object {
        "1": Object {
          "channels": Object {
            "1": "Channel 1",
            "2": "Channel 2",
            "3": "Channel 3",
            "4": "Channel 4",
            "5": "Channel 5",
            "6": "Channel 6",
            "7": "Channel 7",
            "8": "Channel 8",
          },
          "name": "Bank 1",
        },
        "2": Object {
          "channels": Object {
            "1": "Channel 1",
            "2": "Channel 2",
            "3": "Channel 3",
            "4": "Channel 4",
            "5": "Channel 5",
            "6": "Channel 6",
            "7": "Channel 7",
            "8": "Channel 8",
          },
          "name": "Bank 2",
        },
        "3": Object {
          "channels": Object {
            "1": "Channel",
            "2": "Channel",
            "3": "Channel",
            "4": "Channel",
            "5": "Channel",
            "6": "Channel",
            "7": "Channel",
            "8": "Channel",
          },
          "name": "Bank 3",
        },
        "4": Object {
          "channels": Object {
            "1": "Channel",
            "2": "Channel",
            "3": "Channel",
            "4": "Channel",
            "5": "Channel",
            "6": "Channel",
            "7": "Channel",
            "8": "Channel",
          },
          "name": "Bank 4",
        },
      },
      "current_step": 1,
      "focus": Object {
        "column": 2,
        "row": 1,
      },
      "last_step": 1,
      "max_steps": 32,
      "num_plan_files": 1,
      "panel_to_show": 1,
      "plan_filename": "test.pln",
      "plan_files": Object {
        "1": "test.pln",
      },
      "steps": Object {
        "1": Object {
          "banks": Object {
            "1": Object {
              "chan_mask": 10,
              "clean": 0,
            },
            "2": Object {
              "chan_mask": 10,
              "clean": 0,
            },
          },
          "duration": 0,
          "reference": 0,
        },
      },
    }
  }
  setFocus={[MockFunction]}
  uistatus={Object {}}
  updateFileName={
    [MockFunction] {
      "calls": Array [
        Array [
          true,
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
  updatePanel={
    [MockFunction] {
      "calls": Array [
        Array [
          1,
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
  ws_sender={[MockFunction]}
>
  <div>
    <div
      className="panel-plan"
    >
      <h2
        className="panel-plan-text"
      >
        Schedule
      </h2>
      <span
        className="cancel panel-plan-text"
        id="cancel-x"
        onClick={[Function]}
      />
      <h6
        className="panel-plan-text"
      >
        Please click on available channels to set up a schedule, then click on the radio button to select starting position.
      </h6>
      <h6
        style={
          Object {
            "color": "white",
          }
        }
      >
        Currently not viewing a saved file
      </h6>
      <div
        className="panel-plan-inner"
      >
        <form>
          <ReactList
            axis="y"
            itemRenderer={[Function]}
            itemsRenderer={[Function]}
            length={32}
            minSize={1}
            pageSize={10}
            scrollParentGetter={[Function]}
            scrollParentViewportSizeGetter={[Function]}
            threshold={100}
            type="uniform"
            useStaticSize={false}
            useTranslate3d={false}
          >
            <div
              style={
                Object {
                  "position": "relative",
                }
              }
            >
              <div
                style={
                  Object {
                    "WebkitTransform": "translate(0px, 0px)",
                    "msTransform": "translate(0px, 0px)",
                    "transform": "translate(0px, 0px)",
                  }
                }
              >
                <div>
                  <div
                    key="0"
                  >
                    <div
                      className="gf-form-inline"
                      key="1"
                    >
                      <label
                        className="col-sm-1 panel-plan-text"
                        style={
                          Object {
                            "fontSize": "17px",
                            "marginTop": "5px",
                          }
                        }
                      >
                        1. 
                      </label>
                      <div
                        className="col-sm-6 col-bank-name"
                      >
                        <input
                          className="form-control plan-input panel-plan-text"
                          id="plan-port-1"
                          onChange={[Function]}
                          onFocus={[Function]}
                          placeholder="Select port"
                          style={
                            Object {
                              "float": "left",
                              "marginLeft": "2px",
                              "maxWidth": "90%",
                            }
                          }
                          type="text"
                          value=""
                        />
                      </div>
                      <div
                        className="col-sm-3"
                        style={
                          Object {
                            "paddingLeft": "0px",
                          }
                        }
                      >
                        <input
                          className="form-control input-small plan-input panel-plan-text"
                          id="plan-duration-1"
                          maxLength={8}
                          minLength={1}
                          onChange={[Function]}
                          onFocus={[Function]}
                          placeholder="Duration"
                          style={
                            Object {
                              "maxWidth": "100%",
                            }
                          }
                          type="text"
                          value=""
                        />
                      </div>
                      <label
                        className="panel-plan-text"
                        style={
                          Object {
                            "marginLeft": "-15px",
                            "paddingRight": "5px",
                          }
                        }
                      >
                        s
                      </label>
                      <label
                        className="col-sm-1 radio-btn"
                      >
                        <input
                          checked={true}
                          id="plan-row-1"
                          onChange={[Function]}
                          style={
                            Object {
                              "maxWidth": "100%",
                            }
                          }
                          type="radio"
                        />
                        <span
                          className="checkmark"
                        />
                      </label>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </ReactList>
        </form>
      </div>
      <div
        className="container"
      >
        <div
          className="row text-center btn-row-1"
        >
          <div
            className="col-sm-3"
          >
            <button
              className="btn btn-block btn-group"
              disabled={true}
              id="insert-btn"
              onClick={[Function]}
              type="button"
            >
              Insert Row
            </button>
          </div>
          <div
            className="col-sm-3"
          >
            <button
              className="btn btn-block btn-light btn-group"
              disabled={true}
              id="save-btn"
              onClick={[Function]}
              type="button"
            >
              Save
            </button>
          </div>
          <div
            className="col-sm-3"
          >
            <button
              className="btn btn-block btn-light btn-group"
              id="load-btn"
              onClick={[Function]}
              type="button"
            >
              Load
            </button>
          </div>
        </div>
        <div
          className="row btn-row-2"
        >
          <div
            className="col-sm-3"
          >
            <button
              className="btn btn-block btn-cancel btn-group"
              disabled={true}
              id="delete-btn"
              onClick={[Function]}
              type="button"
            >
              Delete Row
            </button>
          </div>
          <div
            className="col-sm-3"
          >
            <button
              className="btn btn-block btn-cancel btn-group"
              disabled={true}
              id="clear-btn"
              onClick={[Function]}
              type="button"
            >
              Clear
            </button>
          </div>
          <div
            className="col-sm-3"
          >
            <button
              className="btn btn-block btn-green btn-group"
              disabled={true}
              id="ok-btn"
              onClick={[Function]}
              type="button"
            >
              Save As
            </button>
          </div>
        </div>
      </div>
    </div>
  </div>
</PlanPanel>
`;

exports[`<PlanPanel /> Snapshot 1`] = `
<div>
  <div
    className="panel-plan"
  >
    <h2
      className="panel-plan-text"
    >
      Schedule
    </h2>
    <span
      className="cancel panel-plan-text"
      id="cancel-x"
      onClick={[Function]}
    />
    <h6
      className="panel-plan-text"
    >
      Please click on available channels to set up a schedule, then click on the radio button to select starting position.
    </h6>
    <h6
      style={
        Object {
          "color": "white",
        }
      }
    >
      Currently not viewing a saved file
    </h6>
    <div
      className="panel-plan-inner"
    >
      <form>
        <ReactList
          axis="y"
          itemRenderer={[Function]}
          itemsRenderer={[Function]}
          length={32}
          minSize={1}
          pageSize={10}
          scrollParentGetter={[Function]}
          scrollParentViewportSizeGetter={[Function]}
          threshold={100}
          type="uniform"
          useStaticSize={false}
          useTranslate3d={false}
        />
      </form>
    </div>
    <div
      className="container"
    >
      <div
        className="row text-center btn-row-1"
      >
        <div
          className="col-sm-3"
        >
          <button
            className="btn btn-block btn-group"
            disabled={true}
            id="insert-btn"
            onClick={[Function]}
            type="button"
          >
            Insert Row
          </button>
        </div>
        <div
          className="col-sm-3"
        >
          <button
            className="btn btn-block btn-light btn-group"
            disabled={true}
            id="save-btn"
            onClick={[Function]}
            type="button"
          >
            Save
          </button>
        </div>
        <div
          className="col-sm-3"
        >
          <button
            className="btn btn-block btn-light btn-group"
            id="load-btn"
            onClick={[Function]}
            type="button"
          >
            Load
          </button>
        </div>
      </div>
      <div
        className="row btn-row-2"
      >
        <div
          className="col-sm-3"
        >
          <button
            className="btn btn-block btn-cancel btn-group"
            disabled={true}
            id="delete-btn"
            onClick={[Function]}
            type="button"
          >
            Delete Row
          </button>
        </div>
        <div
          className="col-sm-3"
        >
          <button
            className="btn btn-block btn-cancel btn-group"
            disabled={true}
            id="clear-btn"
            onClick={[Function]}
            type="button"
          >
            Clear
          </button>
        </div>
        <div
          className="col-sm-3"
        >
          <button
            className="btn btn-block btn-green btn-group"
            disabled={true}
            id="ok-btn"
            onClick={[Function]}
            type="button"
          >
            Save As
          </button>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`<PlanPanel /> makePlanRow 1`] = `
<div
  className="gf-form-inline"
>
  <label
    className="col-sm-1 panel-plan-text"
    style={
      Object {
        "fontSize": "17px",
        "marginTop": "5px",
      }
    }
  >
    5. 
  </label>
  <div
    className="col-sm-6 col-bank-name"
  >
    <input
      className="form-control plan-input panel-plan-text"
      id="plan-port-5"
      onChange={[Function]}
      onFocus={[Function]}
      placeholder="Select port"
      style={
        Object {
          "float": "left",
          "marginLeft": "2px",
          "maxWidth": "90%",
        }
      }
      type="text"
      value=""
    />
  </div>
  <div
    className="col-sm-3"
    style={
      Object {
        "paddingLeft": "0px",
      }
    }
  >
    <input
      className="form-control input-small plan-input panel-plan-text"
      id="plan-duration-5"
      maxLength={8}
      minLength={1}
      onChange={[Function]}
      onFocus={[Function]}
      placeholder="Duration"
      style={
        Object {
          "maxWidth": "100%",
        }
      }
      type="text"
      value=""
    />
  </div>
  <label
    className="panel-plan-text"
    style={
      Object {
        "marginLeft": "-15px",
        "paddingRight": "5px",
      }
    }
  >
    s
  </label>
  <label
    className="col-sm-1 radio-btn"
  >
    <input
      checked={false}
      id="plan-row-5"
      onChange={[Function]}
      style={
        Object {
          "maxWidth": "100%",
        }
      }
      type="radio"
    />
    <span
      className="checkmark"
    />
  </label>
</div>
`;

exports[`<PlanPanel /> renderItem 1`] = `<div />`;
