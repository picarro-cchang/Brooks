// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<PlanPanel /> All Chan Masks == 0 ReactList renders 1`] = `
<PlanPanel
  bankAddition={Object {}}
  fileName=""
  getStateFromSavedData={[MockFunction]}
  isEdited={false}
  layoutSwitch={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
  plan={
    Object {
      "bank_names": Object {
        "1": Object {
          "channels": Object {
            "1": "Channel 1",
            "2": "Channel 2",
            "3": "Channel 3",
            "4": "Channel 4",
            "5": "Channel 5",
            "6": "Channel 6",
            "7": "Channel 7",
            "8": "Channel 8",
          },
          "name": "Bank 1",
        },
        "2": Object {
          "channels": Object {
            "1": "Channel 1",
            "2": "Channel 2",
            "3": "Channel 3",
            "4": "Channel 4",
            "5": "Channel 5",
            "6": "Channel 6",
            "7": "Channel 7",
            "8": "Channel 8",
          },
          "name": "Bank 2",
        },
        "3": Object {
          "channels": Object {
            "1": "Channel",
            "2": "Channel",
            "3": "Channel",
            "4": "Channel",
            "5": "Channel",
            "6": "Channel",
            "7": "Channel",
            "8": "Channel",
          },
          "name": "Bank 3",
        },
        "4": Object {
          "channels": Object {
            "1": "Channel",
            "2": "Channel",
            "3": "Channel",
            "4": "Channel",
            "5": "Channel",
            "6": "Channel",
            "7": "Channel",
            "8": "Channel",
          },
          "name": "Bank 4",
        },
      },
      "current_step": 1,
      "focus": Object {
        "column": 2,
        "row": 1,
      },
      "last_step": 1,
      "max_steps": 32,
      "num_plan_files": 1,
      "panel_to_show": 1,
      "plan_filename": "test.pln",
      "plan_files": Object {
        "1": "test.pln",
      },
      "steps": Object {
        "1": Object {
          "banks": Object {
            "1": Object {
              "chan_mask": 0,
              "clean": 0,
            },
            "2": Object {
              "chan_mask": 0,
              "clean": 0,
            },
          },
          "duration": 20,
          "reference": 0,
        },
      },
    }
  }
  planOverwrite={[MockFunction]}
  setModalInfo={
    [MockFunction] {
      "calls": Array [
        Array [
          true,
          "<div>Save file as TestPlan? This will overwrite the file.</div>",
          2,
          Object {
            "1": Object {
              "caption": "Save",
              "className": "btn btn-success btn-large",
              "response": Object {
                "plan": Object {
                  "bank_names": Object {
                    "1": Object {
                      "channels": Object {
                        "1": "Channel 1",
                        "2": "Channel 2",
                        "3": "Channel 3",
                        "4": "Channel 4",
                        "5": "Channel 5",
                        "6": "Channel 6",
                        "7": "Channel 7",
                        "8": "Channel 8",
                      },
                      "name": "Bank 1",
                    },
                    "2": Object {
                      "channels": Object {
                        "1": "Channel 1",
                        "2": "Channel 2",
                        "3": "Channel 3",
                        "4": "Channel 4",
                        "5": "Channel 5",
                        "6": "Channel 6",
                        "7": "Channel 7",
                        "8": "Channel 8",
                      },
                      "name": "Bank 2",
                    },
                    "3": Object {
                      "channels": Object {
                        "1": "Channel",
                        "2": "Channel",
                        "3": "Channel",
                        "4": "Channel",
                        "5": "Channel",
                        "6": "Channel",
                        "7": "Channel",
                        "8": "Channel",
                      },
                      "name": "Bank 3",
                    },
                    "4": Object {
                      "channels": Object {
                        "1": "Channel",
                        "2": "Channel",
                        "3": "Channel",
                        "4": "Channel",
                        "5": "Channel",
                        "6": "Channel",
                        "7": "Channel",
                        "8": "Channel",
                      },
                      "name": "Bank 4",
                    },
                  },
                  "current_step": 1,
                  "focus": Object {
                    "column": 2,
                    "row": 1,
                  },
                  "last_step": 4,
                  "max_steps": 32,
                  "num_plan_files": 1,
                  "panel_to_show": 1,
                  "plan_filename": "test.pln",
                  "plan_files": Object {
                    "1": "test.pln",
                  },
                  "steps": Object {
                    "1": Object {
                      "banks": Object {
                        "1": Object {
                          "chan_mask": 0,
                          "clean": 0,
                        },
                        "3": Object {
                          "chan_mask": 0,
                          "clean": 0,
                        },
                        "4": Object {
                          "chan_mask": 0,
                          "clean": 0,
                        },
                      },
                      "duration": 0,
                      "reference": 0,
                    },
                    "2": Object {
                      "banks": Object {
                        "1": Object {
                          "chan_mask": 32,
                          "clean": 0,
                        },
                        "3": Object {
                          "chan_mask": 0,
                          "clean": 0,
                        },
                        "4": Object {
                          "chan_mask": 0,
                          "clean": 0,
                        },
                      },
                      "duration": 20,
                      "reference": 0,
                    },
                    "3": Object {
                      "banks": Object {
                        "1": Object {
                          "chan_mask": 8,
                          "clean": 0,
                        },
                        "3": Object {
                          "chan_mask": 0,
                          "clean": 0,
                        },
                        "4": Object {
                          "chan_mask": 0,
                          "clean": 0,
                        },
                      },
                      "duration": 60,
                      "reference": 0,
                    },
                    "4": Object {
                      "banks": Object {
                        "1": Object {
                          "chan_mask": 128,
                          "clean": 0,
                        },
                        "3": Object {
                          "chan_mask": 0,
                          "clean": 0,
                        },
                        "4": Object {
                          "chan_mask": 0,
                          "clean": 0,
                        },
                      },
                      "duration": 60,
                      "reference": 0,
                    },
                  },
                },
              },
            },
            "2": Object {
              "caption": "Cancel",
              "className": "btn btn-danger btn-large",
              "response": null,
            },
          },
          "saveOverwrite",
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
  setPlanStorage={[MockFunction]}
  uistatus={Object {}}
  updateFileName={
    [MockFunction] {
      "calls": Array [
        Array [
          true,
        ],
        Array [
          true,
        ],
        Array [
          true,
        ],
        Array [
          true,
        ],
        Array [
          true,
        ],
        Array [
          true,
        ],
        Array [
          true,
        ],
        Array [
          true,
        ],
        Array [
          true,
        ],
        Array [
          true,
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
  updatePanel={
    [MockFunction] {
      "calls": Array [
        Array [
          2,
        ],
        Array [
          1,
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
  updateSavedFileState={
    [MockFunction] {
      "calls": Array [
        Array [
          Object {
            "bank_names": Object {
              "1": Object {
                "channels": Object {
                  "1": "Channel 1",
                  "2": "Channel 2",
                  "3": "Channel 3",
                  "4": "Channel 4",
                  "5": "Channel 5",
                  "6": "Channel 6",
                  "7": "Channel 7",
                  "8": "Channel 8",
                },
                "name": "Bank 1",
              },
              "2": Object {
                "channels": Object {
                  "1": "Channel 1",
                  "2": "Channel 2",
                  "3": "Channel 3",
                  "4": "Channel 4",
                  "5": "Channel 5",
                  "6": "Channel 6",
                  "7": "Channel 7",
                  "8": "Channel 8",
                },
                "name": "Bank 2",
              },
              "3": Object {
                "channels": Object {
                  "1": "Channel",
                  "2": "Channel",
                  "3": "Channel",
                  "4": "Channel",
                  "5": "Channel",
                  "6": "Channel",
                  "7": "Channel",
                  "8": "Channel",
                },
                "name": "Bank 3",
              },
              "4": Object {
                "channels": Object {
                  "1": "Channel",
                  "2": "Channel",
                  "3": "Channel",
                  "4": "Channel",
                  "5": "Channel",
                  "6": "Channel",
                  "7": "Channel",
                  "8": "Channel",
                },
                "name": "Bank 4",
              },
            },
            "current_step": 1,
            "focus": Object {
              "column": 2,
              "row": 1,
            },
            "last_step": 4,
            "max_steps": 32,
            "num_plan_files": 1,
            "panel_to_show": 1,
            "plan_filename": "test.pln",
            "plan_files": Object {
              "1": "test.pln",
            },
            "steps": Object {
              "1": Object {
                "banks": Object {
                  "1": Object {
                    "chan_mask": 0,
                    "clean": 0,
                  },
                  "3": Object {
                    "chan_mask": 0,
                    "clean": 0,
                  },
                  "4": Object {
                    "chan_mask": 0,
                    "clean": 0,
                  },
                },
                "duration": 0,
                "reference": 0,
              },
              "2": Object {
                "banks": Object {
                  "1": Object {
                    "chan_mask": 32,
                    "clean": 0,
                  },
                  "3": Object {
                    "chan_mask": 0,
                    "clean": 0,
                  },
                  "4": Object {
                    "chan_mask": 0,
                    "clean": 0,
                  },
                },
                "duration": 20,
                "reference": 0,
              },
              "3": Object {
                "banks": Object {
                  "1": Object {
                    "chan_mask": 8,
                    "clean": 0,
                  },
                  "3": Object {
                    "chan_mask": 0,
                    "clean": 0,
                  },
                  "4": Object {
                    "chan_mask": 0,
                    "clean": 0,
                  },
                },
                "duration": 60,
                "reference": 0,
              },
              "4": Object {
                "banks": Object {
                  "1": Object {
                    "chan_mask": 128,
                    "clean": 0,
                  },
                  "3": Object {
                    "chan_mask": 0,
                    "clean": 0,
                  },
                  "4": Object {
                    "chan_mask": 0,
                    "clean": 0,
                  },
                },
                "duration": 60,
                "reference": 0,
              },
            },
          },
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
>
  <div>
    <div
      className="panel-plan"
    >
      <h2
        className="panel-plan-text"
      >
        Schedule
      </h2>
      <span
        className="cancel panel-plan-text"
        id="cancel-x"
        onClick={[Function]}
      />
      <h6
        className="panel-plan-text"
      >
        Please click on available channels to set up a schedule, then click on the radio button to select starting position.
      </h6>
      <div>
        <h6
          className="panel-plan-text"
        >
          Currently viewing File:
           
          <span
            style={
              Object {
                "color": "white",
              }
            }
          >
            test.pln
          </span>
        </h6>
      </div>
      <div
        className="panel-plan-inner"
      >
        <form>
          <ReactList
            axis="y"
            itemRenderer={[Function]}
            itemsRenderer={[Function]}
            length={32}
            minSize={1}
            pageSize={10}
            scrollParentGetter={[Function]}
            scrollParentViewportSizeGetter={[Function]}
            threshold={100}
            type="uniform"
            useStaticSize={false}
            useTranslate3d={false}
          >
            <div
              style={
                Object {
                  "position": "relative",
                }
              }
            >
              <div
                style={
                  Object {
                    "WebkitTransform": "translate(0px, 0px)",
                    "msTransform": "translate(0px, 0px)",
                    "transform": "translate(0px, 0px)",
                  }
                }
              >
                <div>
                  <div
                    key="0"
                  >
                    <div
                      className="gf-form-inline"
                      key="1"
                    >
                      <label
                        className="col-sm-1 panel-plan-text"
                        style={
                          Object {
                            "fontSize": "17px",
                            "marginTop": "5px",
                          }
                        }
                      >
                        1. 
                      </label>
                      <div
                        className="col-sm-6 col-bank-name"
                      >
                        <input
                          className="form-control plan-input panel-plan-text"
                          id="plan-port-1"
                          onChange={[Function]}
                          onFocus={[Function]}
                          placeholder="Select port"
                          style={
                            Object {
                              "float": "left",
                              "marginLeft": "2px",
                              "maxWidth": "90%",
                            }
                          }
                          type="text"
                          value=""
                        />
                      </div>
                      <div
                        className="col-sm-3"
                        style={
                          Object {
                            "paddingLeft": "0px",
                          }
                        }
                      >
                        <input
                          className="form-control input-small plan-input panel-plan-text"
                          id="plan-duration-1"
                          maxLength={8}
                          minLength={1}
                          onChange={[Function]}
                          onFocus={[Function]}
                          placeholder="Duration"
                          style={
                            Object {
                              "maxWidth": "100%",
                            }
                          }
                          type="text"
                          value="20"
                        />
                      </div>
                      <label
                        className="panel-plan-text"
                        style={
                          Object {
                            "marginLeft": "-15px",
                            "paddingRight": "5px",
                          }
                        }
                      >
                        s
                      </label>
                      <label
                        className="col-sm-1 radio-btn"
                      >
                        <input
                          checked={true}
                          id="plan-row-1"
                          onChange={[Function]}
                          style={
                            Object {
                              "maxWidth": "100%",
                            }
                          }
                          type="radio"
                        />
                        <span
                          className="checkmark"
                        />
                      </label>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </ReactList>
        </form>
      </div>
      <div
        className="container"
      >
        <div
          className="row text-center btn-row-1"
        >
          <div
            className="col-sm-3"
          >
            <button
              className="btn btn-block btn-group"
              disabled={false}
              id="insert-btn"
              onClick={[Function]}
              type="button"
            >
              Insert Row
            </button>
          </div>
          <div
            className="col-sm-3"
          >
            <button
              className="btn btn-block btn-light btn-group"
              disabled={false}
              id="save-btn"
              onClick={[Function]}
              type="button"
            >
              Save As
            </button>
          </div>
          <div
            className="col-sm-3"
          >
            <button
              className="btn btn-block btn-light btn-group"
              id="load-btn"
              onClick={[Function]}
              type="button"
            >
              Load
            </button>
          </div>
        </div>
        <div
          className="row btn-row-2"
        >
          <div
            className="col-sm-3"
          >
            <button
              className="btn btn-block btn-cancel btn-group"
              disabled={false}
              id="delete-btn"
              onClick={[Function]}
              type="button"
            >
              Delete Row
            </button>
          </div>
          <div
            className="col-sm-3"
          >
            <button
              className="btn btn-block btn-cancel btn-group"
              disabled={false}
              id="clear-btn"
              onClick={[Function]}
              type="button"
            >
              Clear
            </button>
          </div>
          <div
            className="col-sm-3"
          >
            <button
              className="btn btn-block btn-green btn-group"
              disabled={true}
              id="ok-btn"
              onClick={[Function]}
              type="button"
            >
              Save
            </button>
          </div>
        </div>
      </div>
    </div>
    <Modal
      animationDuration={500}
      blockScroll={true}
      center={true}
      classNames={Object {}}
      classes={
        Object {
          "closeButton": "styles_closeButton__20ID4",
          "closeIcon": "styles_closeIcon__1QwbI",
          "modal": "styles_modal__gNwvD",
          "modalCenter": "styles_modalCenter__L9F2w",
          "overlay": "styles_overlay__CLSq-",
          "transitionEnter": "styles_transitionEnter__3j_-a",
          "transitionEnterActive": "styles_transitionEnterActive___eQs7",
          "transitionExit": "styles_transitionExit__1KmEf",
          "transitionExitActive": "styles_transitionExitActive__1nQXw",
        }
      }
      closeIconSize={28}
      closeIconSvgPath={
        <path
          d="M28.5 9.62L26.38 7.5 18 15.88 9.62 7.5 7.5 9.62 15.88 18 7.5 26.38l2.12 2.12L18 20.12l8.38 8.38 2.12-2.12L20.12 18z"
        />
      }
      closeOnEsc={true}
      closeOnOverlayClick={true}
      focusTrapOptions={Object {}}
      focusTrapped={true}
      onClose={[Function]}
      open={false}
      role="dialog"
      showCloseIcon={true}
      styles={
        Object {
          "overlay": Object {
            "color": "black",
          },
        }
      }
    />
  </div>
</PlanPanel>
`;

exports[`<PlanPanel /> For Clean not equal to 0 ReactList renders 1`] = `
<PlanPanel
  bankAddition={Object {}}
  fileName=""
  getStateFromSavedData={[MockFunction]}
  isEdited={false}
  layoutSwitch={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
  plan={
    Object {
      "bank_names": Object {
        "1": Object {
          "channels": Object {
            "1": "Channel 1",
            "2": "Channel 2",
            "3": "Channel 3",
            "4": "Channel 4",
            "5": "Channel 5",
            "6": "Channel 6",
            "7": "Channel 7",
            "8": "Channel 8",
          },
          "name": "Bank 1",
        },
        "2": Object {
          "channels": Object {
            "1": "Channel 1",
            "2": "Channel 2",
            "3": "Channel 3",
            "4": "Channel 4",
            "5": "Channel 5",
            "6": "Channel 6",
            "7": "Channel 7",
            "8": "Channel 8",
          },
          "name": "Bank 2",
        },
        "3": Object {
          "channels": Object {
            "1": "Channel",
            "2": "Channel",
            "3": "Channel",
            "4": "Channel",
            "5": "Channel",
            "6": "Channel",
            "7": "Channel",
            "8": "Channel",
          },
          "name": "Bank 3",
        },
        "4": Object {
          "channels": Object {
            "1": "Channel",
            "2": "Channel",
            "3": "Channel",
            "4": "Channel",
            "5": "Channel",
            "6": "Channel",
            "7": "Channel",
            "8": "Channel",
          },
          "name": "Bank 4",
        },
      },
      "current_step": 1,
      "focus": Object {
        "column": 2,
        "row": 1,
      },
      "last_step": 1,
      "max_steps": 32,
      "num_plan_files": 1,
      "panel_to_show": 1,
      "plan_filename": "test.pln",
      "plan_files": Object {
        "1": "test.pln",
      },
      "steps": Object {
        "1": Object {
          "banks": Object {
            "1": Object {
              "chan_mask": 0,
              "clean": 10,
            },
          },
          "duration": 1,
          "reference": 0,
        },
      },
    }
  }
  planOverwrite={[MockFunction]}
  setModalInfo={
    [MockFunction] {
      "calls": Array [
        Array [
          true,
          "<div>Save file as TestPlan? This will overwrite the file.</div>",
          2,
          Object {
            "1": Object {
              "caption": "Save",
              "className": "btn btn-success btn-large",
              "response": Object {
                "plan": Object {
                  "bank_names": Object {
                    "1": Object {
                      "channels": Object {
                        "1": "Channel 1",
                        "2": "Channel 2",
                        "3": "Channel 3",
                        "4": "Channel 4",
                        "5": "Channel 5",
                        "6": "Channel 6",
                        "7": "Channel 7",
                        "8": "Channel 8",
                      },
                      "name": "Bank 1",
                    },
                    "2": Object {
                      "channels": Object {
                        "1": "Channel 1",
                        "2": "Channel 2",
                        "3": "Channel 3",
                        "4": "Channel 4",
                        "5": "Channel 5",
                        "6": "Channel 6",
                        "7": "Channel 7",
                        "8": "Channel 8",
                      },
                      "name": "Bank 2",
                    },
                    "3": Object {
                      "channels": Object {
                        "1": "Channel",
                        "2": "Channel",
                        "3": "Channel",
                        "4": "Channel",
                        "5": "Channel",
                        "6": "Channel",
                        "7": "Channel",
                        "8": "Channel",
                      },
                      "name": "Bank 3",
                    },
                    "4": Object {
                      "channels": Object {
                        "1": "Channel",
                        "2": "Channel",
                        "3": "Channel",
                        "4": "Channel",
                        "5": "Channel",
                        "6": "Channel",
                        "7": "Channel",
                        "8": "Channel",
                      },
                      "name": "Bank 4",
                    },
                  },
                  "current_step": 1,
                  "focus": Object {
                    "column": 2,
                    "row": 1,
                  },
                  "last_step": 4,
                  "max_steps": 32,
                  "num_plan_files": 1,
                  "panel_to_show": 1,
                  "plan_filename": "test.pln",
                  "plan_files": Object {
                    "1": "test.pln",
                  },
                  "steps": Object {
                    "1": Object {
                      "banks": Object {
                        "1": Object {
                          "chan_mask": 0,
                          "clean": 0,
                        },
                        "3": Object {
                          "chan_mask": 0,
                          "clean": 0,
                        },
                        "4": Object {
                          "chan_mask": 0,
                          "clean": 0,
                        },
                      },
                      "duration": 0,
                      "reference": 0,
                    },
                    "2": Object {
                      "banks": Object {
                        "1": Object {
                          "chan_mask": 32,
                          "clean": 0,
                        },
                        "3": Object {
                          "chan_mask": 0,
                          "clean": 0,
                        },
                        "4": Object {
                          "chan_mask": 0,
                          "clean": 0,
                        },
                      },
                      "duration": 20,
                      "reference": 0,
                    },
                    "3": Object {
                      "banks": Object {
                        "1": Object {
                          "chan_mask": 8,
                          "clean": 0,
                        },
                        "3": Object {
                          "chan_mask": 0,
                          "clean": 0,
                        },
                        "4": Object {
                          "chan_mask": 0,
                          "clean": 0,
                        },
                      },
                      "duration": 60,
                      "reference": 0,
                    },
                    "4": Object {
                      "banks": Object {
                        "1": Object {
                          "chan_mask": 128,
                          "clean": 0,
                        },
                        "3": Object {
                          "chan_mask": 0,
                          "clean": 0,
                        },
                        "4": Object {
                          "chan_mask": 0,
                          "clean": 0,
                        },
                      },
                      "duration": 60,
                      "reference": 0,
                    },
                  },
                },
              },
            },
            "2": Object {
              "caption": "Cancel",
              "className": "btn btn-danger btn-large",
              "response": null,
            },
          },
          "saveOverwrite",
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
  setPlanStorage={[MockFunction]}
  uistatus={Object {}}
  updateFileName={
    [MockFunction] {
      "calls": Array [
        Array [
          true,
        ],
        Array [
          true,
        ],
        Array [
          true,
        ],
        Array [
          true,
        ],
        Array [
          true,
        ],
        Array [
          true,
        ],
        Array [
          true,
        ],
        Array [
          true,
        ],
        Array [
          true,
        ],
        Array [
          true,
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
  updatePanel={
    [MockFunction] {
      "calls": Array [
        Array [
          2,
        ],
        Array [
          1,
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
  updateSavedFileState={
    [MockFunction] {
      "calls": Array [
        Array [
          Object {
            "bank_names": Object {
              "1": Object {
                "channels": Object {
                  "1": "Channel 1",
                  "2": "Channel 2",
                  "3": "Channel 3",
                  "4": "Channel 4",
                  "5": "Channel 5",
                  "6": "Channel 6",
                  "7": "Channel 7",
                  "8": "Channel 8",
                },
                "name": "Bank 1",
              },
              "2": Object {
                "channels": Object {
                  "1": "Channel 1",
                  "2": "Channel 2",
                  "3": "Channel 3",
                  "4": "Channel 4",
                  "5": "Channel 5",
                  "6": "Channel 6",
                  "7": "Channel 7",
                  "8": "Channel 8",
                },
                "name": "Bank 2",
              },
              "3": Object {
                "channels": Object {
                  "1": "Channel",
                  "2": "Channel",
                  "3": "Channel",
                  "4": "Channel",
                  "5": "Channel",
                  "6": "Channel",
                  "7": "Channel",
                  "8": "Channel",
                },
                "name": "Bank 3",
              },
              "4": Object {
                "channels": Object {
                  "1": "Channel",
                  "2": "Channel",
                  "3": "Channel",
                  "4": "Channel",
                  "5": "Channel",
                  "6": "Channel",
                  "7": "Channel",
                  "8": "Channel",
                },
                "name": "Bank 4",
              },
            },
            "current_step": 1,
            "focus": Object {
              "column": 2,
              "row": 1,
            },
            "last_step": 4,
            "max_steps": 32,
            "num_plan_files": 1,
            "panel_to_show": 1,
            "plan_filename": "test.pln",
            "plan_files": Object {
              "1": "test.pln",
            },
            "steps": Object {
              "1": Object {
                "banks": Object {
                  "1": Object {
                    "chan_mask": 0,
                    "clean": 0,
                  },
                  "3": Object {
                    "chan_mask": 0,
                    "clean": 0,
                  },
                  "4": Object {
                    "chan_mask": 0,
                    "clean": 0,
                  },
                },
                "duration": 0,
                "reference": 0,
              },
              "2": Object {
                "banks": Object {
                  "1": Object {
                    "chan_mask": 32,
                    "clean": 0,
                  },
                  "3": Object {
                    "chan_mask": 0,
                    "clean": 0,
                  },
                  "4": Object {
                    "chan_mask": 0,
                    "clean": 0,
                  },
                },
                "duration": 20,
                "reference": 0,
              },
              "3": Object {
                "banks": Object {
                  "1": Object {
                    "chan_mask": 8,
                    "clean": 0,
                  },
                  "3": Object {
                    "chan_mask": 0,
                    "clean": 0,
                  },
                  "4": Object {
                    "chan_mask": 0,
                    "clean": 0,
                  },
                },
                "duration": 60,
                "reference": 0,
              },
              "4": Object {
                "banks": Object {
                  "1": Object {
                    "chan_mask": 128,
                    "clean": 0,
                  },
                  "3": Object {
                    "chan_mask": 0,
                    "clean": 0,
                  },
                  "4": Object {
                    "chan_mask": 0,
                    "clean": 0,
                  },
                },
                "duration": 60,
                "reference": 0,
              },
            },
          },
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
>
  <div>
    <div
      className="panel-plan"
    >
      <h2
        className="panel-plan-text"
      >
        Schedule
      </h2>
      <span
        className="cancel panel-plan-text"
        id="cancel-x"
        onClick={[Function]}
      />
      <h6
        className="panel-plan-text"
      >
        Please click on available channels to set up a schedule, then click on the radio button to select starting position.
      </h6>
      <div>
        <h6
          className="panel-plan-text"
        >
          Currently viewing File:
           
          <span
            style={
              Object {
                "color": "white",
              }
            }
          >
            test.pln
          </span>
        </h6>
      </div>
      <div
        className="panel-plan-inner"
      >
        <form>
          <ReactList
            axis="y"
            itemRenderer={[Function]}
            itemsRenderer={[Function]}
            length={32}
            minSize={1}
            pageSize={10}
            scrollParentGetter={[Function]}
            scrollParentViewportSizeGetter={[Function]}
            threshold={100}
            type="uniform"
            useStaticSize={false}
            useTranslate3d={false}
          >
            <div
              style={
                Object {
                  "position": "relative",
                }
              }
            >
              <div
                style={
                  Object {
                    "WebkitTransform": "translate(0px, 0px)",
                    "msTransform": "translate(0px, 0px)",
                    "transform": "translate(0px, 0px)",
                  }
                }
              >
                <div>
                  <div
                    key="0"
                  >
                    <div
                      className="gf-form-inline"
                      key="1"
                    >
                      <label
                        className="col-sm-1 panel-plan-text"
                        style={
                          Object {
                            "fontSize": "17px",
                            "marginTop": "5px",
                          }
                        }
                      >
                        1. 
                      </label>
                      <div
                        className="col-sm-6 col-bank-name"
                      >
                        <input
                          className="form-control plan-input panel-plan-text"
                          id="plan-port-1"
                          onChange={[Function]}
                          onFocus={[Function]}
                          placeholder="Select port"
                          style={
                            Object {
                              "float": "left",
                              "marginLeft": "2px",
                              "maxWidth": "90%",
                            }
                          }
                          type="text"
                          value="Clean Bank 1"
                        />
                      </div>
                      <div
                        className="col-sm-3"
                        style={
                          Object {
                            "paddingLeft": "0px",
                          }
                        }
                      >
                        <input
                          className="form-control input-small plan-input panel-plan-text"
                          id="plan-duration-1"
                          maxLength={8}
                          minLength={1}
                          onChange={[Function]}
                          onFocus={[Function]}
                          placeholder="Duration"
                          style={
                            Object {
                              "maxWidth": "100%",
                            }
                          }
                          type="text"
                          value="1"
                        />
                      </div>
                      <label
                        className="panel-plan-text"
                        style={
                          Object {
                            "marginLeft": "-15px",
                            "paddingRight": "5px",
                          }
                        }
                      >
                        s
                      </label>
                      <label
                        className="col-sm-1 radio-btn"
                      >
                        <input
                          checked={true}
                          id="plan-row-1"
                          onChange={[Function]}
                          style={
                            Object {
                              "maxWidth": "100%",
                            }
                          }
                          type="radio"
                        />
                        <span
                          className="checkmark"
                        />
                      </label>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </ReactList>
        </form>
      </div>
      <div
        className="container"
      >
        <div
          className="row text-center btn-row-1"
        >
          <div
            className="col-sm-3"
          >
            <button
              className="btn btn-block btn-group"
              disabled={false}
              id="insert-btn"
              onClick={[Function]}
              type="button"
            >
              Insert Row
            </button>
          </div>
          <div
            className="col-sm-3"
          >
            <button
              className="btn btn-block btn-light btn-group"
              disabled={false}
              id="save-btn"
              onClick={[Function]}
              type="button"
            >
              Save As
            </button>
          </div>
          <div
            className="col-sm-3"
          >
            <button
              className="btn btn-block btn-light btn-group"
              id="load-btn"
              onClick={[Function]}
              type="button"
            >
              Load
            </button>
          </div>
        </div>
        <div
          className="row btn-row-2"
        >
          <div
            className="col-sm-3"
          >
            <button
              className="btn btn-block btn-cancel btn-group"
              disabled={false}
              id="delete-btn"
              onClick={[Function]}
              type="button"
            >
              Delete Row
            </button>
          </div>
          <div
            className="col-sm-3"
          >
            <button
              className="btn btn-block btn-cancel btn-group"
              disabled={false}
              id="clear-btn"
              onClick={[Function]}
              type="button"
            >
              Clear
            </button>
          </div>
          <div
            className="col-sm-3"
          >
            <button
              className="btn btn-block btn-green btn-group"
              disabled={true}
              id="ok-btn"
              onClick={[Function]}
              type="button"
            >
              Save
            </button>
          </div>
        </div>
      </div>
    </div>
    <Modal
      animationDuration={500}
      blockScroll={true}
      center={true}
      classNames={Object {}}
      classes={
        Object {
          "closeButton": "styles_closeButton__20ID4",
          "closeIcon": "styles_closeIcon__1QwbI",
          "modal": "styles_modal__gNwvD",
          "modalCenter": "styles_modalCenter__L9F2w",
          "overlay": "styles_overlay__CLSq-",
          "transitionEnter": "styles_transitionEnter__3j_-a",
          "transitionEnterActive": "styles_transitionEnterActive___eQs7",
          "transitionExit": "styles_transitionExit__1KmEf",
          "transitionExitActive": "styles_transitionExitActive__1nQXw",
        }
      }
      closeIconSize={28}
      closeIconSvgPath={
        <path
          d="M28.5 9.62L26.38 7.5 18 15.88 9.62 7.5 7.5 9.62 15.88 18 7.5 26.38l2.12 2.12L18 20.12l8.38 8.38 2.12-2.12L20.12 18z"
        />
      }
      closeOnEsc={true}
      closeOnOverlayClick={true}
      focusTrapOptions={Object {}}
      focusTrapped={true}
      onClose={[Function]}
      open={false}
      role="dialog"
      showCloseIcon={true}
      styles={
        Object {
          "overlay": Object {
            "color": "black",
          },
        }
      }
    />
  </div>
</PlanPanel>
`;

exports[`<PlanPanel /> ReactList renders 1`] = `
<PlanPanel
  bankAddition={
    Object {
      "bank": 1,
      "channel": 1,
    }
  }
  fileName="TestPlan"
  getStateFromSavedData={[MockFunction]}
  isEdited={false}
  layoutSwitch={[MockFunction]}
  plan={
    Object {
      "bank_names": Object {
        "1": Object {
          "channels": Object {
            "1": "Channel 1",
            "2": "Channel 2",
            "3": "Channel 3",
            "4": "Channel 4",
            "5": "Channel 5",
            "6": "Channel 6",
            "7": "Channel 7",
            "8": "Channel 8",
          },
          "name": "Bank 1",
        },
        "2": Object {
          "channels": Object {
            "1": "Channel 1",
            "2": "Channel 2",
            "3": "Channel 3",
            "4": "Channel 4",
            "5": "Channel 5",
            "6": "Channel 6",
            "7": "Channel 7",
            "8": "Channel 8",
          },
          "name": "Bank 2",
        },
        "3": Object {
          "channels": Object {
            "1": "Channel",
            "2": "Channel",
            "3": "Channel",
            "4": "Channel",
            "5": "Channel",
            "6": "Channel",
            "7": "Channel",
            "8": "Channel",
          },
          "name": "Bank 3",
        },
        "4": Object {
          "channels": Object {
            "1": "Channel",
            "2": "Channel",
            "3": "Channel",
            "4": "Channel",
            "5": "Channel",
            "6": "Channel",
            "7": "Channel",
            "8": "Channel",
          },
          "name": "Bank 4",
        },
      },
      "current_step": 1,
      "focus": Object {
        "column": 2,
        "row": 1,
      },
      "last_step": 4,
      "max_steps": 32,
      "num_plan_files": 1,
      "panel_to_show": 1,
      "plan_filename": "test.pln",
      "plan_files": Object {
        "1": "test.pln",
      },
      "steps": Object {
        "1": Object {
          "banks": Object {
            "1": Object {
              "chan_mask": 0,
              "clean": 0,
            },
            "3": Object {
              "chan_mask": 0,
              "clean": 0,
            },
            "4": Object {
              "chan_mask": 0,
              "clean": 0,
            },
          },
          "duration": 20,
          "reference": 1,
        },
        "2": Object {
          "banks": Object {
            "1": Object {
              "chan_mask": 32,
              "clean": 0,
            },
            "3": Object {
              "chan_mask": 0,
              "clean": 0,
            },
            "4": Object {
              "chan_mask": 0,
              "clean": 0,
            },
          },
          "duration": 20,
          "reference": 0,
        },
        "3": Object {
          "banks": Object {
            "1": Object {
              "chan_mask": 8,
              "clean": 0,
            },
            "3": Object {
              "chan_mask": 0,
              "clean": 0,
            },
            "4": Object {
              "chan_mask": 0,
              "clean": 0,
            },
          },
          "duration": 60,
          "reference": 0,
        },
        "4": Object {
          "banks": Object {
            "1": Object {
              "chan_mask": 128,
              "clean": 0,
            },
            "3": Object {
              "chan_mask": 0,
              "clean": 0,
            },
            "4": Object {
              "chan_mask": 0,
              "clean": 0,
            },
          },
          "duration": 60,
          "reference": 0,
        },
      },
    }
  }
  planOverwrite={[MockFunction]}
  setModalInfo={[MockFunction]}
  setPlanStorage={[MockFunction]}
  uistatus={
    Object {
      "bank": Object {
        "1": "READY",
        "3": "READY",
        "4": "READY",
      },
      "channel": Object {
        "1": Object {
          "1": "DISABLED",
          "2": "AVAILABLE",
          "3": "DISABLED",
          "4": "AVAILABLE",
          "5": "DISABLED",
          "6": "AVAILABLE",
          "7": "DISABLED",
          "8": "AVAILABLE",
        },
        "3": Object {
          "1": "DISABLED",
          "2": "AVAILABLE",
          "3": "DISABLED",
          "4": "AVAILABLE",
          "5": "DISABLED",
          "6": "AVAILABLE",
          "7": "DISABLED",
          "8": "AVAILABLE",
        },
        "4": Object {
          "1": "DISABLED",
          "2": "AVAILABLE",
          "3": "DISABLED",
          "4": "AVAILABLE",
          "5": "DISABLED",
          "6": "AVAILABLE",
          "7": "DISABLED",
          "8": "AVAILABLE",
        },
      },
      "clean": Object {
        "1": "READY",
        "3": "READY",
        "4": "READY",
      },
      "edit": "READY",
      "identify": "READY",
      "load": "READY",
      "loop_plan": "READY",
      "plan": "READY",
      "plan_loop": "READY",
      "plan_run": "READY",
      "reference": "READY",
      "run": "READY",
      "run_plan": "READY",
      "standby": "ACTIVE",
    }
  }
  updateFileName={
    [MockFunction] {
      "calls": Array [
        Array [
          true,
        ],
        Array [
          true,
        ],
        Array [
          true,
        ],
        Array [
          true,
        ],
        Array [
          true,
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
  updatePanel={[MockFunction]}
  updateSavedFileState={[MockFunction]}
>
  <div>
    <div
      className="panel-plan"
    >
      <h2
        className="panel-plan-text"
      >
        Schedule
      </h2>
      <span
        className="cancel panel-plan-text"
        id="cancel-x"
        onClick={[Function]}
      />
      <h6
        className="panel-plan-text"
      >
        Please click on available channels to set up a schedule, then click on the radio button to select starting position.
      </h6>
      <div>
        <h6
          className="panel-plan-text"
        >
          Currently viewing File:
           
          <span
            style={
              Object {
                "color": "white",
              }
            }
          >
            test.pln
          </span>
        </h6>
      </div>
      <div
        className="panel-plan-inner"
      >
        <form>
          <ReactList
            axis="y"
            itemRenderer={[Function]}
            itemsRenderer={[Function]}
            length={32}
            minSize={1}
            pageSize={10}
            scrollParentGetter={[Function]}
            scrollParentViewportSizeGetter={[Function]}
            threshold={100}
            type="uniform"
            useStaticSize={false}
            useTranslate3d={false}
          >
            <div
              style={
                Object {
                  "position": "relative",
                }
              }
            >
              <div
                style={
                  Object {
                    "WebkitTransform": "translate(0px, 0px)",
                    "msTransform": "translate(0px, 0px)",
                    "transform": "translate(0px, 0px)",
                  }
                }
              >
                <div>
                  <div
                    key="0"
                  >
                    <div
                      className="gf-form-inline"
                      key="1"
                    >
                      <label
                        className="col-sm-1 panel-plan-text"
                        style={
                          Object {
                            "fontSize": "17px",
                            "marginTop": "5px",
                          }
                        }
                      >
                        1. 
                      </label>
                      <div
                        className="col-sm-6 col-bank-name"
                      >
                        <input
                          className="form-control plan-input panel-plan-text"
                          id="plan-port-1"
                          onChange={[Function]}
                          onFocus={[Function]}
                          placeholder="Select port"
                          style={
                            Object {
                              "float": "left",
                              "marginLeft": "2px",
                              "maxWidth": "90%",
                            }
                          }
                          type="text"
                          value="Reference"
                        />
                      </div>
                      <div
                        className="col-sm-3"
                        style={
                          Object {
                            "paddingLeft": "0px",
                          }
                        }
                      >
                        <input
                          className="form-control input-small plan-input panel-plan-text"
                          id="plan-duration-1"
                          maxLength={8}
                          minLength={1}
                          onChange={[Function]}
                          onFocus={[Function]}
                          placeholder="Duration"
                          style={
                            Object {
                              "maxWidth": "100%",
                            }
                          }
                          type="text"
                          value="20"
                        />
                      </div>
                      <label
                        className="panel-plan-text"
                        style={
                          Object {
                            "marginLeft": "-15px",
                            "paddingRight": "5px",
                          }
                        }
                      >
                        s
                      </label>
                      <label
                        className="col-sm-1 radio-btn"
                      >
                        <input
                          checked={true}
                          id="plan-row-1"
                          onChange={[Function]}
                          style={
                            Object {
                              "maxWidth": "100%",
                            }
                          }
                          type="radio"
                        />
                        <span
                          className="checkmark"
                        />
                      </label>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </ReactList>
        </form>
      </div>
      <div
        className="container"
      >
        <div
          className="row text-center btn-row-1"
        >
          <div
            className="col-sm-3"
          >
            <button
              className="btn btn-block btn-group"
              disabled={false}
              id="insert-btn"
              onClick={[Function]}
              type="button"
            >
              Insert Row
            </button>
          </div>
          <div
            className="col-sm-3"
          >
            <button
              className="btn btn-block btn-light btn-group"
              disabled={false}
              id="save-btn"
              onClick={[Function]}
              type="button"
            >
              Save As
            </button>
          </div>
          <div
            className="col-sm-3"
          >
            <button
              className="btn btn-block btn-light btn-group"
              id="load-btn"
              onClick={[Function]}
              type="button"
            >
              Load
            </button>
          </div>
        </div>
        <div
          className="row btn-row-2"
        >
          <div
            className="col-sm-3"
          >
            <button
              className="btn btn-block btn-cancel btn-group"
              disabled={false}
              id="delete-btn"
              onClick={[Function]}
              type="button"
            >
              Delete Row
            </button>
          </div>
          <div
            className="col-sm-3"
          >
            <button
              className="btn btn-block btn-cancel btn-group"
              disabled={false}
              id="clear-btn"
              onClick={[Function]}
              type="button"
            >
              Clear
            </button>
          </div>
          <div
            className="col-sm-3"
          >
            <button
              className="btn btn-block btn-green btn-group"
              disabled={true}
              id="ok-btn"
              onClick={[Function]}
              type="button"
            >
              Save
            </button>
          </div>
        </div>
      </div>
    </div>
    <Modal
      animationDuration={500}
      blockScroll={true}
      center={true}
      classNames={Object {}}
      classes={
        Object {
          "closeButton": "styles_closeButton__20ID4",
          "closeIcon": "styles_closeIcon__1QwbI",
          "modal": "styles_modal__gNwvD",
          "modalCenter": "styles_modalCenter__L9F2w",
          "overlay": "styles_overlay__CLSq-",
          "transitionEnter": "styles_transitionEnter__3j_-a",
          "transitionEnterActive": "styles_transitionEnterActive___eQs7",
          "transitionExit": "styles_transitionExit__1KmEf",
          "transitionExitActive": "styles_transitionExitActive__1nQXw",
        }
      }
      closeIconSize={28}
      closeIconSvgPath={
        <path
          d="M28.5 9.62L26.38 7.5 18 15.88 9.62 7.5 7.5 9.62 15.88 18 7.5 26.38l2.12 2.12L18 20.12l8.38 8.38 2.12-2.12L20.12 18z"
        />
      }
      closeOnEsc={true}
      closeOnOverlayClick={true}
      focusTrapOptions={Object {}}
      focusTrapped={true}
      onClose={[Function]}
      open={false}
      role="dialog"
      showCloseIcon={true}
      styles={
        Object {
          "overlay": Object {
            "color": "black",
          },
        }
      }
    />
  </div>
</PlanPanel>
`;

exports[`<PlanPanel /> ReactList renders 2`] = `
<PlanPanel
  bankAddition={
    Object {
      "bank": 1,
      "channel": 1,
    }
  }
  fileName="TestPlan"
  getStateFromSavedData={[MockFunction]}
  isChanged={true}
  isEdited={false}
  layoutSwitch={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
  plan={
    Object {
      "bank_names": Object {
        "1": Object {
          "channels": Object {
            "1": "Channel 1",
            "2": "Channel 2",
            "3": "Channel 3",
            "4": "Channel 4",
            "5": "Channel 5",
            "6": "Channel 6",
            "7": "Channel 7",
            "8": "Channel 8",
          },
          "name": "Bank 1",
        },
        "2": Object {
          "channels": Object {
            "1": "Channel 1",
            "2": "Channel 2",
            "3": "Channel 3",
            "4": "Channel 4",
            "5": "Channel 5",
            "6": "Channel 6",
            "7": "Channel 7",
            "8": "Channel 8",
          },
          "name": "Bank 2",
        },
        "3": Object {
          "channels": Object {
            "1": "Channel",
            "2": "Channel",
            "3": "Channel",
            "4": "Channel",
            "5": "Channel",
            "6": "Channel",
            "7": "Channel",
            "8": "Channel",
          },
          "name": "Bank 3",
        },
        "4": Object {
          "channels": Object {
            "1": "Channel",
            "2": "Channel",
            "3": "Channel",
            "4": "Channel",
            "5": "Channel",
            "6": "Channel",
            "7": "Channel",
            "8": "Channel",
          },
          "name": "Bank 4",
        },
      },
      "current_step": 1,
      "focus": Object {
        "column": 2,
        "row": 1,
      },
      "last_step": 4,
      "max_steps": 32,
      "num_plan_files": 1,
      "panel_to_show": 1,
      "plan_filename": "test.pln",
      "plan_files": Object {
        "1": "test.pln",
      },
      "steps": Object {
        "1": Object {
          "banks": Object {
            "1": Object {
              "chan_mask": 0,
              "clean": 0,
            },
            "3": Object {
              "chan_mask": 0,
              "clean": 0,
            },
            "4": Object {
              "chan_mask": 0,
              "clean": 0,
            },
          },
          "duration": 0,
          "reference": 0,
        },
        "2": Object {
          "banks": Object {
            "1": Object {
              "chan_mask": 32,
              "clean": 0,
            },
            "3": Object {
              "chan_mask": 0,
              "clean": 0,
            },
            "4": Object {
              "chan_mask": 0,
              "clean": 0,
            },
          },
          "duration": 20,
          "reference": 0,
        },
        "3": Object {
          "banks": Object {
            "1": Object {
              "chan_mask": 8,
              "clean": 0,
            },
            "3": Object {
              "chan_mask": 0,
              "clean": 0,
            },
            "4": Object {
              "chan_mask": 0,
              "clean": 0,
            },
          },
          "duration": 60,
          "reference": 0,
        },
        "4": Object {
          "banks": Object {
            "1": Object {
              "chan_mask": 128,
              "clean": 0,
            },
            "3": Object {
              "chan_mask": 0,
              "clean": 0,
            },
            "4": Object {
              "chan_mask": 0,
              "clean": 0,
            },
          },
          "duration": 60,
          "reference": 0,
        },
      },
    }
  }
  planOverwrite={[MockFunction]}
  setModalInfo={
    [MockFunction] {
      "calls": Array [
        Array [
          true,
          "<div>Save file as TestPlan? This will overwrite the file.</div>",
          2,
          Object {
            "1": Object {
              "caption": "Save",
              "className": "btn btn-success btn-large",
              "response": Object {
                "plan": Object {
                  "bank_names": Object {
                    "1": Object {
                      "channels": Object {
                        "1": "Channel 1",
                        "2": "Channel 2",
                        "3": "Channel 3",
                        "4": "Channel 4",
                        "5": "Channel 5",
                        "6": "Channel 6",
                        "7": "Channel 7",
                        "8": "Channel 8",
                      },
                      "name": "Bank 1",
                    },
                    "2": Object {
                      "channels": Object {
                        "1": "Channel 1",
                        "2": "Channel 2",
                        "3": "Channel 3",
                        "4": "Channel 4",
                        "5": "Channel 5",
                        "6": "Channel 6",
                        "7": "Channel 7",
                        "8": "Channel 8",
                      },
                      "name": "Bank 2",
                    },
                    "3": Object {
                      "channels": Object {
                        "1": "Channel",
                        "2": "Channel",
                        "3": "Channel",
                        "4": "Channel",
                        "5": "Channel",
                        "6": "Channel",
                        "7": "Channel",
                        "8": "Channel",
                      },
                      "name": "Bank 3",
                    },
                    "4": Object {
                      "channels": Object {
                        "1": "Channel",
                        "2": "Channel",
                        "3": "Channel",
                        "4": "Channel",
                        "5": "Channel",
                        "6": "Channel",
                        "7": "Channel",
                        "8": "Channel",
                      },
                      "name": "Bank 4",
                    },
                  },
                  "current_step": 1,
                  "focus": Object {
                    "column": 2,
                    "row": 1,
                  },
                  "last_step": 4,
                  "max_steps": 32,
                  "num_plan_files": 1,
                  "panel_to_show": 1,
                  "plan_filename": "test.pln",
                  "plan_files": Object {
                    "1": "test.pln",
                  },
                  "steps": Object {
                    "1": Object {
                      "banks": Object {
                        "1": Object {
                          "chan_mask": 0,
                          "clean": 0,
                        },
                        "3": Object {
                          "chan_mask": 0,
                          "clean": 0,
                        },
                        "4": Object {
                          "chan_mask": 0,
                          "clean": 0,
                        },
                      },
                      "duration": 0,
                      "reference": 0,
                    },
                    "2": Object {
                      "banks": Object {
                        "1": Object {
                          "chan_mask": 32,
                          "clean": 0,
                        },
                        "3": Object {
                          "chan_mask": 0,
                          "clean": 0,
                        },
                        "4": Object {
                          "chan_mask": 0,
                          "clean": 0,
                        },
                      },
                      "duration": 20,
                      "reference": 0,
                    },
                    "3": Object {
                      "banks": Object {
                        "1": Object {
                          "chan_mask": 8,
                          "clean": 0,
                        },
                        "3": Object {
                          "chan_mask": 0,
                          "clean": 0,
                        },
                        "4": Object {
                          "chan_mask": 0,
                          "clean": 0,
                        },
                      },
                      "duration": 60,
                      "reference": 0,
                    },
                    "4": Object {
                      "banks": Object {
                        "1": Object {
                          "chan_mask": 128,
                          "clean": 0,
                        },
                        "3": Object {
                          "chan_mask": 0,
                          "clean": 0,
                        },
                        "4": Object {
                          "chan_mask": 0,
                          "clean": 0,
                        },
                      },
                      "duration": 60,
                      "reference": 0,
                    },
                  },
                },
              },
            },
            "2": Object {
              "caption": "Cancel",
              "className": "btn btn-danger btn-large",
              "response": null,
            },
          },
          "saveOverwrite",
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
  setPlanStorage={[MockFunction]}
  uistatus={
    Object {
      "bank": Object {
        "1": "READY",
        "3": "READY",
        "4": "READY",
      },
      "channel": Object {
        "1": Object {
          "1": "DISABLED",
          "2": "AVAILABLE",
          "3": "DISABLED",
          "4": "AVAILABLE",
          "5": "DISABLED",
          "6": "AVAILABLE",
          "7": "DISABLED",
          "8": "AVAILABLE",
        },
        "3": Object {
          "1": "DISABLED",
          "2": "AVAILABLE",
          "3": "DISABLED",
          "4": "AVAILABLE",
          "5": "DISABLED",
          "6": "AVAILABLE",
          "7": "DISABLED",
          "8": "AVAILABLE",
        },
        "4": Object {
          "1": "DISABLED",
          "2": "AVAILABLE",
          "3": "DISABLED",
          "4": "AVAILABLE",
          "5": "DISABLED",
          "6": "AVAILABLE",
          "7": "DISABLED",
          "8": "AVAILABLE",
        },
      },
      "clean": Object {
        "1": "READY",
        "3": "READY",
        "4": "READY",
      },
      "edit": "READY",
      "identify": "READY",
      "load": "READY",
      "loop_plan": "READY",
      "plan": "READY",
      "plan_loop": "READY",
      "plan_run": "READY",
      "reference": "READY",
      "run": "READY",
      "run_plan": "READY",
      "standby": "ACTIVE",
    }
  }
  updateFileName={
    [MockFunction] {
      "calls": Array [
        Array [
          true,
        ],
        Array [
          true,
        ],
        Array [
          true,
        ],
        Array [
          true,
        ],
        Array [
          true,
        ],
        Array [
          true,
        ],
        Array [
          true,
        ],
        Array [
          true,
        ],
        Array [
          true,
        ],
        Array [
          true,
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
  updatePanel={
    [MockFunction] {
      "calls": Array [
        Array [
          2,
        ],
        Array [
          1,
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
  updateSavedFileState={
    [MockFunction] {
      "calls": Array [
        Array [
          Object {
            "bank_names": Object {
              "1": Object {
                "channels": Object {
                  "1": "Channel 1",
                  "2": "Channel 2",
                  "3": "Channel 3",
                  "4": "Channel 4",
                  "5": "Channel 5",
                  "6": "Channel 6",
                  "7": "Channel 7",
                  "8": "Channel 8",
                },
                "name": "Bank 1",
              },
              "2": Object {
                "channels": Object {
                  "1": "Channel 1",
                  "2": "Channel 2",
                  "3": "Channel 3",
                  "4": "Channel 4",
                  "5": "Channel 5",
                  "6": "Channel 6",
                  "7": "Channel 7",
                  "8": "Channel 8",
                },
                "name": "Bank 2",
              },
              "3": Object {
                "channels": Object {
                  "1": "Channel",
                  "2": "Channel",
                  "3": "Channel",
                  "4": "Channel",
                  "5": "Channel",
                  "6": "Channel",
                  "7": "Channel",
                  "8": "Channel",
                },
                "name": "Bank 3",
              },
              "4": Object {
                "channels": Object {
                  "1": "Channel",
                  "2": "Channel",
                  "3": "Channel",
                  "4": "Channel",
                  "5": "Channel",
                  "6": "Channel",
                  "7": "Channel",
                  "8": "Channel",
                },
                "name": "Bank 4",
              },
            },
            "current_step": 1,
            "focus": Object {
              "column": 2,
              "row": 1,
            },
            "last_step": 4,
            "max_steps": 32,
            "num_plan_files": 1,
            "panel_to_show": 1,
            "plan_filename": "test.pln",
            "plan_files": Object {
              "1": "test.pln",
            },
            "steps": Object {
              "1": Object {
                "banks": Object {
                  "1": Object {
                    "chan_mask": 0,
                    "clean": 0,
                  },
                  "3": Object {
                    "chan_mask": 0,
                    "clean": 0,
                  },
                  "4": Object {
                    "chan_mask": 0,
                    "clean": 0,
                  },
                },
                "duration": 0,
                "reference": 0,
              },
              "2": Object {
                "banks": Object {
                  "1": Object {
                    "chan_mask": 32,
                    "clean": 0,
                  },
                  "3": Object {
                    "chan_mask": 0,
                    "clean": 0,
                  },
                  "4": Object {
                    "chan_mask": 0,
                    "clean": 0,
                  },
                },
                "duration": 20,
                "reference": 0,
              },
              "3": Object {
                "banks": Object {
                  "1": Object {
                    "chan_mask": 8,
                    "clean": 0,
                  },
                  "3": Object {
                    "chan_mask": 0,
                    "clean": 0,
                  },
                  "4": Object {
                    "chan_mask": 0,
                    "clean": 0,
                  },
                },
                "duration": 60,
                "reference": 0,
              },
              "4": Object {
                "banks": Object {
                  "1": Object {
                    "chan_mask": 128,
                    "clean": 0,
                  },
                  "3": Object {
                    "chan_mask": 0,
                    "clean": 0,
                  },
                  "4": Object {
                    "chan_mask": 0,
                    "clean": 0,
                  },
                },
                "duration": 60,
                "reference": 0,
              },
            },
          },
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
>
  <div>
    <div
      className="panel-plan"
    >
      <h2
        className="panel-plan-text"
      >
        Schedule
      </h2>
      <span
        className="cancel panel-plan-text"
        id="cancel-x"
        onClick={[Function]}
      />
      <h6
        className="panel-plan-text"
      >
        Please click on available channels to set up a schedule, then click on the radio button to select starting position.
      </h6>
      <div>
        <h6
          className="panel-plan-text"
        >
          Currently viewing File:
           
          <span
            style={
              Object {
                "color": "white",
              }
            }
          >
            test.pln
          </span>
        </h6>
      </div>
      <div
        className="panel-plan-inner"
      >
        <form>
          <ReactList
            axis="y"
            itemRenderer={[Function]}
            itemsRenderer={[Function]}
            length={32}
            minSize={1}
            pageSize={10}
            scrollParentGetter={[Function]}
            scrollParentViewportSizeGetter={[Function]}
            threshold={100}
            type="uniform"
            useStaticSize={false}
            useTranslate3d={false}
          >
            <div
              style={
                Object {
                  "position": "relative",
                }
              }
            >
              <div
                style={
                  Object {
                    "WebkitTransform": "translate(0px, 0px)",
                    "msTransform": "translate(0px, 0px)",
                    "transform": "translate(0px, 0px)",
                  }
                }
              >
                <div>
                  <div
                    key="0"
                  >
                    <div
                      className="gf-form-inline"
                      key="1"
                    >
                      <label
                        className="col-sm-1 panel-plan-text"
                        style={
                          Object {
                            "fontSize": "17px",
                            "marginTop": "5px",
                          }
                        }
                      >
                        1. 
                      </label>
                      <div
                        className="col-sm-6 col-bank-name"
                      >
                        <input
                          className="form-control plan-input panel-plan-text"
                          id="plan-port-1"
                          onChange={[Function]}
                          onFocus={[Function]}
                          placeholder="Select port"
                          style={
                            Object {
                              "float": "left",
                              "marginLeft": "2px",
                              "maxWidth": "90%",
                            }
                          }
                          type="text"
                          value=""
                        />
                      </div>
                      <div
                        className="col-sm-3"
                        style={
                          Object {
                            "paddingLeft": "0px",
                          }
                        }
                      >
                        <input
                          className="form-control input-small plan-input panel-plan-text"
                          id="plan-duration-1"
                          maxLength={8}
                          minLength={1}
                          onChange={[Function]}
                          onFocus={[Function]}
                          placeholder="Duration"
                          style={
                            Object {
                              "maxWidth": "100%",
                            }
                          }
                          type="text"
                          value=""
                        />
                      </div>
                      <label
                        className="panel-plan-text"
                        style={
                          Object {
                            "marginLeft": "-15px",
                            "paddingRight": "5px",
                          }
                        }
                      >
                        s
                      </label>
                      <label
                        className="col-sm-1 radio-btn"
                      >
                        <input
                          checked={true}
                          id="plan-row-1"
                          onChange={[Function]}
                          style={
                            Object {
                              "maxWidth": "100%",
                            }
                          }
                          type="radio"
                        />
                        <span
                          className="checkmark"
                        />
                      </label>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </ReactList>
        </form>
      </div>
      <div
        className="container"
      >
        <div
          className="row text-center btn-row-1"
        >
          <div
            className="col-sm-3"
          >
            <button
              className="btn btn-block btn-group"
              disabled={false}
              id="insert-btn"
              onClick={[Function]}
              type="button"
            >
              Insert Row
            </button>
          </div>
          <div
            className="col-sm-3"
          >
            <button
              className="btn btn-block btn-light btn-group"
              disabled={false}
              id="save-btn"
              onClick={[Function]}
              type="button"
            >
              Save As
            </button>
          </div>
          <div
            className="col-sm-3"
          >
            <button
              className="btn btn-block btn-light btn-group"
              id="load-btn"
              onClick={[Function]}
              type="button"
            >
              Load
            </button>
          </div>
        </div>
        <div
          className="row btn-row-2"
        >
          <div
            className="col-sm-3"
          >
            <button
              className="btn btn-block btn-cancel btn-group"
              disabled={false}
              id="delete-btn"
              onClick={[Function]}
              type="button"
            >
              Delete Row
            </button>
          </div>
          <div
            className="col-sm-3"
          >
            <button
              className="btn btn-block btn-cancel btn-group"
              disabled={false}
              id="clear-btn"
              onClick={[Function]}
              type="button"
            >
              Clear
            </button>
          </div>
          <div
            className="col-sm-3"
          >
            <button
              className="btn btn-block btn-green btn-group"
              disabled={true}
              id="ok-btn"
              onClick={[Function]}
              type="button"
            >
              Save
            </button>
          </div>
        </div>
      </div>
    </div>
    <Modal
      animationDuration={500}
      blockScroll={true}
      center={true}
      classNames={Object {}}
      classes={
        Object {
          "closeButton": "styles_closeButton__20ID4",
          "closeIcon": "styles_closeIcon__1QwbI",
          "modal": "styles_modal__gNwvD",
          "modalCenter": "styles_modalCenter__L9F2w",
          "overlay": "styles_overlay__CLSq-",
          "transitionEnter": "styles_transitionEnter__3j_-a",
          "transitionEnterActive": "styles_transitionEnterActive___eQs7",
          "transitionExit": "styles_transitionExit__1KmEf",
          "transitionExitActive": "styles_transitionExitActive__1nQXw",
        }
      }
      closeIconSize={28}
      closeIconSvgPath={
        <path
          d="M28.5 9.62L26.38 7.5 18 15.88 9.62 7.5 7.5 9.62 15.88 18 7.5 26.38l2.12 2.12L18 20.12l8.38 8.38 2.12-2.12L20.12 18z"
        />
      }
      closeOnEsc={true}
      closeOnOverlayClick={true}
      focusTrapOptions={Object {}}
      focusTrapped={true}
      onClose={[Function]}
      open={false}
      role="dialog"
      showCloseIcon={true}
      styles={
        Object {
          "overlay": Object {
            "color": "black",
          },
        }
      }
    />
  </div>
</PlanPanel>
`;

exports[`<PlanPanel /> Rows greater than 10  1`] = `
<div
  className="gf-form-inline"
>
  <label
    className="col-sm-1 panel-plan-text"
    style={
      Object {
        "fontSize": "17px",
        "marginLeft": "-7px",
        "marginRight": "7px",
        "marginTop": "5px",
      }
    }
  >
    10. 
  </label>
  <div
    className="col-sm-6 col-bank-name"
  >
    <input
      className="form-control plan-input panel-plan-text"
      id="plan-port-10"
      onChange={[Function]}
      onFocus={[Function]}
      placeholder="Select port"
      style={
        Object {
          "float": "left",
          "marginLeft": "2px",
          "maxWidth": "90%",
        }
      }
      type="text"
      value=""
    />
  </div>
  <div
    className="col-sm-3"
    style={
      Object {
        "paddingLeft": "0px",
      }
    }
  >
    <input
      className="form-control input-small plan-input panel-plan-text"
      id="plan-duration-10"
      maxLength={8}
      minLength={1}
      onChange={[Function]}
      onFocus={[Function]}
      placeholder="Duration"
      style={
        Object {
          "maxWidth": "100%",
        }
      }
      type="text"
      value=""
    />
  </div>
  <label
    className="panel-plan-text"
    style={
      Object {
        "marginLeft": "-15px",
        "paddingRight": "5px",
      }
    }
  >
    s
  </label>
  <label
    className="col-sm-1 radio-btn"
  >
    <input
      checked={false}
      id="plan-row-10"
      onChange={[Function]}
      style={
        Object {
          "maxWidth": "100%",
        }
      }
      type="radio"
    />
    <span
      className="checkmark"
    />
  </label>
</div>
`;

exports[`<PlanPanel /> Rows greater than 10 ReactList renders 1`] = `
<PlanPanel
  bankAddition={Object {}}
  fileName=""
  getStateFromSavedData={[MockFunction]}
  isEdited={false}
  layoutSwitch={
    [MockFunction] {
      "calls": Array [
        Array [],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
  plan={
    Object {
      "bank_names": Object {
        "1": Object {
          "channels": Object {
            "1": "Channel 1",
            "2": "Channel 2",
            "3": "Channel 3",
            "4": "Channel 4",
            "5": "Channel 5",
            "6": "Channel 6",
            "7": "Channel 7",
            "8": "Channel 8",
          },
          "name": "Bank 1",
        },
        "2": Object {
          "channels": Object {
            "1": "Channel 1",
            "2": "Channel 2",
            "3": "Channel 3",
            "4": "Channel 4",
            "5": "Channel 5",
            "6": "Channel 6",
            "7": "Channel 7",
            "8": "Channel 8",
          },
          "name": "Bank 2",
        },
        "3": Object {
          "channels": Object {
            "1": "Channel",
            "2": "Channel",
            "3": "Channel",
            "4": "Channel",
            "5": "Channel",
            "6": "Channel",
            "7": "Channel",
            "8": "Channel",
          },
          "name": "Bank 3",
        },
        "4": Object {
          "channels": Object {
            "1": "Channel",
            "2": "Channel",
            "3": "Channel",
            "4": "Channel",
            "5": "Channel",
            "6": "Channel",
            "7": "Channel",
            "8": "Channel",
          },
          "name": "Bank 4",
        },
      },
      "current_step": 1,
      "focus": Object {
        "column": 2,
        "row": 1,
      },
      "last_step": 1,
      "max_steps": 32,
      "num_plan_files": 1,
      "panel_to_show": 1,
      "plan_filename": "test.pln",
      "plan_files": Object {
        "1": "test.pln",
      },
      "steps": Object {
        "1": Object {
          "banks": Object {
            "1": Object {
              "chan_mask": 10,
              "clean": 0,
            },
            "2": Object {
              "chan_mask": 10,
              "clean": 0,
            },
          },
          "duration": 0,
          "reference": 0,
        },
      },
    }
  }
  planOverwrite={[MockFunction]}
  setModalInfo={
    [MockFunction] {
      "calls": Array [
        Array [
          true,
          "<div>Save file as TestPlan? This will overwrite the file.</div>",
          2,
          Object {
            "1": Object {
              "caption": "Save",
              "className": "btn btn-success btn-large",
              "response": Object {
                "plan": Object {
                  "bank_names": Object {
                    "1": Object {
                      "channels": Object {
                        "1": "Channel 1",
                        "2": "Channel 2",
                        "3": "Channel 3",
                        "4": "Channel 4",
                        "5": "Channel 5",
                        "6": "Channel 6",
                        "7": "Channel 7",
                        "8": "Channel 8",
                      },
                      "name": "Bank 1",
                    },
                    "2": Object {
                      "channels": Object {
                        "1": "Channel 1",
                        "2": "Channel 2",
                        "3": "Channel 3",
                        "4": "Channel 4",
                        "5": "Channel 5",
                        "6": "Channel 6",
                        "7": "Channel 7",
                        "8": "Channel 8",
                      },
                      "name": "Bank 2",
                    },
                    "3": Object {
                      "channels": Object {
                        "1": "Channel",
                        "2": "Channel",
                        "3": "Channel",
                        "4": "Channel",
                        "5": "Channel",
                        "6": "Channel",
                        "7": "Channel",
                        "8": "Channel",
                      },
                      "name": "Bank 3",
                    },
                    "4": Object {
                      "channels": Object {
                        "1": "Channel",
                        "2": "Channel",
                        "3": "Channel",
                        "4": "Channel",
                        "5": "Channel",
                        "6": "Channel",
                        "7": "Channel",
                        "8": "Channel",
                      },
                      "name": "Bank 4",
                    },
                  },
                  "current_step": 1,
                  "focus": Object {
                    "column": 2,
                    "row": 1,
                  },
                  "last_step": 4,
                  "max_steps": 32,
                  "num_plan_files": 1,
                  "panel_to_show": 1,
                  "plan_filename": "test.pln",
                  "plan_files": Object {
                    "1": "test.pln",
                  },
                  "steps": Object {
                    "1": Object {
                      "banks": Object {
                        "1": Object {
                          "chan_mask": 0,
                          "clean": 0,
                        },
                        "3": Object {
                          "chan_mask": 0,
                          "clean": 0,
                        },
                        "4": Object {
                          "chan_mask": 0,
                          "clean": 0,
                        },
                      },
                      "duration": 0,
                      "reference": 0,
                    },
                    "2": Object {
                      "banks": Object {
                        "1": Object {
                          "chan_mask": 32,
                          "clean": 0,
                        },
                        "3": Object {
                          "chan_mask": 0,
                          "clean": 0,
                        },
                        "4": Object {
                          "chan_mask": 0,
                          "clean": 0,
                        },
                      },
                      "duration": 20,
                      "reference": 0,
                    },
                    "3": Object {
                      "banks": Object {
                        "1": Object {
                          "chan_mask": 8,
                          "clean": 0,
                        },
                        "3": Object {
                          "chan_mask": 0,
                          "clean": 0,
                        },
                        "4": Object {
                          "chan_mask": 0,
                          "clean": 0,
                        },
                      },
                      "duration": 60,
                      "reference": 0,
                    },
                    "4": Object {
                      "banks": Object {
                        "1": Object {
                          "chan_mask": 128,
                          "clean": 0,
                        },
                        "3": Object {
                          "chan_mask": 0,
                          "clean": 0,
                        },
                        "4": Object {
                          "chan_mask": 0,
                          "clean": 0,
                        },
                      },
                      "duration": 60,
                      "reference": 0,
                    },
                  },
                },
              },
            },
            "2": Object {
              "caption": "Cancel",
              "className": "btn btn-danger btn-large",
              "response": null,
            },
          },
          "saveOverwrite",
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
  setPlanStorage={[MockFunction]}
  uistatus={Object {}}
  updateFileName={
    [MockFunction] {
      "calls": Array [
        Array [
          true,
        ],
        Array [
          true,
        ],
        Array [
          true,
        ],
        Array [
          true,
        ],
        Array [
          true,
        ],
        Array [
          true,
        ],
        Array [
          true,
        ],
        Array [
          true,
        ],
        Array [
          true,
        ],
        Array [
          true,
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
  updatePanel={
    [MockFunction] {
      "calls": Array [
        Array [
          2,
        ],
        Array [
          1,
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
  updateSavedFileState={
    [MockFunction] {
      "calls": Array [
        Array [
          Object {
            "bank_names": Object {
              "1": Object {
                "channels": Object {
                  "1": "Channel 1",
                  "2": "Channel 2",
                  "3": "Channel 3",
                  "4": "Channel 4",
                  "5": "Channel 5",
                  "6": "Channel 6",
                  "7": "Channel 7",
                  "8": "Channel 8",
                },
                "name": "Bank 1",
              },
              "2": Object {
                "channels": Object {
                  "1": "Channel 1",
                  "2": "Channel 2",
                  "3": "Channel 3",
                  "4": "Channel 4",
                  "5": "Channel 5",
                  "6": "Channel 6",
                  "7": "Channel 7",
                  "8": "Channel 8",
                },
                "name": "Bank 2",
              },
              "3": Object {
                "channels": Object {
                  "1": "Channel",
                  "2": "Channel",
                  "3": "Channel",
                  "4": "Channel",
                  "5": "Channel",
                  "6": "Channel",
                  "7": "Channel",
                  "8": "Channel",
                },
                "name": "Bank 3",
              },
              "4": Object {
                "channels": Object {
                  "1": "Channel",
                  "2": "Channel",
                  "3": "Channel",
                  "4": "Channel",
                  "5": "Channel",
                  "6": "Channel",
                  "7": "Channel",
                  "8": "Channel",
                },
                "name": "Bank 4",
              },
            },
            "current_step": 1,
            "focus": Object {
              "column": 2,
              "row": 1,
            },
            "last_step": 4,
            "max_steps": 32,
            "num_plan_files": 1,
            "panel_to_show": 1,
            "plan_filename": "test.pln",
            "plan_files": Object {
              "1": "test.pln",
            },
            "steps": Object {
              "1": Object {
                "banks": Object {
                  "1": Object {
                    "chan_mask": 0,
                    "clean": 0,
                  },
                  "3": Object {
                    "chan_mask": 0,
                    "clean": 0,
                  },
                  "4": Object {
                    "chan_mask": 0,
                    "clean": 0,
                  },
                },
                "duration": 0,
                "reference": 0,
              },
              "2": Object {
                "banks": Object {
                  "1": Object {
                    "chan_mask": 32,
                    "clean": 0,
                  },
                  "3": Object {
                    "chan_mask": 0,
                    "clean": 0,
                  },
                  "4": Object {
                    "chan_mask": 0,
                    "clean": 0,
                  },
                },
                "duration": 20,
                "reference": 0,
              },
              "3": Object {
                "banks": Object {
                  "1": Object {
                    "chan_mask": 8,
                    "clean": 0,
                  },
                  "3": Object {
                    "chan_mask": 0,
                    "clean": 0,
                  },
                  "4": Object {
                    "chan_mask": 0,
                    "clean": 0,
                  },
                },
                "duration": 60,
                "reference": 0,
              },
              "4": Object {
                "banks": Object {
                  "1": Object {
                    "chan_mask": 128,
                    "clean": 0,
                  },
                  "3": Object {
                    "chan_mask": 0,
                    "clean": 0,
                  },
                  "4": Object {
                    "chan_mask": 0,
                    "clean": 0,
                  },
                },
                "duration": 60,
                "reference": 0,
              },
            },
          },
        ],
      ],
      "results": Array [
        Object {
          "type": "return",
          "value": undefined,
        },
      ],
    }
  }
>
  <div>
    <div
      className="panel-plan"
    >
      <h2
        className="panel-plan-text"
      >
        Schedule
      </h2>
      <span
        className="cancel panel-plan-text"
        id="cancel-x"
        onClick={[Function]}
      />
      <h6
        className="panel-plan-text"
      >
        Please click on available channels to set up a schedule, then click on the radio button to select starting position.
      </h6>
      <div>
        <h6
          className="panel-plan-text"
        >
          Currently viewing File:
           
          <span
            style={
              Object {
                "color": "white",
              }
            }
          >
            test.pln
          </span>
        </h6>
      </div>
      <div
        className="panel-plan-inner"
      >
        <form>
          <ReactList
            axis="y"
            itemRenderer={[Function]}
            itemsRenderer={[Function]}
            length={32}
            minSize={1}
            pageSize={10}
            scrollParentGetter={[Function]}
            scrollParentViewportSizeGetter={[Function]}
            threshold={100}
            type="uniform"
            useStaticSize={false}
            useTranslate3d={false}
          >
            <div
              style={
                Object {
                  "position": "relative",
                }
              }
            >
              <div
                style={
                  Object {
                    "WebkitTransform": "translate(0px, 0px)",
                    "msTransform": "translate(0px, 0px)",
                    "transform": "translate(0px, 0px)",
                  }
                }
              >
                <div>
                  <div
                    key="0"
                  >
                    <div
                      className="gf-form-inline"
                      key="1"
                    >
                      <label
                        className="col-sm-1 panel-plan-text"
                        style={
                          Object {
                            "fontSize": "17px",
                            "marginTop": "5px",
                          }
                        }
                      >
                        1. 
                      </label>
                      <div
                        className="col-sm-6 col-bank-name"
                      >
                        <input
                          className="form-control plan-input panel-plan-text"
                          id="plan-port-1"
                          onChange={[Function]}
                          onFocus={[Function]}
                          placeholder="Select port"
                          style={
                            Object {
                              "float": "left",
                              "marginLeft": "2px",
                              "maxWidth": "90%",
                            }
                          }
                          type="text"
                          value="2: Channel 2"
                        />
                      </div>
                      <div
                        className="col-sm-3"
                        style={
                          Object {
                            "paddingLeft": "0px",
                          }
                        }
                      >
                        <input
                          className="form-control input-small plan-input panel-plan-text"
                          id="plan-duration-1"
                          maxLength={8}
                          minLength={1}
                          onChange={[Function]}
                          onFocus={[Function]}
                          placeholder="Duration"
                          style={
                            Object {
                              "maxWidth": "100%",
                            }
                          }
                          type="text"
                          value=""
                        />
                      </div>
                      <label
                        className="panel-plan-text"
                        style={
                          Object {
                            "marginLeft": "-15px",
                            "paddingRight": "5px",
                          }
                        }
                      >
                        s
                      </label>
                      <label
                        className="col-sm-1 radio-btn"
                      >
                        <input
                          checked={true}
                          id="plan-row-1"
                          onChange={[Function]}
                          style={
                            Object {
                              "maxWidth": "100%",
                            }
                          }
                          type="radio"
                        />
                        <span
                          className="checkmark"
                        />
                      </label>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </ReactList>
        </form>
      </div>
      <div
        className="container"
      >
        <div
          className="row text-center btn-row-1"
        >
          <div
            className="col-sm-3"
          >
            <button
              className="btn btn-block btn-group"
              disabled={false}
              id="insert-btn"
              onClick={[Function]}
              type="button"
            >
              Insert Row
            </button>
          </div>
          <div
            className="col-sm-3"
          >
            <button
              className="btn btn-block btn-light btn-group"
              disabled={false}
              id="save-btn"
              onClick={[Function]}
              type="button"
            >
              Save As
            </button>
          </div>
          <div
            className="col-sm-3"
          >
            <button
              className="btn btn-block btn-light btn-group"
              id="load-btn"
              onClick={[Function]}
              type="button"
            >
              Load
            </button>
          </div>
        </div>
        <div
          className="row btn-row-2"
        >
          <div
            className="col-sm-3"
          >
            <button
              className="btn btn-block btn-cancel btn-group"
              disabled={false}
              id="delete-btn"
              onClick={[Function]}
              type="button"
            >
              Delete Row
            </button>
          </div>
          <div
            className="col-sm-3"
          >
            <button
              className="btn btn-block btn-cancel btn-group"
              disabled={false}
              id="clear-btn"
              onClick={[Function]}
              type="button"
            >
              Clear
            </button>
          </div>
          <div
            className="col-sm-3"
          >
            <button
              className="btn btn-block btn-green btn-group"
              disabled={true}
              id="ok-btn"
              onClick={[Function]}
              type="button"
            >
              Save
            </button>
          </div>
        </div>
      </div>
    </div>
    <Modal
      animationDuration={500}
      blockScroll={true}
      center={true}
      classNames={Object {}}
      classes={
        Object {
          "closeButton": "styles_closeButton__20ID4",
          "closeIcon": "styles_closeIcon__1QwbI",
          "modal": "styles_modal__gNwvD",
          "modalCenter": "styles_modalCenter__L9F2w",
          "overlay": "styles_overlay__CLSq-",
          "transitionEnter": "styles_transitionEnter__3j_-a",
          "transitionEnterActive": "styles_transitionEnterActive___eQs7",
          "transitionExit": "styles_transitionExit__1KmEf",
          "transitionExitActive": "styles_transitionExitActive__1nQXw",
        }
      }
      closeIconSize={28}
      closeIconSvgPath={
        <path
          d="M28.5 9.62L26.38 7.5 18 15.88 9.62 7.5 7.5 9.62 15.88 18 7.5 26.38l2.12 2.12L18 20.12l8.38 8.38 2.12-2.12L20.12 18z"
        />
      }
      closeOnEsc={true}
      closeOnOverlayClick={true}
      focusTrapOptions={Object {}}
      focusTrapped={true}
      onClose={[Function]}
      open={false}
      role="dialog"
      showCloseIcon={true}
      styles={
        Object {
          "overlay": Object {
            "color": "black",
          },
        }
      }
    />
  </div>
</PlanPanel>
`;

exports[`<PlanPanel /> Snapshot 1`] = `
<div>
  <div
    className="panel-plan"
  >
    <h2
      className="panel-plan-text"
    >
      Schedule
    </h2>
    <span
      className="cancel panel-plan-text"
      id="cancel-x"
      onClick={[Function]}
    />
    <h6
      className="panel-plan-text"
    >
      Please click on available channels to set up a schedule, then click on the radio button to select starting position.
    </h6>
    <div>
      <h6
        className="panel-plan-text"
      >
        Currently viewing File:
         
        <span
          style={
            Object {
              "color": "white",
            }
          }
        >
          test.pln
        </span>
      </h6>
    </div>
    <div
      className="panel-plan-inner"
    >
      <form>
        <ReactList
          axis="y"
          itemRenderer={[Function]}
          itemsRenderer={[Function]}
          length={32}
          minSize={1}
          pageSize={10}
          scrollParentGetter={[Function]}
          scrollParentViewportSizeGetter={[Function]}
          threshold={100}
          type="uniform"
          useStaticSize={false}
          useTranslate3d={false}
        />
      </form>
    </div>
    <div
      className="container"
    >
      <div
        className="row text-center btn-row-1"
      >
        <div
          className="col-sm-3"
        >
          <button
            className="btn btn-block btn-group"
            disabled={false}
            id="insert-btn"
            onClick={[Function]}
            type="button"
          >
            Insert Row
          </button>
        </div>
        <div
          className="col-sm-3"
        >
          <button
            className="btn btn-block btn-light btn-group"
            disabled={false}
            id="save-btn"
            onClick={[Function]}
            type="button"
          >
            Save As
          </button>
        </div>
        <div
          className="col-sm-3"
        >
          <button
            className="btn btn-block btn-light btn-group"
            id="load-btn"
            onClick={[Function]}
            type="button"
          >
            Load
          </button>
        </div>
      </div>
      <div
        className="row btn-row-2"
      >
        <div
          className="col-sm-3"
        >
          <button
            className="btn btn-block btn-cancel btn-group"
            disabled={false}
            id="delete-btn"
            onClick={[Function]}
            type="button"
          >
            Delete Row
          </button>
        </div>
        <div
          className="col-sm-3"
        >
          <button
            className="btn btn-block btn-cancel btn-group"
            disabled={false}
            id="clear-btn"
            onClick={[Function]}
            type="button"
          >
            Clear
          </button>
        </div>
        <div
          className="col-sm-3"
        >
          <button
            className="btn btn-block btn-green btn-group"
            disabled={true}
            id="ok-btn"
            onClick={[Function]}
            type="button"
          >
            Save
          </button>
        </div>
      </div>
    </div>
  </div>
  <Modal
    animationDuration={500}
    blockScroll={true}
    center={true}
    classNames={Object {}}
    classes={
      Object {
        "closeButton": "styles_closeButton__20ID4",
        "closeIcon": "styles_closeIcon__1QwbI",
        "modal": "styles_modal__gNwvD",
        "modalCenter": "styles_modalCenter__L9F2w",
        "overlay": "styles_overlay__CLSq-",
        "transitionEnter": "styles_transitionEnter__3j_-a",
        "transitionEnterActive": "styles_transitionEnterActive___eQs7",
        "transitionExit": "styles_transitionExit__1KmEf",
        "transitionExitActive": "styles_transitionExitActive__1nQXw",
      }
    }
    closeIconSize={28}
    closeIconSvgPath={
      <path
        d="M28.5 9.62L26.38 7.5 18 15.88 9.62 7.5 7.5 9.62 15.88 18 7.5 26.38l2.12 2.12L18 20.12l8.38 8.38 2.12-2.12L20.12 18z"
      />
    }
    closeOnEsc={true}
    closeOnOverlayClick={true}
    focusTrapOptions={Object {}}
    focusTrapped={true}
    onClose={[Function]}
    open={false}
    role="dialog"
    showCloseIcon={true}
    styles={
      Object {
        "overlay": Object {
          "color": "black",
        },
      }
    }
  >
    <div
      style={
        Object {
          "margin": "20px",
        }
      }
    >
      <div
        dangerouslySetInnerHTML={
          Object {
            "__html": "",
          }
        }
      />
    </div>
  </Modal>
</div>
`;

exports[`<PlanPanel /> makePlanRow 1`] = `
<div
  className="gf-form-inline"
>
  <label
    className="col-sm-1 panel-plan-text"
    style={
      Object {
        "fontSize": "17px",
        "marginTop": "5px",
      }
    }
  >
    5. 
  </label>
  <div
    className="col-sm-6 col-bank-name"
  >
    <input
      className="form-control plan-input panel-plan-text"
      id="plan-port-5"
      onChange={[Function]}
      onFocus={[Function]}
      placeholder="Select port"
      style={
        Object {
          "float": "left",
          "marginLeft": "2px",
          "maxWidth": "90%",
        }
      }
      type="text"
      value=""
    />
  </div>
  <div
    className="col-sm-3"
    style={
      Object {
        "paddingLeft": "0px",
      }
    }
  >
    <input
      className="form-control input-small plan-input panel-plan-text"
      id="plan-duration-5"
      maxLength={8}
      minLength={1}
      onChange={[Function]}
      onFocus={[Function]}
      placeholder="Duration"
      style={
        Object {
          "maxWidth": "100%",
        }
      }
      type="text"
      value=""
    />
  </div>
  <label
    className="panel-plan-text"
    style={
      Object {
        "marginLeft": "-15px",
        "paddingRight": "5px",
      }
    }
  >
    s
  </label>
  <label
    className="col-sm-1 radio-btn"
  >
    <input
      checked={false}
      id="plan-row-5"
      onChange={[Function]}
      style={
        Object {
          "maxWidth": "100%",
        }
      }
      type="radio"
    />
    <span
      className="checkmark"
    />
  </label>
</div>
`;

exports[`<PlanPanel /> renderItem 1`] = `<div />`;
