#!/usr/bin/env python
import usb1
from hexfile import HexFile
from cStringIO import StringIO

sampleHex1 = """
:0A06F60000010202030304040505DD
:10031900E4F513F512F511F510C203C200C202C2C9
:10032900011205CB7E097F008E238F24752B097559
:100339002C1275210975221C752909752A4A752DF2
:1003490009752E78EE54E0700302045D751400758A
:1003590015808E168F17C374A49FFF74099ECF242E
:1003690002CF3400FEE48F0F8E0EF50DF50CF50B60
:10037900F50AF509F508AF0FAE0EAD0DAC0CAB0BD8
:10038900AA0AA909A808C31209F55026E515250BDB
:10039900F582E514350AF58374CDF0E50B2401F5F2
:1003A9000BE4350AF50AE43509F509E43508F508D9
:1003B90080C4E4F50BF50AF509F508AF0FAE0EADEB
:1003C9000DAC0CAB0BAA0AA909A808C31209F55070
:1003D90031AE0AAF0BE5172FF582E5163EF583E03E
:1003E900FDE5152FF582E5143EF583EDF0EF2401C7
:1003F900F50BE43EF50AE43509F509E43508F50895
:1004090080B985142385152474002480FF74093468
:10041900FFFEC3E52C9FF52CE52B9EF52BC3E526A6
:100429009FF526E5259EF525C3E5289FF528E527AF
:100439009EF527C3E5229FF522E5219EF521C3E517
:100449002A9FF52AE5299EF529C3E52E9FF52EE574
:100459002D9EF52DD2E843D82090E668E04409F0B6
:1004690090E65CE0443DF0D2AF90E680E020E10503
:10047900D204120B1590E680E054F7F0538EF8C2BF
:1004890003300105120080C201300329120CC45047
:1004990024C203120BC920001690E682E030E7045B
:1004A900E020E1EF90E682E030E604E020E0E412AB
:0A04B9000B71120CC61207B880C7C1
:1000800090E6B9E0700302015B14700302020424DD
:10009000FE700302029924FB7003020155147003E1
:1000A00002014F147003020143147003020149243A
:1000B000056003020305120CC8400302031190E619
:1000C000BBE024FE602C14604724FD6016146031F0
:1000D00024067065E52390E6B3F0E52490E6B4F0DD
:1000E000020311E52B90E6B3F0E52C90E6B4F002A4
:1000F0000311E52590E6B3F0E52690E6B4F002039F
:1001000011E52790E6B3F0E52890E6B4F00203117C
:1001100090E6BAE0FF120B9DAA06A9077B01EA4907
:10012000600DEE90E6B3F0EF90E6B4F002031190AC
:10013000E6A0E04401F002031190E6A0E04401F0E3
:10014000020311120C96020311120CB002031112D9
:100150000CA80203111208ED020311120CCA40038D
:1001600002031190E6B8E0247F602B14603C240267
:1001700060030201FAA200E433FF25E0FFA202E4DB
:10018000334F90E740F0E4A3F090E68AF090E68BDE
:100190007402F0020311E490E740F0A3F090E68AC5
:1001A000F090E68B7402F002031190E6BCE0547EFE
:1001B000FF7E00E0D3948040067C007D0180047CBB
:1001C000007D00EC4EFEED4F24F6F58274063EF500
:1001D00083E493FF3395E0FEEF24A1FFEE34E68F36
:1001E00082F583E0540190E740F0E4A3F090E68AC2
:1001F000F090E68B7402F002031190E6A0E0440157
:10020000F0020311120CCC400302031190E6B8E097
:1002100024FE601D2402600302031190E6BAE0B4DC
:100220000105C20002031190E6A0E04401F00203C0
:100230001190E6BAE0705990E6BCE0547EFF7E0073
:10024000E0D3948040067C007D0180047C007D002A
:10025000EC4EFEED4F24F6F58274063EF583E493F2
:10026000FF3395E0FEEF24A1FFEE34E68F82F583A5
:10027000E054FEF090E6BCE05480FF131313541FCB
:10028000FFE0540F2F90E683F0E04420F0020311CA
:1002900090E6A0E04401F08078120CCE507390E616
:1002A000B8E024FE60202402706790E6BAE0B40152
:1002B00004D200805C90E6BAE06402605490E6A04C
:1002C000E04401F0804B90E6BCE0547EFF7E00E00D
:1002D000D3948040067C007D0180047C007D00EC8E
:1002E0004EFEED4F24F6F58274063EF583E493FF4F
:1002F0003395E0FEEF24A1FFEE34E68F82F583E034
:100300004401F0800C120B44500790E6A0E0440139
:08031000F090E6A0E04480F04B
:0103180022C2
:03003300020CC0FC
:040CC00053D8EF32E4
:100900001201000200000040EF030110000001028C
:1009100000010A06000200000040010009022E004A
:1009200001010080320904000004FF0000000705F7
:100930000202000200070504020002000705860209
:100940000002000705880200020009022E000101D2
:100950000080320904000004FF00000007050202C5
:100960004000000705040240000007058602400021
:10097000000705880240000004030904100350002A
:10098000690063006100720072006F00180350007C
:10099000690063006100720072006F002D00550055
:0609A000530042000000BC
:100C8200501000C0F9A4B0999282F880988883C667
:030C9200A1868EAA
:1005CB0090E600E054E74410F090E601E04440F080
:1005DB0090E61074A0F090E611F000000090E61287
:1005EB0074A2F000000090E61374A0F000000090DD
:1005FB00E61474E2F000000090E61574E0F00000E1
:10060B000090E6917480F0000000F000000090E68E
:10061B0095F0000000F0E4FFFEE4F518F519740006
:10062B002519F58274F83518F583E519F00519E5E8
:10063B0019700205186440451870E3000000E4903F
:10064B00E698F000000090E6997440F00FBF0001AF
:10065B000EEF64024E70C2E4FEFFE4F518F519C309
:10066B0074409519FD74002519F58274FC3518F545
:10067B0083EDF00519E519700205186440451870F3
:10068B00DE000000E490E69CF000000090E69D7414
:10069B0040F00FBF00010EEF64024E70BD43AF017F
:0506AB00D200020CB8B2
:1007B800E4F518F519E5AA20E511000000E490E633
:1007C80098F000000090E6997440F0E5AA20E7113F
:1007D800000000E490E69CF000000090E69D744064
:1007E800F0E5AA20E0437AF079007EF07F0074F00B
:1007F800F59A7400F59B90E690E0FE90E691E07C17
:10080800002400FFEC3EFEE4FDC3ED9FEC9E500D7E
:1008180090E67BE0F5180DBD00010C80EC75190120
:1008280000000090E6917480F0E5AA20E20900003B
:100838000090E6957480F0E519601DE518540F24C2
:1008480000F582E43410AB82FA7D017F21120C0A94
:080858007F21120A79E4F51971
:010860002275
:020CC400D32239
:020CC600D32237
:020CC800D32235
:080CA80090E6BAE0F530D3221A
:1008ED0090E740E530F0E490E68AF090E68B04F076
:0208FD00D32204
:080CB00090E6BAE0F52FD32213
:100C960090E740E52FF0E490E68AF090E68B04F0CA
:020CA600D32257
:020CCA00D32233
:020CCC00D32231
:020CCE00D3222F
:100B440090E6B9E0242F601204701E90E604E0FFE2
:100B5400430780000000EFF0801190E604E0FF53AB
:0C0B6400077F000000EFF08002D322C3E6
:010B70002262
:100C2600C0E0C083C082D2015391EF90E65D7401AB
:080C3600F0D082D083D0E0323F
:100C5600C0E0C083C0825391EF90E65D7404F0D08B
:060C660082D083D0E032D1
:100C6C00C0E0C083C0825391EF90E65D7402F0D077
:060C7C0082D083D0E032BB
:100A4300C0E0C083C082852925852A268526828524
:100A53002583A37402F08521278522288528828592
:100A63002783A37407F05391EF90E65D7410F0D0E1
:060A730082D083D0E032C6
:100C3E00C0E0C083C082D2035391EF90E65D74088A
:080C4E00F0D082D083D0E03227
:100A0600C0E0C083C08290E680E030E720852125E3
:100A1600852226852682852583A37402F0852927CB
:100A2600852A28852882852783A37407F05391EFAA
:0D0A360090E65D7420F0D082D083D0E032D5
:0108FF0032C6
:010CD00032F1
:010CD10032F0
:010CD20032EF
:010CD30032EE
:010CD40032ED
:010CD50032EC
:010CD60032EB
:010CD70032EA
:010CD80032E9
:010CD90032E8
:010CDA0032E7
:010CDB0032E6
:010CDC0032E5
:010CDD0032E4
:010CDE0032E3
:010CDF0032E2
:010CE00032E1
:010CE10032E0
:010CE20032DF
:010CE30032DE
:010CE40032DD
:010CE50032DC
:010CE60032DB
:010CE70032DA
:010CE80032D9
:010CE90032D8
:010CEA0032D7
:010CEB0032D6
:010CEC0032D5
:010CED0032D4
:010CEE0032D3
:010CEF0032D2
:010CF00032D1
:010CF10032D0
:010CF20032CF
:100B710090E682E030E004E020E60B90E682E0308F
:100B8100E119E030E71590E680E04401F07F147E42
:0C0B9100001206B090E680E054FEF02256
:100BC90090E682E044C0F090E681F043870100009E
:040BD90000000022F6
:100B150030040990E680E0440AF0800790E680E022
:100B25004408F07FDC7E051206B090E65D74FFF0A8
:0F0B350090E65FF05391EF90E680E054F7F022E6
:080CB800E4F51FD2E9D2AF22DE
:100A790090E678E020E6F9C2E990E678E04480F073
:100A8900EF25E090E679F090E678E030E0F990E63D
:100A990078E04440F090E678E020E6F990E678E0E6
:060AA90030E1D6D2E92283
:100AE300A90790E678E020E6F9E51F702390E67801
:100AF300E04480F0E925E090E679F08D1AAF03A990
:100B030007751B018A1C891DE4F51E751F01D3227D
:020B1300C322FB
:100AAF00A90790E678E020E6F9E51F702590E67833
:100ABF00E04480F0E925E0440190E679F08D1AAF2B
:100ACF0003A907751B018A1C891DE4F51E751F03F9
:040ADF00D322C32239
:03004B000204C3E9
:1004C300C0E0C083C082C085C084C086758600C07A
:1004D300D075D000C000C001C002C003C006C00771
:1004E30090E678E030E206751F060205AD90E678E7
:1004F300E020E10CE51F64026006751F070205ADED
:10050300E51F24FE605F14603624FE700302059E1F
:1005130024FC70030205AA240860030205ADAB1B8B
:10052300AA1CA91DAF1E051E8F827583001209A682
:1005330090E679F0E51E651A7070751F05806B9063
:10054300E679E0AB1BAA1CA91DAE1E8E8275830043
:100553001209D3751F02E51A6401704E90E678E024
:100563004420F08045E51A24FEB51E0790E678E0A6
:100573004420F0E51A14B51E0A90E678E04440F0F2
:10058300751F0090E679E0AB1BAA1CA91DAE1E8E59
:10059300827583001209D3051E800F90E678E0442C
:1005A30040F0751F008003751F005391DFD007D003
:1005B30006D003D002D001D000D0D0D086D084D0D2
:0805C30085D082D083D0E03224
:020B9D00A907A6
:100B9F00AE2DAF2E8F828E83A3E064037017AD014D
:100BAF0019ED7001228F828E83E07C002FFDEC3EC9
:090BBF00FEAF0580DF7E007F001F
:010BC800220A
:100BEE00120AAFE51F24FA600E146006240770F394
:0C0BFE00D322E4F51FD322E4F51FD3221C
:100C0A00120AE3E51F24FA600E146006240770F343
:0C0C1A00D322E4F51FD322E4F51FD322FF
:1006B0008E188F1990E600E054187012E519240185
:1006C000FFE43518C313F518EF13F519801590E6FC
:1006D00000E05418FFBF100BE51925E0F519E518E7
:1006E00033F518E5191519AE18700215184E600586
:0606F000120BDD80EE227A
:100BDD007400F58690FDA57C05A3E582458370F92B
:010BED0022E5
:03004300020700B1
:03005300020700A1
:10070000020C2600020C6C00020C5600020C3E008B
:10071000020A4300020A06000208FF00020CD00091
:10072000020CD100020CD200020CD300020CD40047
:10073000020CD500020CD600020CD700020CD80027
:10074000020CD900020CD000020CDA00020CDB0013
:10075000020CDC00020CDD00020CDE00020CDF00EB
:10076000020CE000020CD000020CD000020CD00001
:10077000020CE100020CE200020CE300020CE400B7
:10078000020CE500020CE600020CE700020CE80097
:10079000020CE900020CEA00020CEB00020CEC0077
:1007A000020CED00020CEE00020CEF00020CF00057
:0807B000020CF100020CF20042
:0300000002086192
:0C086100787FE4F6D8FD7581300208A80D
:1009A600BB010CE58229F582E5833AF583E0225006
:1009B60006E92582F8E622BBFE06E92582F8E22250
:0D09C600E58229F582E5833AF583E493226A
:1009D300F8BB010DE58229F582E5833AF583E8F05A
:1009E300225006E92582C8F622BBFE05E92582C806
:0209F300F222EE
:1009F500EB9FF5F0EA9E42F0E99D42F0E89C45F058
:010A050022CE
:10086D00020319E493A3F8E493A34003F68001F285
:10087D0008DFF48029E493A3F85407240CC8C3338C
:10088D00C4540F4420C8834004F456800146F6DF5B
:10089D00E4800B0102040810204080900C82E47E5D
:1008AD00019360BCA3FF543F30E509541FFEE49350
:1008BD00A360010ECF54C025E060A840B8E493A317
:1008CD00FAE493A3F8E493A3C8C582C8CAC583CA42
:1008DD00F0A3C8C582C8CAC583CADFE9DEE780BEFA
:010C9500005E
:00000001FF
"""

def main():
    myVid = 0x4B4
    myPid = 0x8613
    
    context = usb1.USBContext()
    handle = None
    try:
        device = context.getByVendorIDAndProductID(myVid, myPid)
        if device is None:
            raise ValueError("Device with VID: 0x%x, PID: 0x%x not found" % (myVid,myPid))
        print 'ID %04x:%04x' % (device.getVendorID(), device.getProductID()), '->'.join(str(x) for x in ['Bus %03i' % (device.getBusNumber(), )] + device.getPortNumberList()), 'Device', device.getDeviceAddress()
        handle = device.open()

        # Hold the 8051 in reset by sending it a vendor command
        request_type, request, value, index = 0x40, 0xA0, 0xE600, 0x00
        handle.controlWrite(request_type, request, value, index, chr(1), timeout=5000)

        # Use the same vendor command to load in the hexadecimal data
        fp = StringIO(sampleHex1)
        hexFile = HexFile(fp)
        regions = hexFile.process()

        block = 128 # Maximum length for download    
        for r in regions:
            # r.data contains the data as a list of bytes.
            n = len(r.data)
            addr = r.address
            start = 0
            # Split into chunks of size at most "block" for sending to the FX2
            while n > block:
                request_type, request, value, index = 0x40, 0xA0, addr+start, 0x00
                handle.controlWrite(request_type, request, value, index, "".join(r.data[start:start+block]), timeout=5000)
                n -= block
                start += block
            if n>0:
                request_type, request, value, index = 0x40, 0xA0, addr+start, 0x00
                handle.controlWrite(request_type, request, value, index, "".join(r.data[start:start+n]), timeout=5000)

        # Release the 8051 reset, allowing it to renumerate
        request_type, request, value, index = 0x40, 0xA0, 0xE600, 0x00
        handle.controlWrite(request_type, request, value, index, chr(0), timeout=5000)        
    finally:
        if handle:
            handle.close()
        context.exit()
        
if __name__ == '__main__':
    main()
