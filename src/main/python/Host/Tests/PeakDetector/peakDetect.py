# This file was automatically generated by SWIG (http://www.swig.org).
# Version 2.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info
if version_info >= (2, 6, 0):

    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_peakDetect', [dirname(__file__)])
        except ImportError:
            import _peakDetect
            return _peakDetect
        if fp is not None:
            try:
                _mod = imp.load_module('_peakDetect', fp, pathname, description)
            finally:
                fp.close()
            return _mod

    _peakDetect = swig_import_helper()
    del swig_import_helper
else:
    import _peakDetect
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method: return method(self, value)
    if (not static):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr(self, class_type, name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method: return method(self)
    raise AttributeError(name)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except:
        strthis = ""
    return "<%s.%s; %s >" % (
        self.__class__.__module__,
        self.__class__.__name__,
        strthis,
    )


try:
    _object = object
    _newclass = 1
except AttributeError:

    class _object:
        pass

    _newclass = 0

FALSE = _peakDetect.FALSE
TRUE = _peakDetect.TRUE
interface_version = _peakDetect.interface_version
STATUS_OK = _peakDetect.STATUS_OK
PEAK_DETECT_MAX_HISTORY_LENGTH = _peakDetect.PEAK_DETECT_MAX_HISTORY_LENGTH
VALVE_CNTRL_DisabledState = _peakDetect.VALVE_CNTRL_DisabledState
VALVE_CNTRL_OutletControlState = _peakDetect.VALVE_CNTRL_OutletControlState
VALVE_CNTRL_InletControlState = _peakDetect.VALVE_CNTRL_InletControlState
VALVE_CNTRL_ManualControlState = _peakDetect.VALVE_CNTRL_ManualControlState
FLOW_CNTRL_DisabledState = _peakDetect.FLOW_CNTRL_DisabledState
FLOW_CNTRL_EnabledState = _peakDetect.FLOW_CNTRL_EnabledState
VALVE_CNTRL_THRESHOLD_DisabledState = _peakDetect.VALVE_CNTRL_THRESHOLD_DisabledState
VALVE_CNTRL_THRESHOLD_ArmedState = _peakDetect.VALVE_CNTRL_THRESHOLD_ArmedState
VALVE_CNTRL_THRESHOLD_TriggeredState = _peakDetect.VALVE_CNTRL_THRESHOLD_TriggeredState
PEAK_DETECT_CNTRL_IdleState = _peakDetect.PEAK_DETECT_CNTRL_IdleState
PEAK_DETECT_CNTRL_ArmedState = _peakDetect.PEAK_DETECT_CNTRL_ArmedState
PEAK_DETECT_CNTRL_TriggerPendingState = _peakDetect.PEAK_DETECT_CNTRL_TriggerPendingState
PEAK_DETECT_CNTRL_TriggeredState = _peakDetect.PEAK_DETECT_CNTRL_TriggeredState
PEAK_DETECT_CNTRL_InactiveState = _peakDetect.PEAK_DETECT_CNTRL_InactiveState
PEAK_DETECT_CNTRL_CancellingState = _peakDetect.PEAK_DETECT_CNTRL_CancellingState
PEAK_DETECT_CNTRL_PrimingState = _peakDetect.PEAK_DETECT_CNTRL_PrimingState
PEAK_DETECT_CNTRL_PurgingState = _peakDetect.PEAK_DETECT_CNTRL_PurgingState
PEAK_DETECT_CNTRL_InjectionPendingState = _peakDetect.PEAK_DETECT_CNTRL_InjectionPendingState


class PeakDetectCntrl(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, PeakDetectCntrl, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, PeakDetectCntrl, name)
    __repr__ = _swig_repr
    __swig_setmethods__["state"] = _peakDetect.PeakDetectCntrl_state_set
    __swig_getmethods__["state"] = _peakDetect.PeakDetectCntrl_state_get
    if _newclass: state = _swig_property(_peakDetect.PeakDetectCntrl_state_get, _peakDetect.PeakDetectCntrl_state_set)
    __swig_setmethods__["processedLoss"] = _peakDetect.PeakDetectCntrl_processedLoss_set
    __swig_getmethods__["processedLoss"] = _peakDetect.PeakDetectCntrl_processedLoss_get
    if _newclass:
        processedLoss = _swig_property(_peakDetect.PeakDetectCntrl_processedLoss_get, _peakDetect.PeakDetectCntrl_processedLoss_set)
    __swig_setmethods__["backgroundSamples"] = _peakDetect.PeakDetectCntrl_backgroundSamples_set
    __swig_getmethods__["backgroundSamples"] = _peakDetect.PeakDetectCntrl_backgroundSamples_get
    if _newclass:
        backgroundSamples = _swig_property(_peakDetect.PeakDetectCntrl_backgroundSamples_get,
                                           _peakDetect.PeakDetectCntrl_backgroundSamples_set)
    __swig_setmethods__["background"] = _peakDetect.PeakDetectCntrl_background_set
    __swig_getmethods__["background"] = _peakDetect.PeakDetectCntrl_background_get
    if _newclass:
        background = _swig_property(_peakDetect.PeakDetectCntrl_background_get, _peakDetect.PeakDetectCntrl_background_set)
    __swig_setmethods__["upperThreshold"] = _peakDetect.PeakDetectCntrl_upperThreshold_set
    __swig_getmethods__["upperThreshold"] = _peakDetect.PeakDetectCntrl_upperThreshold_get
    if _newclass:
        upperThreshold = _swig_property(_peakDetect.PeakDetectCntrl_upperThreshold_get,
                                        _peakDetect.PeakDetectCntrl_upperThreshold_set)
    __swig_setmethods__["lowerThreshold1"] = _peakDetect.PeakDetectCntrl_lowerThreshold1_set
    __swig_getmethods__["lowerThreshold1"] = _peakDetect.PeakDetectCntrl_lowerThreshold1_get
    if _newclass:
        lowerThreshold1 = _swig_property(_peakDetect.PeakDetectCntrl_lowerThreshold1_get,
                                         _peakDetect.PeakDetectCntrl_lowerThreshold1_set)
    __swig_setmethods__["lowerThreshold2"] = _peakDetect.PeakDetectCntrl_lowerThreshold2_set
    __swig_getmethods__["lowerThreshold2"] = _peakDetect.PeakDetectCntrl_lowerThreshold2_get
    if _newclass:
        lowerThreshold2 = _swig_property(_peakDetect.PeakDetectCntrl_lowerThreshold2_get,
                                         _peakDetect.PeakDetectCntrl_lowerThreshold2_set)
    __swig_setmethods__["postPeakSamples"] = _peakDetect.PeakDetectCntrl_postPeakSamples_set
    __swig_getmethods__["postPeakSamples"] = _peakDetect.PeakDetectCntrl_postPeakSamples_get
    if _newclass:
        postPeakSamples = _swig_property(_peakDetect.PeakDetectCntrl_postPeakSamples_get,
                                         _peakDetect.PeakDetectCntrl_postPeakSamples_set)
    __swig_setmethods__["activeSize"] = _peakDetect.PeakDetectCntrl_activeSize_set
    __swig_getmethods__["activeSize"] = _peakDetect.PeakDetectCntrl_activeSize_get
    if _newclass:
        activeSize = _swig_property(_peakDetect.PeakDetectCntrl_activeSize_get, _peakDetect.PeakDetectCntrl_activeSize_set)
    __swig_setmethods__["triggerCondition"] = _peakDetect.PeakDetectCntrl_triggerCondition_set
    __swig_getmethods__["triggerCondition"] = _peakDetect.PeakDetectCntrl_triggerCondition_get
    if _newclass:
        triggerCondition = _swig_property(_peakDetect.PeakDetectCntrl_triggerCondition_get,
                                          _peakDetect.PeakDetectCntrl_triggerCondition_set)
    __swig_setmethods__["triggerDelay"] = _peakDetect.PeakDetectCntrl_triggerDelay_set
    __swig_getmethods__["triggerDelay"] = _peakDetect.PeakDetectCntrl_triggerDelay_get
    if _newclass:
        triggerDelay = _swig_property(_peakDetect.PeakDetectCntrl_triggerDelay_get, _peakDetect.PeakDetectCntrl_triggerDelay_set)
    __swig_setmethods__["resetDelay"] = _peakDetect.PeakDetectCntrl_resetDelay_set
    __swig_getmethods__["resetDelay"] = _peakDetect.PeakDetectCntrl_resetDelay_get
    if _newclass:
        resetDelay = _swig_property(_peakDetect.PeakDetectCntrl_resetDelay_get, _peakDetect.PeakDetectCntrl_resetDelay_set)
    __swig_setmethods__["cancellingDelay"] = _peakDetect.PeakDetectCntrl_cancellingDelay_set
    __swig_getmethods__["cancellingDelay"] = _peakDetect.PeakDetectCntrl_cancellingDelay_get
    if _newclass:
        cancellingDelay = _swig_property(_peakDetect.PeakDetectCntrl_cancellingDelay_get,
                                         _peakDetect.PeakDetectCntrl_cancellingDelay_set)
    __swig_setmethods__["primingDuration"] = _peakDetect.PeakDetectCntrl_primingDuration_set
    __swig_getmethods__["primingDuration"] = _peakDetect.PeakDetectCntrl_primingDuration_get
    if _newclass:
        primingDuration = _swig_property(_peakDetect.PeakDetectCntrl_primingDuration_get,
                                         _peakDetect.PeakDetectCntrl_primingDuration_set)
    __swig_setmethods__["purgingDuration"] = _peakDetect.PeakDetectCntrl_purgingDuration_set
    __swig_getmethods__["purgingDuration"] = _peakDetect.PeakDetectCntrl_purgingDuration_get
    if _newclass:
        purgingDuration = _swig_property(_peakDetect.PeakDetectCntrl_purgingDuration_get,
                                         _peakDetect.PeakDetectCntrl_purgingDuration_set)
    __swig_setmethods__["samplesLeft"] = _peakDetect.PeakDetectCntrl_samplesLeft_set
    __swig_getmethods__["samplesLeft"] = _peakDetect.PeakDetectCntrl_samplesLeft_get
    if _newclass:
        samplesLeft = _swig_property(_peakDetect.PeakDetectCntrl_samplesLeft_get, _peakDetect.PeakDetectCntrl_samplesLeft_set)
    __swig_setmethods__["idleValveMaskAndValue"] = _peakDetect.PeakDetectCntrl_idleValveMaskAndValue_set
    __swig_getmethods__["idleValveMaskAndValue"] = _peakDetect.PeakDetectCntrl_idleValveMaskAndValue_get
    if _newclass:
        idleValveMaskAndValue = _swig_property(_peakDetect.PeakDetectCntrl_idleValveMaskAndValue_get,
                                               _peakDetect.PeakDetectCntrl_idleValveMaskAndValue_set)
    __swig_setmethods__["armedValveMaskAndValue"] = _peakDetect.PeakDetectCntrl_armedValveMaskAndValue_set
    __swig_getmethods__["armedValveMaskAndValue"] = _peakDetect.PeakDetectCntrl_armedValveMaskAndValue_get
    if _newclass:
        armedValveMaskAndValue = _swig_property(_peakDetect.PeakDetectCntrl_armedValveMaskAndValue_get,
                                                _peakDetect.PeakDetectCntrl_armedValveMaskAndValue_set)
    __swig_setmethods__["triggerPendingValveMaskAndValue"] = _peakDetect.PeakDetectCntrl_triggerPendingValveMaskAndValue_set
    __swig_getmethods__["triggerPendingValveMaskAndValue"] = _peakDetect.PeakDetectCntrl_triggerPendingValveMaskAndValue_get
    if _newclass:
        triggerPendingValveMaskAndValue = _swig_property(_peakDetect.PeakDetectCntrl_triggerPendingValveMaskAndValue_get,
                                                         _peakDetect.PeakDetectCntrl_triggerPendingValveMaskAndValue_set)
    __swig_setmethods__["triggeredValveMaskAndValue"] = _peakDetect.PeakDetectCntrl_triggeredValveMaskAndValue_set
    __swig_getmethods__["triggeredValveMaskAndValue"] = _peakDetect.PeakDetectCntrl_triggeredValveMaskAndValue_get
    if _newclass:
        triggeredValveMaskAndValue = _swig_property(_peakDetect.PeakDetectCntrl_triggeredValveMaskAndValue_get,
                                                    _peakDetect.PeakDetectCntrl_triggeredValveMaskAndValue_set)
    __swig_setmethods__["inactiveValveMaskAndValue"] = _peakDetect.PeakDetectCntrl_inactiveValveMaskAndValue_set
    __swig_getmethods__["inactiveValveMaskAndValue"] = _peakDetect.PeakDetectCntrl_inactiveValveMaskAndValue_get
    if _newclass:
        inactiveValveMaskAndValue = _swig_property(_peakDetect.PeakDetectCntrl_inactiveValveMaskAndValue_get,
                                                   _peakDetect.PeakDetectCntrl_inactiveValveMaskAndValue_set)
    __swig_setmethods__["cancellingValveMaskAndValue"] = _peakDetect.PeakDetectCntrl_cancellingValveMaskAndValue_set
    __swig_getmethods__["cancellingValveMaskAndValue"] = _peakDetect.PeakDetectCntrl_cancellingValveMaskAndValue_get
    if _newclass:
        cancellingValveMaskAndValue = _swig_property(_peakDetect.PeakDetectCntrl_cancellingValveMaskAndValue_get,
                                                     _peakDetect.PeakDetectCntrl_cancellingValveMaskAndValue_set)
    __swig_setmethods__["primingValveMaskAndValue"] = _peakDetect.PeakDetectCntrl_primingValveMaskAndValue_set
    __swig_getmethods__["primingValveMaskAndValue"] = _peakDetect.PeakDetectCntrl_primingValveMaskAndValue_get
    if _newclass:
        primingValveMaskAndValue = _swig_property(_peakDetect.PeakDetectCntrl_primingValveMaskAndValue_get,
                                                  _peakDetect.PeakDetectCntrl_primingValveMaskAndValue_set)
    __swig_setmethods__["purgingValveMaskAndValue"] = _peakDetect.PeakDetectCntrl_purgingValveMaskAndValue_set
    __swig_getmethods__["purgingValveMaskAndValue"] = _peakDetect.PeakDetectCntrl_purgingValveMaskAndValue_get
    if _newclass:
        purgingValveMaskAndValue = _swig_property(_peakDetect.PeakDetectCntrl_purgingValveMaskAndValue_get,
                                                  _peakDetect.PeakDetectCntrl_purgingValveMaskAndValue_set)
    __swig_setmethods__["injectionPendingValveMaskAndValue"] = _peakDetect.PeakDetectCntrl_injectionPendingValveMaskAndValue_set
    __swig_getmethods__["injectionPendingValveMaskAndValue"] = _peakDetect.PeakDetectCntrl_injectionPendingValveMaskAndValue_get
    if _newclass:
        injectionPendingValveMaskAndValue = _swig_property(_peakDetect.PeakDetectCntrl_injectionPendingValveMaskAndValue_get,
                                                           _peakDetect.PeakDetectCntrl_injectionPendingValveMaskAndValue_set)
    __swig_setmethods__["solenoidValves"] = _peakDetect.PeakDetectCntrl_solenoidValves_set
    __swig_getmethods__["solenoidValves"] = _peakDetect.PeakDetectCntrl_solenoidValves_get
    if _newclass:
        solenoidValves = _swig_property(_peakDetect.PeakDetectCntrl_solenoidValves_get,
                                        _peakDetect.PeakDetectCntrl_solenoidValves_set)
    __swig_setmethods__["flow0Setpoint"] = _peakDetect.PeakDetectCntrl_flow0Setpoint_set
    __swig_getmethods__["flow0Setpoint"] = _peakDetect.PeakDetectCntrl_flow0Setpoint_get
    if _newclass:
        flow0Setpoint = _swig_property(_peakDetect.PeakDetectCntrl_flow0Setpoint_get, _peakDetect.PeakDetectCntrl_flow0Setpoint_set)
    __swig_setmethods__["flow1Setpoint"] = _peakDetect.PeakDetectCntrl_flow1Setpoint_set
    __swig_getmethods__["flow1Setpoint"] = _peakDetect.PeakDetectCntrl_flow1Setpoint_get
    if _newclass:
        flow1Setpoint = _swig_property(_peakDetect.PeakDetectCntrl_flow1Setpoint_get, _peakDetect.PeakDetectCntrl_flow1Setpoint_set)
    __swig_setmethods__["flow2Setpoint"] = _peakDetect.PeakDetectCntrl_flow2Setpoint_set
    __swig_getmethods__["flow2Setpoint"] = _peakDetect.PeakDetectCntrl_flow2Setpoint_get
    if _newclass:
        flow2Setpoint = _swig_property(_peakDetect.PeakDetectCntrl_flow2Setpoint_get, _peakDetect.PeakDetectCntrl_flow2Setpoint_set)
    __swig_setmethods__["flow3Setpoint"] = _peakDetect.PeakDetectCntrl_flow3Setpoint_set
    __swig_getmethods__["flow3Setpoint"] = _peakDetect.PeakDetectCntrl_flow3Setpoint_get
    if _newclass:
        flow3Setpoint = _swig_property(_peakDetect.PeakDetectCntrl_flow3Setpoint_get, _peakDetect.PeakDetectCntrl_flow3Setpoint_set)
    __swig_setmethods__["flowCntrlSetpoint"] = _peakDetect.PeakDetectCntrl_flowCntrlSetpoint_set
    __swig_getmethods__["flowCntrlSetpoint"] = _peakDetect.PeakDetectCntrl_flowCntrlSetpoint_get
    if _newclass:
        flowCntrlSetpoint = _swig_property(_peakDetect.PeakDetectCntrl_flowCntrlSetpoint_get,
                                           _peakDetect.PeakDetectCntrl_flowCntrlSetpoint_set)
    __swig_setmethods__["cond0"] = _peakDetect.PeakDetectCntrl_cond0_set
    __swig_getmethods__["cond0"] = _peakDetect.PeakDetectCntrl_cond0_get
    if _newclass: cond0 = _swig_property(_peakDetect.PeakDetectCntrl_cond0_get, _peakDetect.PeakDetectCntrl_cond0_set)
    __swig_setmethods__["cond1"] = _peakDetect.PeakDetectCntrl_cond1_set
    __swig_getmethods__["cond1"] = _peakDetect.PeakDetectCntrl_cond1_get
    if _newclass: cond1 = _swig_property(_peakDetect.PeakDetectCntrl_cond1_get, _peakDetect.PeakDetectCntrl_cond1_set)
    __swig_setmethods__["cond2"] = _peakDetect.PeakDetectCntrl_cond2_set
    __swig_getmethods__["cond2"] = _peakDetect.PeakDetectCntrl_cond2_get
    if _newclass: cond2 = _swig_property(_peakDetect.PeakDetectCntrl_cond2_get, _peakDetect.PeakDetectCntrl_cond2_set)
    __swig_setmethods__["cond3"] = _peakDetect.PeakDetectCntrl_cond3_set
    __swig_getmethods__["cond3"] = _peakDetect.PeakDetectCntrl_cond3_get
    if _newclass: cond3 = _swig_property(_peakDetect.PeakDetectCntrl_cond3_get, _peakDetect.PeakDetectCntrl_cond3_set)
    __swig_setmethods__["historyTail"] = _peakDetect.PeakDetectCntrl_historyTail_set
    __swig_getmethods__["historyTail"] = _peakDetect.PeakDetectCntrl_historyTail_get
    if _newclass:
        historyTail = _swig_property(_peakDetect.PeakDetectCntrl_historyTail_get, _peakDetect.PeakDetectCntrl_historyTail_set)
    __swig_setmethods__["activeLength"] = _peakDetect.PeakDetectCntrl_activeLength_set
    __swig_getmethods__["activeLength"] = _peakDetect.PeakDetectCntrl_activeLength_get
    if _newclass:
        activeLength = _swig_property(_peakDetect.PeakDetectCntrl_activeLength_get, _peakDetect.PeakDetectCntrl_activeLength_set)
    __swig_setmethods__["triggerWait"] = _peakDetect.PeakDetectCntrl_triggerWait_set
    __swig_getmethods__["triggerWait"] = _peakDetect.PeakDetectCntrl_triggerWait_get
    if _newclass:
        triggerWait = _swig_property(_peakDetect.PeakDetectCntrl_triggerWait_get, _peakDetect.PeakDetectCntrl_triggerWait_set)
    __swig_setmethods__["lastState"] = _peakDetect.PeakDetectCntrl_lastState_set
    __swig_getmethods__["lastState"] = _peakDetect.PeakDetectCntrl_lastState_get
    if _newclass: lastState = _swig_property(_peakDetect.PeakDetectCntrl_lastState_get, _peakDetect.PeakDetectCntrl_lastState_set)
    __swig_setmethods__["historyBuffer"] = _peakDetect.PeakDetectCntrl_historyBuffer_set
    __swig_getmethods__["historyBuffer"] = _peakDetect.PeakDetectCntrl_historyBuffer_get
    if _newclass:
        historyBuffer = _swig_property(_peakDetect.PeakDetectCntrl_historyBuffer_get, _peakDetect.PeakDetectCntrl_historyBuffer_set)

    def __init__(self):
        this = _peakDetect.new_PeakDetectCntrl()
        try:
            self.this.append(this)
        except:
            self.this = this

    __swig_destroy__ = _peakDetect.delete_PeakDetectCntrl
    __del__ = lambda self: None


PeakDetectCntrl_swigregister = _peakDetect.PeakDetectCntrl_swigregister
PeakDetectCntrl_swigregister(PeakDetectCntrl)


def peakDetectCntrlInit():
    return _peakDetect.peakDetectCntrlInit()


peakDetectCntrlInit = _peakDetect.peakDetectCntrlInit


def peakDetectCntrlStep():
    return _peakDetect.peakDetectCntrlStep()


peakDetectCntrlStep = _peakDetect.peakDetectCntrlStep


def processHistoryBuffer(*args):
    return _peakDetect.processHistoryBuffer(*args)


processHistoryBuffer = _peakDetect.processHistoryBuffer


def modifyValves(*args):
    return _peakDetect.modifyValves(*args)


modifyValves = _peakDetect.modifyValves


def setFlow(*args):
    return _peakDetect.setFlow(*args)


setFlow = _peakDetect.setFlow
# This file is compatible with both classic and new-style classes.

cvar = _peakDetect.cvar
