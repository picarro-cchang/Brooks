#!/usr/bin/env python
# -*- coding: iso-8859-15 -*-
# generated by wxGlade HG on Fri Mar 04 00:25:55 2011

import wx

# begin wxGlade: extracode
from Host.Common.GraphPanel import GraphPanel

from Host.Common.GraphPanel import GraphPanel

from Host.Utilities.SuperBuildStation.ModeAnalyzer import ModePanel
from Host.Utilities.SuperBuildStation.ModeAnalyzer import ScopePanel

from Host.Common.GraphPanel import GraphPanel

from Host.Common.GraphPanel import GraphPanel

from Host.Utilities.SuperBuildStation.ModeViewer import ModePanel
# end wxGlade



class BuildStationGUI(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: BuildStationGUI.__init__
        kwds["style"] = wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.panel_4 = wx.Panel(self, -1)
        self.panel_control = wx.Panel(self.panel_4, -1)
        self.label_serial_number = wx.StaticText(self.panel_control, -1, "Serial number")
        self.text_ctrl_serial_number = wx.TextCtrl(self.panel_control, -1, "123456", style=wx.TE_PROCESS_ENTER)
        self.label_laser = wx.StaticText(self.panel_control, -1, "Laser")
        self.combo_box_laser = wx.ComboBox(self.panel_control, -1, choices=[], style=wx.CB_DROPDOWN|wx.CB_READONLY)
        self.label_action = wx.StaticText(self.panel_control, -1, "Action")
        self.combo_box_action = wx.ComboBox(self.panel_control, -1, choices=[], style=wx.CB_DROPDOWN|wx.CB_READONLY)
        self.panel_ringdown_inputs = wx.Panel(self.panel_4, -1)
        self.label_graph_points = wx.StaticText(self.panel_ringdown_inputs, -1, "Graph Points")
        self.text_ctrl_graph_points = wx.TextCtrl(self.panel_ringdown_inputs, -1, "2000", style=wx.TE_PROCESS_ENTER)
        self.label_rd_threshold = wx.StaticText(self.panel_ringdown_inputs, -1, "RD Threshold")
        self.text_ctrl_rd_threshold = wx.TextCtrl(self.panel_ringdown_inputs, -1, "16000", style=wx.TE_PROCESS_ENTER)
        self.label_dither_enable = wx.StaticText(self.panel_ringdown_inputs, -1, "Dither Enable")
        self.checkbox_dither_enable = wx.CheckBox(self.panel_ringdown_inputs, -1, "")
        self.panel_ripple_inputs = wx.Panel(self.panel_4, -1)
        self.label_rejection_window = wx.StaticText(self.panel_ripple_inputs, -1, "Rejection Window")
        self.text_ctrl_rejection_window = wx.TextCtrl(self.panel_ripple_inputs, -1, "0.03", style=wx.TE_PROCESS_ENTER)
        self.label_rejection_scale = wx.StaticText(self.panel_ripple_inputs, -1, "Rejection scale")
        self.text_ctrl_rejection_scale = wx.TextCtrl(self.panel_ripple_inputs, -1, "8", style=wx.TE_PROCESS_ENTER)
        self.panel_modeview_inputs = wx.Panel(self.panel_4, -1)
        self.label_laser_temperature = wx.StaticText(self.panel_modeview_inputs, -1, "Laser Temperature")
        self.text_ctrl_laser_temperature = wx.TextCtrl(self.panel_modeview_inputs, -1, "25.0", style=wx.TE_PROCESS_ENTER)
        self.label_laser_current = wx.StaticText(self.panel_modeview_inputs, -1, "Laser Current")
        self.text_ctrl_laser_current = wx.TextCtrl(self.panel_modeview_inputs, -1, "36000", style=wx.TE_PROCESS_ENTER)
        self.label_num_average = wx.StaticText(self.panel_modeview_inputs, -1, "Scans to Average")
        self.text_ctrl_num_average = wx.TextCtrl(self.panel_modeview_inputs, -1, "64", style=wx.TE_PROCESS_ENTER)
        self.panel_ringdown_outputs = wx.Panel(self.panel_4, -1)
        self.label_rd_time = wx.StaticText(self.panel_ringdown_outputs, -1, "RD Time (us)")
        self.text_ctrl_rd_time = wx.TextCtrl(self.panel_ringdown_outputs, -1, "30.0", style=wx.TE_READONLY)
        self.label_rd_rate = wx.StaticText(self.panel_ringdown_outputs, -1, "Rate (rd/s)")
        self.text_ctrl_rd_rate = wx.TextCtrl(self.panel_ringdown_outputs, -1, "100.0", style=wx.TE_READONLY)
        self.label_s2s = wx.StaticText(self.panel_ringdown_outputs, -1, "Shot to shot (%)")
        self.text_ctrl_s2s = wx.TextCtrl(self.panel_ringdown_outputs, -1, "0.03", style=wx.TE_READONLY)
        self.label_cavity_pressure = wx.StaticText(self.panel_ringdown_outputs, -1, "Cav pressure (torr)")
        self.text_ctrl_cavity_pressure = wx.TextCtrl(self.panel_ringdown_outputs, -1, "140.0", style=wx.TE_READONLY)
        self.panel_buttons = wx.Panel(self.panel_4, -1)
        self.button_pause = wx.Button(self.panel_buttons, -1, "&Pause")
        self.button_save = wx.Button(self.panel_buttons, wx.ID_SAVE, "")
        self.button_clear = wx.Button(self.panel_buttons, wx.ID_CLEAR, "")
        self.button_exit = wx.Button(self.panel_buttons, wx.ID_EXIT, "")
        self.notebook_graphs = wx.Notebook(self, -1, style=0)
        self.notebook_graphs_ringdowns = wx.Panel(self.notebook_graphs, -1)
        self.graph_panel_1 = GraphPanel(self.notebook_graphs_ringdowns, -1)
        self.panel_2 = wx.Panel(self.notebook_graphs_ringdowns, -1)
        self.label_autoscale1 = wx.StaticText(self.panel_2, -1, "Autoscale")
        self.checkbox_autoscale_1 = wx.CheckBox(self.panel_2, -1, "")
        self.label_min_1 = wx.StaticText(self.panel_2, -1, "Min")
        self.text_ctrl_min_1 = wx.TextCtrl(self.panel_2, -1, "0", style=wx.TE_PROCESS_ENTER)
        self.label_max_1 = wx.StaticText(self.panel_2, -1, "Max")
        self.text_ctrl_max_1 = wx.TextCtrl(self.panel_2, -1, "50", style=wx.TE_PROCESS_ENTER)
        self.graph_panel_2 = GraphPanel(self.notebook_graphs_ringdowns, -1)
        self.panel_3 = wx.Panel(self.notebook_graphs_ringdowns, -1)
        self.label_autoscale2 = wx.StaticText(self.panel_3, -1, "Autoscale")
        self.checkbox_autoscale_2 = wx.CheckBox(self.panel_3, -1, "")
        self.label_min_2 = wx.StaticText(self.panel_3, -1, "Min")
        self.text_ctrl_min_2 = wx.TextCtrl(self.panel_3, -1, "0", style=wx.TE_PROCESS_ENTER)
        self.label_max_2 = wx.StaticText(self.panel_3, -1, "Max")
        self.text_ctrl_max_2 = wx.TextCtrl(self.panel_3, -1, "50", style=wx.TE_PROCESS_ENTER)
        self.notebook_graphs_mode_scan = wx.Panel(self.notebook_graphs, -1)
        self.scope_panel = ScopePanel(self.notebook_graphs_mode_scan, -1)
        self.notebook_graphs_mode_amplitudes = wx.Panel(self.notebook_graphs, -1)
        self.mode_panel = ModePanel(self.notebook_graphs_mode_amplitudes, -1)
        self.notebook_graphs_ripple_analysis = wx.Panel(self.notebook_graphs, -1)
        self.graph_panel_spectrum = GraphPanel(self.notebook_graphs_ripple_analysis, -1)
        self.graph_panel_ripple = GraphPanel(self.notebook_graphs_ripple_analysis, -1)

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_TEXT_ENTER, self.onSerialNumberEnter, self.text_ctrl_serial_number)
        self.Bind(wx.EVT_COMBOBOX, self.onLaserSelect, self.combo_box_laser)
        self.Bind(wx.EVT_COMBOBOX, self.onActionSelect, self.combo_box_action)
        self.Bind(wx.EVT_TEXT_ENTER, self.onGraphPointsEnter, self.text_ctrl_graph_points)
        self.Bind(wx.EVT_TEXT_ENTER, self.onRdThresholdEnter, self.text_ctrl_rd_threshold)
        self.Bind(wx.EVT_CHECKBOX, self.onDitherEnable, self.checkbox_dither_enable)
        self.Bind(wx.EVT_TEXT_ENTER, self.onRejectionWindowEnter, self.text_ctrl_rejection_window)
        self.Bind(wx.EVT_TEXT_ENTER, self.onRejectionScaleEnter, self.text_ctrl_rejection_scale)
        self.Bind(wx.EVT_TEXT_ENTER, self.onLaserTemperatureEnter, self.text_ctrl_laser_temperature)
        self.Bind(wx.EVT_TEXT_ENTER, self.onLaserCurrentEnter, self.text_ctrl_laser_current)
        self.Bind(wx.EVT_TEXT_ENTER, self.onNumAverageEnter, self.text_ctrl_num_average)
        self.Bind(wx.EVT_BUTTON, self.onPause, self.button_pause)
        self.Bind(wx.EVT_BUTTON, self.onSave, self.button_save)
        self.Bind(wx.EVT_BUTTON, self.onClear, self.button_clear)
        self.Bind(wx.EVT_BUTTON, self.onQuit, self.button_exit)
        self.Bind(wx.EVT_CHECKBOX, self.onAutoscale1, self.checkbox_autoscale_1)
        self.Bind(wx.EVT_TEXT_ENTER, self.onMin1Enter, self.text_ctrl_min_1)
        self.Bind(wx.EVT_TEXT_ENTER, self.onMax1Enter, self.text_ctrl_max_1)
        self.Bind(wx.EVT_CHECKBOX, self.onAutoscale2, self.checkbox_autoscale_2)
        self.Bind(wx.EVT_TEXT_ENTER, self.onMin2Enter, self.text_ctrl_min_2)
        self.Bind(wx.EVT_TEXT_ENTER, self.onMax2Enter, self.text_ctrl_max_2)
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: BuildStationGUI.__set_properties
        self.SetTitle("Build station")
        self.SetSize((1280, 984))
        self.checkbox_dither_enable.SetValue(1)
        self.label_rd_time.SetFont(wx.Font(12, wx.SWISS, wx.NORMAL, wx.BOLD, 0, ""))
        self.text_ctrl_rd_time.SetFont(wx.Font(12, wx.SWISS, wx.NORMAL, wx.BOLD, 0, ""))
        self.label_rd_rate.SetFont(wx.Font(12, wx.SWISS, wx.NORMAL, wx.BOLD, 0, ""))
        self.text_ctrl_rd_rate.SetFont(wx.Font(12, wx.SWISS, wx.NORMAL, wx.BOLD, 0, ""))
        self.label_s2s.SetFont(wx.Font(12, wx.SWISS, wx.NORMAL, wx.BOLD, 0, ""))
        self.text_ctrl_s2s.SetFont(wx.Font(12, wx.SWISS, wx.NORMAL, wx.BOLD, 0, ""))
        self.label_cavity_pressure.SetFont(wx.Font(12, wx.SWISS, wx.NORMAL, wx.BOLD, 0, ""))
        self.text_ctrl_cavity_pressure.SetFont(wx.Font(12, wx.SWISS, wx.NORMAL, wx.BOLD, 0, ""))
        self.checkbox_autoscale_1.SetValue(1)
        self.panel_2.SetBackgroundColour(wx.SystemSettings_GetColour(wx.SYS_COLOUR_3DFACE))
        self.checkbox_autoscale_2.SetValue(1)
        self.panel_3.SetBackgroundColour(wx.SystemSettings_GetColour(wx.SYS_COLOUR_3DFACE))
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: BuildStationGUI.__do_layout
        sizer_1 = wx.BoxSizer(wx.VERTICAL)
        sizer_2 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_for_ripple_graphs = wx.BoxSizer(wx.VERTICAL)
        sizer_ripple = wx.BoxSizer(wx.HORIZONTAL)
        sizer_spectrum = wx.BoxSizer(wx.HORIZONTAL)
        sizer_4 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_3 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_for_graphs = wx.BoxSizer(wx.VERTICAL)
        sizer_graph2 = wx.BoxSizer(wx.HORIZONTAL)
        grid_sizer_graph_panel_2 = wx.FlexGridSizer(0, 2, 10, 10)
        sizer_graph1 = wx.BoxSizer(wx.HORIZONTAL)
        grid_sizer_graph_panel_1 = wx.FlexGridSizer(3, 2, 10, 10)
        sizer_5 = wx.BoxSizer(wx.VERTICAL)
        sizer_8 = wx.BoxSizer(wx.VERTICAL)
        sizer_7 = wx.BoxSizer(wx.VERTICAL)
        grid_sizer_1_copy = wx.FlexGridSizer(6, 2, 10, 10)
        sizer_6_copy_1 = wx.BoxSizer(wx.VERTICAL)
        sizer_8_copy_copy = wx.BoxSizer(wx.HORIZONTAL)
        grid_sizer_1_copy_1 = wx.FlexGridSizer(6, 2, 10, 10)
        sizer_6_copy_2 = wx.BoxSizer(wx.VERTICAL)
        sizer_8_copy_copy_1 = wx.BoxSizer(wx.HORIZONTAL)
        grid_sizer_1_copy_2 = wx.FlexGridSizer(6, 2, 10, 10)
        sizer_6 = wx.BoxSizer(wx.VERTICAL)
        sizer_8_copy = wx.BoxSizer(wx.HORIZONTAL)
        grid_sizer_1 = wx.FlexGridSizer(6, 2, 10, 10)
        sizer_6_copy = wx.BoxSizer(wx.VERTICAL)
        grid_sizer_control = wx.FlexGridSizer(6, 2, 10, 10)
        grid_sizer_control.Add(self.label_serial_number, 0, wx.LEFT|wx.RIGHT, 10)
        grid_sizer_control.Add(self.text_ctrl_serial_number, 0, wx.RIGHT|wx.EXPAND, 40)
        grid_sizer_control.Add(self.label_laser, 0, wx.LEFT|wx.RIGHT, 10)
        grid_sizer_control.Add(self.combo_box_laser, 0, wx.RIGHT, 10)
        grid_sizer_control.Add(self.label_action, 0, wx.LEFT|wx.RIGHT, 10)
        grid_sizer_control.Add(self.combo_box_action, 0, wx.RIGHT, 10)
        grid_sizer_control.AddGrowableCol(0)
        grid_sizer_control.AddGrowableCol(1)
        sizer_6_copy.Add(grid_sizer_control, 0, wx.TOP|wx.BOTTOM|wx.EXPAND, 20)
        self.panel_control.SetSizer(sizer_6_copy)
        sizer_5.Add(self.panel_control, 0, wx.EXPAND, 0)
        grid_sizer_1.Add(self.label_graph_points, 0, wx.LEFT|wx.RIGHT, 10)
        grid_sizer_1.Add(self.text_ctrl_graph_points, 0, wx.RIGHT|wx.EXPAND, 40)
        grid_sizer_1.Add(self.label_rd_threshold, 0, wx.LEFT|wx.RIGHT, 10)
        grid_sizer_1.Add(self.text_ctrl_rd_threshold, 0, wx.RIGHT|wx.EXPAND, 40)
        grid_sizer_1.Add(self.label_dither_enable, 0, wx.LEFT|wx.RIGHT, 10)
        grid_sizer_1.Add(self.checkbox_dither_enable, 0, 0, 0)
        grid_sizer_1.AddGrowableCol(0)
        grid_sizer_1.AddGrowableCol(1)
        sizer_6.Add(grid_sizer_1, 0, wx.TOP|wx.EXPAND, 20)
        sizer_6.Add(sizer_8_copy, 0, wx.EXPAND, 0)
        self.panel_ringdown_inputs.SetSizer(sizer_6)
        sizer_5.Add(self.panel_ringdown_inputs, 1, wx.EXPAND, 0)
        grid_sizer_1_copy_2.Add(self.label_rejection_window, 0, wx.LEFT|wx.RIGHT, 10)
        grid_sizer_1_copy_2.Add(self.text_ctrl_rejection_window, 0, wx.RIGHT|wx.EXPAND, 40)
        grid_sizer_1_copy_2.Add(self.label_rejection_scale, 0, wx.LEFT|wx.RIGHT, 10)
        grid_sizer_1_copy_2.Add(self.text_ctrl_rejection_scale, 0, wx.RIGHT|wx.EXPAND, 40)
        grid_sizer_1_copy_2.AddGrowableCol(0)
        grid_sizer_1_copy_2.AddGrowableCol(1)
        sizer_6_copy_2.Add(grid_sizer_1_copy_2, 0, wx.TOP|wx.EXPAND, 20)
        sizer_6_copy_2.Add(sizer_8_copy_copy_1, 0, wx.EXPAND, 0)
        self.panel_ripple_inputs.SetSizer(sizer_6_copy_2)
        sizer_5.Add(self.panel_ripple_inputs, 1, wx.EXPAND, 0)
        grid_sizer_1_copy_1.Add(self.label_laser_temperature, 0, wx.LEFT|wx.RIGHT, 10)
        grid_sizer_1_copy_1.Add(self.text_ctrl_laser_temperature, 0, wx.RIGHT|wx.EXPAND, 40)
        grid_sizer_1_copy_1.Add(self.label_laser_current, 0, wx.LEFT|wx.RIGHT, 10)
        grid_sizer_1_copy_1.Add(self.text_ctrl_laser_current, 0, wx.RIGHT|wx.EXPAND, 40)
        grid_sizer_1_copy_1.Add(self.label_num_average, 0, wx.LEFT|wx.RIGHT, 10)
        grid_sizer_1_copy_1.Add(self.text_ctrl_num_average, 0, wx.RIGHT|wx.EXPAND, 40)
        grid_sizer_1_copy_1.AddGrowableCol(0)
        grid_sizer_1_copy_1.AddGrowableCol(1)
        sizer_6_copy_1.Add(grid_sizer_1_copy_1, 0, wx.TOP|wx.EXPAND, 20)
        sizer_6_copy_1.Add(sizer_8_copy_copy, 0, wx.EXPAND, 0)
        self.panel_modeview_inputs.SetSizer(sizer_6_copy_1)
        sizer_5.Add(self.panel_modeview_inputs, 1, wx.EXPAND, 0)
        grid_sizer_1_copy.Add(self.label_rd_time, 0, wx.LEFT|wx.RIGHT, 10)
        grid_sizer_1_copy.Add(self.text_ctrl_rd_time, 0, wx.RIGHT|wx.EXPAND, 10)
        grid_sizer_1_copy.Add(self.label_rd_rate, 0, wx.LEFT|wx.RIGHT, 10)
        grid_sizer_1_copy.Add(self.text_ctrl_rd_rate, 0, wx.RIGHT|wx.EXPAND, 10)
        grid_sizer_1_copy.Add(self.label_s2s, 0, wx.LEFT|wx.RIGHT, 10)
        grid_sizer_1_copy.Add(self.text_ctrl_s2s, 0, wx.RIGHT|wx.EXPAND, 10)
        grid_sizer_1_copy.Add(self.label_cavity_pressure, 0, wx.LEFT|wx.RIGHT, 10)
        grid_sizer_1_copy.Add(self.text_ctrl_cavity_pressure, 0, wx.RIGHT|wx.EXPAND, 10)
        grid_sizer_1_copy.AddGrowableCol(0)
        grid_sizer_1_copy.AddGrowableCol(1)
        sizer_7.Add(grid_sizer_1_copy, 1, wx.EXPAND, 0)
        self.panel_ringdown_outputs.SetSizer(sizer_7)
        sizer_5.Add(self.panel_ringdown_outputs, 1, wx.EXPAND, 0)
        sizer_8.Add(self.button_pause, 0, wx.ALL|wx.EXPAND, 10)
        sizer_8.Add(self.button_save, 0, wx.ALL|wx.EXPAND, 10)
        sizer_8.Add(self.button_clear, 0, wx.ALL|wx.EXPAND, 10)
        sizer_8.Add(self.button_exit, 0, wx.ALL|wx.EXPAND, 10)
        self.panel_buttons.SetSizer(sizer_8)
        sizer_5.Add(self.panel_buttons, 0, wx.EXPAND, 0)
        self.panel_4.SetSizer(sizer_5)
        sizer_2.Add(self.panel_4, 0, wx.EXPAND, 10)
        sizer_graph1.Add(self.graph_panel_1, 1, wx.EXPAND, 0)
        grid_sizer_graph_panel_1.Add(self.label_autoscale1, 0, wx.LEFT|wx.RIGHT|wx.TOP, 10)
        grid_sizer_graph_panel_1.Add(self.checkbox_autoscale_1, 0, wx.TOP, 10)
        grid_sizer_graph_panel_1.Add(self.label_min_1, 0, wx.LEFT|wx.RIGHT, 10)
        grid_sizer_graph_panel_1.Add(self.text_ctrl_min_1, 0, wx.RIGHT|wx.EXPAND, 10)
        grid_sizer_graph_panel_1.Add(self.label_max_1, 0, wx.LEFT|wx.RIGHT, 10)
        grid_sizer_graph_panel_1.Add(self.text_ctrl_max_1, 0, wx.RIGHT|wx.EXPAND, 10)
        self.panel_2.SetSizer(grid_sizer_graph_panel_1)
        sizer_graph1.Add(self.panel_2, 0, wx.EXPAND, 0)
        sizer_for_graphs.Add(sizer_graph1, 1, wx.EXPAND, 0)
        sizer_graph2.Add(self.graph_panel_2, 1, wx.EXPAND, 0)
        grid_sizer_graph_panel_2.Add(self.label_autoscale2, 0, wx.LEFT|wx.RIGHT|wx.TOP, 10)
        grid_sizer_graph_panel_2.Add(self.checkbox_autoscale_2, 0, wx.TOP, 10)
        grid_sizer_graph_panel_2.Add(self.label_min_2, 0, wx.LEFT|wx.RIGHT, 10)
        grid_sizer_graph_panel_2.Add(self.text_ctrl_min_2, 0, wx.RIGHT|wx.EXPAND, 10)
        grid_sizer_graph_panel_2.Add(self.label_max_2, 0, wx.LEFT|wx.RIGHT, 10)
        grid_sizer_graph_panel_2.Add(self.text_ctrl_max_2, 0, wx.RIGHT|wx.EXPAND, 10)
        self.panel_3.SetSizer(grid_sizer_graph_panel_2)
        sizer_graph2.Add(self.panel_3, 0, wx.EXPAND, 0)
        sizer_for_graphs.Add(sizer_graph2, 1, wx.EXPAND, 0)
        self.notebook_graphs_ringdowns.SetSizer(sizer_for_graphs)
        sizer_3.Add(self.scope_panel, 1, wx.EXPAND, 0)
        self.notebook_graphs_mode_scan.SetSizer(sizer_3)
        sizer_4.Add(self.mode_panel, 1, wx.EXPAND, 0)
        self.notebook_graphs_mode_amplitudes.SetSizer(sizer_4)
        sizer_spectrum.Add(self.graph_panel_spectrum, 1, wx.EXPAND, 0)
        sizer_for_ripple_graphs.Add(sizer_spectrum, 1, wx.EXPAND, 0)
        sizer_ripple.Add(self.graph_panel_ripple, 1, wx.EXPAND, 0)
        sizer_for_ripple_graphs.Add(sizer_ripple, 1, wx.EXPAND, 0)
        self.notebook_graphs_ripple_analysis.SetSizer(sizer_for_ripple_graphs)
        self.notebook_graphs.AddPage(self.notebook_graphs_ringdowns, "Ringdowns")
        self.notebook_graphs.AddPage(self.notebook_graphs_mode_scan, "Mode Scan")
        self.notebook_graphs.AddPage(self.notebook_graphs_mode_amplitudes, "Mode Amplitudes")
        self.notebook_graphs.AddPage(self.notebook_graphs_ripple_analysis, "Ripple Analysis")
        sizer_2.Add(self.notebook_graphs, 1, wx.EXPAND, 0)
        sizer_1.Add(sizer_2, 1, wx.EXPAND, 0)
        self.SetSizer(sizer_1)
        self.Layout()
        # end wxGlade

    def onSerialNumberEnter(self, event): # wxGlade: BuildStationGUI.<event_handler>
        print "Event handler `onSerialNumberEnter' not implemented!"
        event.Skip()

    def onLaserSelect(self, event): # wxGlade: BuildStationGUI.<event_handler>
        print "Event handler `onLaserSelect' not implemented!"
        event.Skip()

    def onActionSelect(self, event): # wxGlade: BuildStationGUI.<event_handler>
        print "Event handler `onActionSelect' not implemented!"
        event.Skip()

    def onGraphPointsEnter(self, event): # wxGlade: BuildStationGUI.<event_handler>
        print "Event handler `onGraphPointsEnter' not implemented!"
        event.Skip()

    def onRdThresholdEnter(self, event): # wxGlade: BuildStationGUI.<event_handler>
        print "Event handler `onRdThresholdEnter' not implemented!"
        event.Skip()

    def onDitherEnable(self, event): # wxGlade: BuildStationGUI.<event_handler>
        print "Event handler `onDitherEnable' not implemented!"
        event.Skip()

    def onRejectionWindowEnter(self, event): # wxGlade: BuildStationGUI.<event_handler>
        print "Event handler `onRejectionWindowEnter' not implemented!"
        event.Skip()

    def onRejectionScaleEnter(self, event): # wxGlade: BuildStationGUI.<event_handler>
        print "Event handler `onRejectionScaleEnter' not implemented!"
        event.Skip()

    def onLaserTemperatureEnter(self, event): # wxGlade: BuildStationGUI.<event_handler>
        print "Event handler `onLaserTemperatureEnter' not implemented!"
        event.Skip()

    def onLaserCurrentEnter(self, event): # wxGlade: BuildStationGUI.<event_handler>
        print "Event handler `onLaserCurrentEnter' not implemented!"
        event.Skip()

    def onNumAverageEnter(self, event): # wxGlade: BuildStationGUI.<event_handler>
        print "Event handler `onNumAverageEnter' not implemented!"
        event.Skip()

    def onPause(self, event): # wxGlade: BuildStationGUI.<event_handler>
        print "Event handler `onPause' not implemented!"
        event.Skip()

    def onSave(self, event): # wxGlade: BuildStationGUI.<event_handler>
        print "Event handler `onSave' not implemented!"
        event.Skip()

    def onClear(self, event): # wxGlade: BuildStationGUI.<event_handler>
        print "Event handler `onClear' not implemented!"
        event.Skip()

    def onQuit(self, event): # wxGlade: BuildStationGUI.<event_handler>
        print "Event handler `onQuit' not implemented!"
        event.Skip()

    def onAutoscale1(self, event): # wxGlade: BuildStationGUI.<event_handler>
        print "Event handler `onAutoscale1' not implemented!"
        event.Skip()

    def onMin1Enter(self, event): # wxGlade: BuildStationGUI.<event_handler>
        print "Event handler `onMin1Enter' not implemented!"
        event.Skip()

    def onMax1Enter(self, event): # wxGlade: BuildStationGUI.<event_handler>
        print "Event handler `onMax1Enter' not implemented!"
        event.Skip()

    def onAutoscale2(self, event): # wxGlade: BuildStationGUI.<event_handler>
        print "Event handler `onAutoscale2' not implemented!"
        event.Skip()

    def onMin2Enter(self, event): # wxGlade: BuildStationGUI.<event_handler>
        print "Event handler `onMin2Enter' not implemented!"
        event.Skip()

    def onMax2Enter(self, event): # wxGlade: BuildStationGUI.<event_handler>
        print "Event handler `onMax2Enter' not implemented!"
        event.Skip()

# end of class BuildStationGUI


if __name__ == "__main__":
    BuildStationSoftware = wx.PySimpleApp(0)
    BuildStationSoftware.SetAssertMode(wx.PYAPP_ASSERT_SUPPRESS)
    wx.InitAllImageHandlers()
    buildStationGUI = BuildStationGUI(None, -1, "")
    BuildStationSoftware.SetTopWindow(buildStationGUI)
    buildStationGUI.Show()
    BuildStationSoftware.MainLoop()
